{
    "consumes": [
        "application/json"
    ],
    "definitions": {
        "AdsProviderControllers": {
            "properties": {
                "controllers": {
                    "items": {
                        "$ref": "#/definitions/AdsProviderControllersController",
                        "description": "A controller for an ADS provider."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AdsProviderControllersController": {
            "properties": {
                "dc_address": {
                    "description": "The domain controller's address.",
                    "type": "string"
                },
                "dc_name": {
                    "description": "The domain controller's name.",
                    "type": "string"
                },
                "id": {
                    "description": "This field is the same as the domain controller's Address.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AdsProviderDomains": {
            "properties": {
                "domains": {
                    "items": {
                        "$ref": "#/definitions/AdsProviderDomainsDomain",
                        "description": "An object representing an ADS domain."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AdsProviderDomainsDomain": {
            "properties": {
                "dc_address": {
                    "description": "The domain controller's address.",
                    "type": "string"
                },
                "dc_name": {
                    "description": "The domain controller's name.",
                    "type": "string"
                },
                "dc_site": {
                    "description": "The domain controller's site.",
                    "type": "string"
                },
                "domain": {
                    "description": "The domain's name.",
                    "type": "string"
                },
                "guid": {
                    "description": "The domain's GUID.",
                    "type": "string"
                },
                "id": {
                    "description": "A unique identifier for every domain returned.",
                    "type": "string"
                },
                "netbios_name": {
                    "description": "The domain's NetBIOS name.",
                    "type": "string"
                },
                "sid": {
                    "description": "The domain's SID.",
                    "type": "string"
                },
                "site": {
                    "description": "The domain's site.",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the domain.",
                    "type": "string"
                },
                "trust_type": {
                    "description": "Specifies the type of trust with this domain.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AdsProviderSearch": {
            "properties": {
                "objects": {
                    "items": {
                        "$ref": "#/definitions/AdsProviderSearchObject",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AdsProviderSearchObject": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                }
            },
            "type": "object"
        },
        "AuditSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/AuditSettingsSettings",
                    "description": "Settings for audit."
                }
            },
            "type": "object"
        },
        "AuditSettingsSettings": {
            "properties": {
                "audited_zones": {
                    "description": "Zones that are audited when protocol auditing is enabled.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cee_log_time": {
                    "description": "Sets audit CEE forwarder to forward events past a specified date in 'Topic@YYYY-MM-DD HH:MM:SS' format",
                    "type": "string"
                },
                "cee_server_uris": {
                    "description": "URIs of backend CEE servers to which to send audit logs",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "config_auditing_enabled": {
                    "description": "Enables/disables PAPI configuration audit",
                    "type": "boolean"
                },
                "config_syslog_enabled": {
                    "description": "Enables/disables config audit syslog forwarding.",
                    "type": "boolean"
                },
                "hostname": {
                    "description": "Hostname reported in protocol events from this cluster",
                    "type": "string"
                },
                "protocol_auditing_enabled": {
                    "description": "Enables/disables auditing of I/O requests",
                    "type": "boolean"
                },
                "syslog_log_time": {
                    "description": "Sets audit syslog forwarder to forward events past a specified date in 'Topic@YYYY-MM-DD HH:MM:SS' format",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuditTopic": {
            "description": "Configuration for an audit topic.",
            "properties": {
                "id": {
                    "description": "Audit topic name.",
                    "type": "string"
                },
                "max_cached_messages": {
                    "description": "Maximum number of messages held in internal queues.",
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AuditTopicCreateParams": {
            "description": "Configuration for an audit topic.",
            "properties": {
                "max_cached_messages": {
                    "description": "Maximum number of messages held in internal queues.",
                    "minimum": 0,
                    "type": "integer"
                },
                "name": {
                    "description": "Audit topic name.",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "AuditTopicExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuditTopic"
                },
                {
                    "properties": {
                        "name": {
                            "description": "Audit topic name.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AuditTopics": {
            "properties": {
                "topics": {
                    "items": {
                        "$ref": "#/definitions/AuditTopicExtended",
                        "description": "Configuration for an audit topic."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuditTopicsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuditTopics"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AuthAccess": {
            "properties": {
                "access": {
                    "items": {
                        "$ref": "#/definitions/AuthAccessAccessItem",
                        "description": "User's permission to file info."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthAccessAccessItem": {
            "properties": {
                "file": {
                    "$ref": "#/definitions/AuthAccessAccessItemFile",
                    "description": "File to check access permissions."
                },
                "id": {
                    "descriptoin": "The user ID.",
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/AuthAccessAccessItemPermissions",
                    "description": "Permissions the users has on the file."
                },
                "relevant_aces": {
                    "description": "List of the relevant ACEs for the user.",
                    "items": {
                        "$ref": "#/definitions/AuthAccessAccessItemRelevantAce",
                        "description": "Access Control Entry on a file."
                    },
                    "type": "array"
                },
                "user": {
                    "$ref": "#/definitions/AuthAccessAccessItemUser",
                    "description": "The user's persona."
                }
            },
            "type": "object"
        },
        "AuthAccessAccessItemFile": {
            "properties": {
                "group": {
                    "description": "Group of the file",
                    "type": "string"
                },
                "mode": {
                    "description": "Mode bits on the file",
                    "type": "string"
                },
                "owner": {
                    "description": "Owner of the file.",
                    "type": "string"
                },
                "relevant_mode": {
                    "description": "Mode bits related to the user",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthAccessAccessItemPermissions": {
            "properties": {
                "dacl": {
                    "description": "Status message if the Null ACL is set.",
                    "type": "string"
                },
                "delete_child": {
                    "description": "Status message if the parent directory allows the delete_child for the user.",
                    "type": "string"
                },
                "expected": {
                    "description": "the users' ace",
                    "type": "string"
                },
                "ownership": {
                    "description": "Status message if the user owns the file",
                    "type": "string"
                },
                "sticky": {
                    "description": "Status message if the sticky bit is set.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthAccessAccessItemRelevantAce": {
            "properties": {
                "ace": {
                    "description": "The Access control entry",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthAccessAccessItemUser": {
            "properties": {
                "id": {
                    "description": "Serialized form (e.g. 'UID:0', 'USER:name', 'GID:0', 'GROUP:wheel', 'SID:S-1-1').",
                    "type": "string"
                },
                "name": {
                    "description": "Persona name, must be combined with type.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of persona when using name.",
                    "enum": [
                        "user",
                        "group",
                        "wellknown"
                    ],
                    "type": "string"
                },
                "uid": {
                    "description": "The uid of the user.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AuthGroup": {
            "description": "Configuration for a group.",
            "properties": {
                "gid": {
                    "description": "A numeric group identifier.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AuthGroupCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthGroup"
                },
                {
                    "description": "Configuration for a group.",
                    "properties": {
                        "members": {
                            "description": "Members of the group.",
                            "items": {
                                "$ref": "#/definitions/GroupMember",
                                "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                            },
                            "type": "array"
                        },
                        "name": {
                            "description": "A group name.",
                            "type": "string"
                        },
                        "sid": {
                            "description": "A security identifier.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "AuthGroupExtended": {
            "properties": {
                "dn": {
                    "type": "string"
                },
                "dns_domain": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "generated_gid": {
                    "description": "Indicates if the GID was generated.",
                    "type": "boolean"
                },
                "gid": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "id": {
                    "description": "The user or group ID.",
                    "type": "string"
                },
                "member_of": {
                    "items": {
                        "$ref": "#/definitions/GroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "name": {
                    "description": "A user or group name.",
                    "type": "string"
                },
                "provider": {
                    "description": "Specifies an authentication provider.",
                    "type": "string"
                },
                "sam_account_name": {
                    "type": "string"
                },
                "sid": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "type",
                "id"
            ],
            "type": "object"
        },
        "AuthGroups": {
            "properties": {
                "groups": {
                    "items": {
                        "$ref": "#/definitions/AuthGroupExtended",
                        "description": "Configuration for a group."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthGroupsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthGroups"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AuthId": {
            "properties": {
                "ntoken": {
                    "$ref": "#/definitions/AuthIdNtoken",
                    "description": "The security token for the currently authenticated user."
                }
            },
            "type": "object"
        },
        "AuthIdNtoken": {
            "properties": {
                "additional_id": {
                    "items": {
                        "$ref": "#/definitions/GroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "gid": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "group_sid": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "ifs_restricted": {
                    "description": "Indicates if this user has restricted access to the /ifs file system.",
                    "type": "boolean"
                },
                "local_address": {
                    "description": "The IP address of the node that is servicing the request.",
                    "type": "string"
                },
                "on_disk_group_id": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "on_disk_user_id": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "privilege": {
                    "description": "Privileges held by the currently authenticated user.",
                    "items": {
                        "$ref": "#/definitions/AuthIdNtokenPrivilegeItem",
                        "description": "A system defined privilege that may be granted to users."
                    },
                    "type": "array"
                },
                "protocol": {
                    "type": "integer"
                },
                "remote_address": {
                    "description": "The IP address of the client making the request for information.",
                    "type": "string"
                },
                "uid": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "user_sid": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "zid": {
                    "description": "The zone id that is serving the request.",
                    "type": "integer"
                },
                "zone_id": {
                    "description": "The name of the zone serving the request.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthIdNtokenPrivilegeItem": {
            "properties": {
                "id": {
                    "description": "The ID of the privilege.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the privilege.",
                    "type": "string"
                },
                "read_only": {
                    "description": "Whether the privilege is read-only.",
                    "type": "boolean"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "AuthNetgroup": {
            "properties": {
                "domainname": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "netgroup": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthNetgroups": {
            "properties": {
                "netgroups": {
                    "items": {
                        "$ref": "#/definitions/AuthNetgroup",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthPrivilege": {
            "properties": {
                "category": {
                    "description": "A general categorization of the privilege.",
                    "type": "string"
                },
                "description": {
                    "description": "A short description of the privilege.",
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the privilege.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the privilege.",
                    "type": "string"
                },
                "read_write": {
                    "description": "Whether the privilege is read-write.",
                    "type": "boolean"
                }
            },
            "required": [
                "category",
                "description",
                "id"
            ],
            "type": "object"
        },
        "AuthPrivileges": {
            "properties": {
                "privileges": {
                    "items": {
                        "$ref": "#/definitions/AuthPrivilege",
                        "description": "A system defined privilege that may be granted to users."
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthRole": {
            "description": "A role maps privileges to users and groups.",
            "properties": {
                "description": {
                    "description": "The description of the role.",
                    "type": "string"
                },
                "members": {
                    "description": "Users or groups that have this role.",
                    "items": {
                        "$ref": "#/definitions/GroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The name of the role.",
                    "type": "string"
                },
                "privileges": {
                    "description": "Privileges granted by this role.",
                    "items": {
                        "$ref": "#/definitions/AuthIdNtokenPrivilegeItem",
                        "description": "A system defined privilege that may be granted to users."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthRoleCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthRole"
                },
                {
                    "description": "A role maps privileges to users and groups.",
                    "properties": {},
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "AuthRoleExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthRole"
                },
                {
                    "properties": {
                        "id": {
                            "description": "The ID of the role.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "name",
                        "privileges",
                        "members",
                        "id"
                    ],
                    "type": "object"
                }
            ]
        },
        "AuthRoles": {
            "properties": {
                "roles": {
                    "items": {
                        "$ref": "#/definitions/AuthRoleExtended",
                        "description": "A role maps privileges to users and groups."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthRolesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthRoles"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AuthShells": {
            "description": "The list of supported shells.",
            "properties": {
                "shells": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthUser": {
            "description": "Configuration for a user.",
            "properties": {
                "email": {
                    "description": "Specifies an Email address.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Auth user is enabled.",
                    "type": "boolean"
                },
                "expiry": {
                    "description": "Epoch time at which the auth user will expire.",
                    "type": "integer"
                },
                "gecos": {
                    "description": "Sets GECOS value (usually full name).",
                    "type": "string"
                },
                "home_directory": {
                    "description": "Specifies user's home directory.",
                    "type": "string"
                },
                "password": {
                    "description": "Changes user's password.",
                    "type": "string"
                },
                "password_expires": {
                    "description": "Specifies whether the password expires.",
                    "type": "boolean"
                },
                "primary_group": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "prompt_password_change": {
                    "description": "Prompts the user to change their password on next login.",
                    "type": "boolean"
                },
                "shell": {
                    "description": "Specifies the user's shell.",
                    "type": "string"
                },
                "sid": {
                    "description": "A security identifier.",
                    "type": "string"
                },
                "uid": {
                    "description": "A numeric user identifier.",
                    "type": "integer"
                },
                "unlock": {
                    "description": "Unlocks the user's account if locked.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "AuthUserCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthUser"
                },
                {
                    "description": "Configuration for a user.",
                    "properties": {
                        "name": {
                            "description": "A user name.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "AuthUserExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/MappingUsersLookupMappingItemGroup"
                },
                {
                    "properties": {},
                    "required": [
                        "password_expires",
                        "password_expired",
                        "user_can_change_password",
                        "expired",
                        "locked",
                        "enabled",
                        "prompt_password_change"
                    ],
                    "type": "object"
                }
            ]
        },
        "AuthUsers": {
            "properties": {
                "users": {
                    "items": {
                        "$ref": "#/definitions/AuthUserExtended",
                        "description": "Configuration for a user."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthUsersExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthUsers"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AuthWellknowns": {
            "properties": {
                "wellknowns": {
                    "items": {
                        "$ref": "#/definitions/GroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ChangelistLins": {
            "properties": {
                "atime": {
                    "$ref": "#/definitions/ChangelistLinsCtime",
                    "description": ""
                },
                "ctime": {
                    "$ref": "#/definitions/ChangelistLinsCtime",
                    "description": ""
                },
                "id": {
                    "description": "The LIN number of the file associated with the entry.",
                    "type": "string"
                },
                "mtime": {
                    "$ref": "#/definitions/ChangelistLinsCtime",
                    "description": ""
                },
                "path": {
                    "description": "The path to the file associated with the entry.",
                    "type": "string"
                },
                "size": {
                    "description": "The size of the file associated with the entry.",
                    "type": "integer"
                },
                "type": {
                    "description": "Type of file.",
                    "type": "string"
                }
            },
            "required": [
                "path",
                "type",
                "id",
                "size"
            ],
            "type": "object"
        },
        "ChangelistLinsCtime": {
            "properties": {
                "nsec": {
                    "description": "Nanoseconds component of timespec.",
                    "type": "integer"
                },
                "sec": {
                    "description": "Seconds component of timespec.",
                    "type": "integer"
                }
            },
            "required": [
                "sec"
            ],
            "type": "object"
        },
        "ChangelistLinsExtended": {
            "properties": {
                "lins": {
                    "items": {
                        "$ref": "#/definitions/ChangelistLins",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CloudAccount": {
            "description": "A cloud account object",
            "properties": {
                "account_username": {
                    "description": "The username required to authenticate against the cloud service",
                    "type": "string"
                },
                "enabled": {
                    "description": "Whether or not this account should be used for cloud storage",
                    "type": "boolean"
                },
                "key": {
                    "description": "A valid authentication key for connecting to the cloud",
                    "type": "string"
                },
                "name": {
                    "description": "A unique name for this account",
                    "type": "string"
                },
                "uri": {
                    "description": "A valid URI pointing to the location of the cloud storage",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudAccountCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/CloudAccount"
                },
                {
                    "description": "A cloud account object",
                    "properties": {
                        "type": {
                            "description": "The type of cloud protocol required (e.g., 'ran', 'azure')",
                            "enum": [
                                "ran",
                                "azure"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "name",
                        "account_username",
                        "uri",
                        "key",
                        "type"
                    ],
                    "type": "object"
                }
            ]
        },
        "CloudAccountExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/CloudAccount"
                },
                {
                    "properties": {
                        "bucket": {
                            "description": "The machine generated name of the account bucket to store data",
                            "type": "string"
                        },
                        "id": {
                            "description": "A globally unique name for this account",
                            "type": "string"
                        },
                        "metadata_bucket": {
                            "description": "The machine generated name of the account bucket to store metadata",
                            "type": "string"
                        },
                        "pool": {
                            "description": "Name of the pool referencing this account.  Empty if none.",
                            "type": "string"
                        },
                        "type": {
                            "description": "The type of cloud protocol required (e.g., 'ran', 'azure')",
                            "enum": [
                                "ran",
                                "azure"
                            ],
                            "type": "string"
                        },
                        "validity": {
                            "description": "Either 'OK' or a message indicating problems with the account (Note* only shown when 'validate=1' argument is appended to URI)",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CloudAccounts": {
            "properties": {
                "accounts": {
                    "items": {
                        "$ref": "#/definitions/CloudAccountExtended",
                        "description": "A cloud account object"
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudAccountsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/CloudAccounts"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CloudJob": {
            "description": "A cloud job for archiving or recalling files",
            "properties": {
                "state": {
                    "description": "The current state of the job",
                    "enum": [
                        "resume",
                        "pause",
                        "cancel"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudJobCreateParams": {
            "description": "A cloud job for archiving or recalling files",
            "properties": {
                "directories": {
                    "description": "Directories addressed by this job",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/Empty",
                    "description": "The file filtering logic to find files for this job. (Only applicable for 'recall' jobs)"
                },
                "files": {
                    "description": "Filenames addressed by this job",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "policy": {
                    "description": "The name of an existing cloudpool policy to apply to this job. (Only applicable for 'archive' jobs)",
                    "type": "string"
                },
                "type": {
                    "description": "The type of cloud action to be performed by this job.",
                    "enum": [
                        "archive",
                        "recall",
                        "local-garbage-collection",
                        "cloud-garbage-collection",
                        "cache-writeback",
                        "cache-on-access",
                        "cache-invalidation"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "CloudJobExtended": {
            "properties": {
                "completion_time": {
                    "description": "The time at which the job was completed (if applicable)",
                    "type": "integer"
                },
                "create_time": {
                    "description": "The time at which the job was created",
                    "type": "integer"
                },
                "description": {
                    "description": "A brief description of the job contents",
                    "type": "string"
                },
                "files": {
                    "$ref": "#/definitions/CloudJobFiles",
                    "description": "The files and filters addressed by this job"
                },
                "id": {
                    "description": "The job's ID",
                    "type": "integer"
                },
                "job_engine_job": {
                    "$ref": "#/definitions/CloudJobJobEngineJob",
                    "description": "Information about the related job engine job if there is one"
                },
                "modified_time": {
                    "description": "The last time at which the job was modified",
                    "type": "integer"
                },
                "state": {
                    "description": "The current state of the job",
                    "enum": [
                        "running",
                        "paused",
                        "canceled",
                        "completed",
                        "failed"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "The type of cloud action to be performed by this job.",
                    "enum": [
                        "archive",
                        "recall",
                        "local-garbage-collection",
                        "cloud-garbage-collection",
                        "cache-writeback",
                        "cache-on-access",
                        "cache-invalidation"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudJobFiles": {
            "properties": {
                "file_matching_pattern": {
                    "$ref": "#/definitions/Empty",
                    "description": "The file filtering logic to find files for this job"
                },
                "names": {
                    "description": "A list of files to be addressed by this job.  (Note* these are only reported when audit_level is 'high'",
                    "items": {
                        "$ref": "#/definitions/CloudJobFilesName",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "The total number of files addressed by this job",
                    "type": "integer"
                },
                "total_failed": {
                    "description": "The number of files which failed",
                    "type": "integer"
                },
                "total_pending": {
                    "description": "The number of files pending action",
                    "type": "integer"
                },
                "total_processing": {
                    "description": "The number of files currently being processed",
                    "type": "integer"
                },
                "total_succeeded": {
                    "description": "The total number of files successfully completed",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CloudJobFilesName": {
            "properties": {
                "name": {
                    "description": "The full path name of a file to be acted on by this job",
                    "type": "string"
                },
                "state": {
                    "description": "The current state of this file",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudJobJobEngineJob": {
            "properties": {
                "id": {
                    "description": "ID of the related job engine job",
                    "type": "integer"
                },
                "state": {
                    "description": "The state of the related job engine job",
                    "enum": [
                        "null",
                        "running",
                        "user-paused",
                        "system-paused",
                        "policy-paused",
                        "waiting",
                        "user-canceled",
                        "system-canceled",
                        "failed",
                        "succeeded"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudJobs": {
            "properties": {
                "jobs": {
                    "items": {
                        "$ref": "#/definitions/CloudJobExtended",
                        "description": "A cloud job for archiving or recalling files"
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudJobsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/CloudJobs"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CloudJobsFiles": {
            "properties": {
                "files": {
                    "items": {
                        "description": "File associated with a cloud job",
                        "type": "string"
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudPool": {
            "description": "A group of cloud accounts which will be the destination for file stubbing",
            "properties": {
                "accounts": {
                    "description": "A list of valid names for the accounts in this pool",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "A brief description of this pool",
                    "type": "string"
                },
                "name": {
                    "description": "A unique name for this pool",
                    "type": "string"
                },
                "vendor": {
                    "description": "A string identifier of the cloud services vendor",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudPoolCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/CloudPool"
                },
                {
                    "description": "A group of cloud accounts which will be the destination for file stubbing",
                    "properties": {
                        "type": {
                            "description": "The type of cloud protocol required (e.g., 'ran', 'azure')",
                            "enum": [
                                "ran",
                                "azure"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "type",
                        "accounts",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "CloudPoolExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/CloudPool"
                },
                {
                    "properties": {
                        "id": {
                            "description": "A unique name for this pool",
                            "type": "string"
                        },
                        "type": {
                            "description": "The type of cloud protocol required (e.g., 'ran', 'azure')",
                            "enum": [
                                "ran",
                                "azure"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CloudPools": {
            "properties": {
                "pools": {
                    "items": {
                        "$ref": "#/definitions/CloudPoolExtended",
                        "description": "A group of cloud accounts which will be the destination for file stubbing"
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudPoolsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/CloudPools"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CloudSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/CloudSettingsSettings",
                    "description": ""
                }
            },
            "type": "object"
        },
        "CloudSettingsSettings": {
            "properties": {
                "archive_snapshot_files": {
                    "description": "Whether files which have had a snapshot taken should be moved to the cloud.",
                    "enum": [
                        "enabled",
                        "disabled"
                    ],
                    "type": "string"
                },
                "available_cluster_guids": {
                    "description": "A list of guids for clusters which have used this cluster for cloud storage.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cloud_policy_defaults": {
                    "$ref": "#/definitions/Empty",
                    "description": "The default filepool policy values for cloud pools."
                },
                "cluster_access": {
                    "description": "A list of guids for which this cluster has ownership of cloud storage.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "max_retries_archive": {
                    "description": "The maximum number of times to retry an archive operation before failing.",
                    "type": "integer"
                },
                "max_retries_cache_invalidation": {
                    "description": "The maximum number of times to retry a cache invalidation operation before failing.",
                    "type": "integer"
                },
                "max_retries_cloud_garbage_collection": {
                    "description": "The maximum number of times to retry cloud garbage collection before failing.",
                    "type": "integer"
                },
                "max_retries_local_garbage_collection": {
                    "description": "The maximum number of times to retry local garbage collection before failing.",
                    "type": "integer"
                },
                "max_retries_read_ahead": {
                    "description": "The maximum number of times to retry a read ahead operation before failing.",
                    "type": "integer"
                },
                "max_retries_recall": {
                    "description": "The maximum number of times to retry a recall operation before failing.",
                    "type": "integer"
                },
                "max_retries_writeback": {
                    "description": "The maximum number of times to retry a writeback operation before failing.",
                    "type": "integer"
                },
                "retry_coefficient_archive": {
                    "description": "Coefficients in the quadratic function for determining the rest period between successive archive attempts.",
                    "type": "string"
                },
                "retry_coefficient_cache_invalidation": {
                    "description": "Coefficients in the quadratic function for determining the rest period between successive cache invalidation attempts.",
                    "type": "string"
                },
                "retry_coefficient_cloud_garbage_collection": {
                    "description": "Coefficients in the quadratic function for determining the rest period between successive cloud garbage collection attempts.",
                    "type": "string"
                },
                "retry_coefficient_local_garbage_collection": {
                    "description": "Coefficients in the quadratic function for determining the rest period between successive local garbage collection attempts.",
                    "type": "string"
                },
                "retry_coefficient_read_ahead": {
                    "description": "Coefficients in the quadratic function for determining the rest period between successive read ahead attempts.",
                    "type": "string"
                },
                "retry_coefficient_recall": {
                    "description": "Coefficients in the quadratic function for determining the rest period between successive recall attempts.",
                    "type": "string"
                },
                "retry_coefficient_writeback": {
                    "description": "Coefficients in the quadratic function for determining the rest period between successive writeback attempts.",
                    "type": "string"
                },
                "sleep_timeout_archive": {
                    "$ref": "#/definitions/CloudSettingsSettingsSleepTimeoutArchive",
                    "description": "Amount of time to wait between successive file archive operations."
                },
                "sleep_timeout_cache_invalidation": {
                    "$ref": "#/definitions/CloudSettingsSettingsSleepTimeoutArchive",
                    "description": "Amount of time to wait between successive file cache_invalidation operations."
                },
                "sleep_timeout_cloud_garbage_collection": {
                    "$ref": "#/definitions/CloudSettingsSettingsSleepTimeoutArchive",
                    "description": "Amount of time to wait between successive file cloud garbage collection operations."
                },
                "sleep_timeout_local_garbage_collection": {
                    "$ref": "#/definitions/CloudSettingsSettingsSleepTimeoutArchive",
                    "description": "Amount of time to wait between successive file local garbage collection operations."
                },
                "sleep_timeout_read_ahead": {
                    "$ref": "#/definitions/CloudSettingsSettingsSleepTimeoutArchive",
                    "description": "Amount of time to wait between successive file read ahead operations."
                },
                "sleep_timeout_recall": {
                    "$ref": "#/definitions/CloudSettingsSettingsSleepTimeoutArchive",
                    "description": "Amount of time to wait between successive file recall operations."
                },
                "sleep_timeout_writeback": {
                    "$ref": "#/definitions/CloudSettingsSettingsSleepTimeoutArchive",
                    "description": "Amount of time to wait between successive file writeback operations."
                }
            },
            "type": "object"
        },
        "CloudSettingsSettingsSleepTimeoutArchive": {
            "properties": {
                "recovery_with_tasks": {
                    "description": "Sleep timeout for a recovery thread with pending tasks",
                    "type": "integer"
                },
                "recovery_without_tasks": {
                    "description": "Sleep timeout for a recovery thread without pending tasks",
                    "type": "integer"
                },
                "with_tasks": {
                    "description": "Sleep timeout for a non-recovery thread with pending tasks",
                    "type": "integer"
                },
                "without_tasks": {
                    "description": "Sleep timeout for a non-recovery thread without pending tasks",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ClusterConfig": {
            "properties": {
                "description": {
                    "description": "Customer configurable description.",
                    "type": "string"
                },
                "devices": {
                    "items": {
                        "$ref": "#/definitions/ClusterConfigDevice",
                        "description": ""
                    },
                    "type": "array"
                },
                "encoding": {
                    "description": "Default encoding.",
                    "type": "string"
                },
                "guid": {
                    "description": "Cluster GUID.",
                    "type": "string"
                },
                "is_compliance": {
                    "description": "If true, the cluster is in compliance mode.  Compliance mode clusters do not allow root access and have stricter WORM (Write Once Read Many) features for retaining data in compliance with U.S. Securities and Exchange Commission rule 17a-4.",
                    "type": "boolean"
                },
                "is_rolling_upgrade": {
                    "description": "If true, the cluster is currently performing a rolling upgrade.",
                    "type": "boolean"
                },
                "join_mode": {
                    "description": "Node join mode: 'manual', 'automatic', or 'secure'.",
                    "type": "string"
                },
                "local_devid": {
                    "description": "Device ID of the queried node.",
                    "type": "integer"
                },
                "local_lnn": {
                    "description": "Device logical node number of the queried node.",
                    "type": "integer"
                },
                "local_serial": {
                    "description": "Device serial number of the queried node.",
                    "type": "string"
                },
                "name": {
                    "description": "Cluster name.",
                    "type": "string"
                },
                "onefs_version": {
                    "$ref": "#/definitions/ClusterConfigOnefsVersion",
                    "description": ""
                },
                "timezone": {
                    "$ref": "#/definitions/ClusterConfigTimezone",
                    "description": ""
                }
            },
            "required": [
                "local_devid",
                "is_compliance",
                "description",
                "encoding",
                "join_mode",
                "local_serial",
                "devices",
                "is_rolling_upgrade",
                "timezone",
                "onefs_version",
                "guid",
                "local_lnn",
                "name"
            ],
            "type": "object"
        },
        "ClusterConfigDevice": {
            "properties": {
                "devid": {
                    "description": "Device ID.",
                    "type": "integer"
                },
                "guid": {
                    "description": "Device GUID.",
                    "type": "string"
                },
                "lnn": {
                    "description": "Device logical node number.",
                    "type": "integer"
                }
            },
            "required": [
                "guid",
                "devid",
                "lnn"
            ],
            "type": "object"
        },
        "ClusterConfigOnefsVersion": {
            "properties": {
                "build": {
                    "description": "OneFS build string.",
                    "type": "string"
                },
                "release": {
                    "description": "Kernel release number.",
                    "type": "string"
                },
                "revision": {
                    "description": "OneFS build number.",
                    "type": "string"
                },
                "type": {
                    "description": "Kernel release type.",
                    "type": "string"
                },
                "version": {
                    "description": "Kernel full version information.",
                    "type": "string"
                }
            },
            "required": [
                "release",
                "version",
                "type",
                "build",
                "revision"
            ],
            "type": "object"
        },
        "ClusterConfigTimezone": {
            "properties": {
                "abbreviation": {
                    "description": "Timezone abbreviation.",
                    "type": "string"
                },
                "custom": {
                    "description": "Customer timezone information.",
                    "type": "string"
                },
                "name": {
                    "description": "Timezone full name.",
                    "type": "string"
                },
                "path": {
                    "description": "Timezone hierarchical name.",
                    "type": "string"
                }
            },
            "required": [
                "abbreviation",
                "path",
                "name",
                "custom"
            ],
            "type": "object"
        },
        "ClusterIdentity": {
            "description": "Unprivileged cluster information for display when logging in.",
            "properties": {
                "description": {
                    "description": "A description of the cluster.",
                    "type": "string"
                },
                "logon": {
                    "$ref": "#/definitions/ClusterIdentityLogon",
                    "description": "The information displayed when a user logs in to the cluster."
                },
                "name": {
                    "description": "The name of the cluster.",
                    "type": "string"
                }
            },
            "required": [
                "description",
                "name"
            ],
            "type": "object"
        },
        "ClusterIdentityLogon": {
            "properties": {
                "motd": {
                    "description": "The message of the day.",
                    "type": "string"
                },
                "motd_header": {
                    "description": "The header to the message of the day.",
                    "type": "string"
                }
            },
            "required": [
                "motd_header",
                "motd"
            ],
            "type": "object"
        },
        "ClusterStatfs": {
            "description": "Filesystem statistics",
            "properties": {
                "f_bavail": {
                    "description": "The number of free blocks available to non-superuser.",
                    "type": "integer"
                },
                "f_bfree": {
                    "description": "The number of free blocks in the filesystem.",
                    "type": "integer"
                },
                "f_blocks": {
                    "description": "The total number of data blocks in the filesystem.",
                    "type": "integer"
                },
                "f_bsize": {
                    "description": "The filesystem fragment size.",
                    "type": "integer"
                },
                "f_ffree": {
                    "description": "The number of free nodes available to non-superuser.",
                    "type": "integer"
                },
                "f_files": {
                    "description": "The total number of file nodes in the filesystem.",
                    "type": "integer"
                },
                "f_flags": {
                    "description": "A copy of the mount exported flags.",
                    "type": "integer"
                },
                "f_fstypename": {
                    "description": "The filesystem type name.",
                    "type": "string"
                },
                "f_iosize": {
                    "description": "The optimal transfer block size.",
                    "type": "integer"
                },
                "f_mntfromname": {
                    "description": "The name of the mounted filesystem.",
                    "type": "string"
                },
                "f_mntonname": {
                    "description": "The directory that the filesystem is mounted on.",
                    "type": "string"
                },
                "f_namemax": {
                    "description": "The maximum length of a file name.",
                    "type": "integer"
                },
                "f_owner": {
                    "description": "The ID of the user that mounted the filesystem.",
                    "type": "integer"
                },
                "f_type": {
                    "description": "The type of the filesystem.",
                    "type": "integer"
                },
                "f_version": {
                    "description": "The structure version number.",
                    "type": "integer"
                }
            },
            "required": [
                "f_type",
                "f_bsize",
                "f_bavail",
                "f_owner",
                "f_iosize",
                "f_files",
                "f_mntfromname",
                "f_blocks",
                "f_ffree",
                "f_bfree",
                "f_mntonname",
                "f_namemax",
                "f_version",
                "f_flags",
                "f_fstypename"
            ],
            "type": "object"
        },
        "ClusterTime": {
            "properties": {
                "time": {
                    "description": "The current time on the cluster.",
                    "type": "integer"
                }
            },
            "required": [
                "time"
            ],
            "type": "object"
        },
        "CompatibilitiesClassActive": {
            "properties": {
                "active": {
                    "items": {
                        "$ref": "#/definitions/CompatibilitiesClassActiveActiveItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CompatibilitiesClassActiveActiveItem": {
            "properties": {
                "class_1": {
                    "description": "The first class in an active compatibility",
                    "type": "string"
                },
                "class_2": {
                    "description": "The second class in an active compatibility",
                    "type": "string"
                },
                "id": {
                    "description": "The id of this active compatibility",
                    "type": "integer"
                }
            },
            "required": [
                "class_2",
                "class_1",
                "id"
            ],
            "type": "object"
        },
        "CompatibilitiesClassActiveExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/CompatibilitiesClassActive"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CompatibilitiesClassActiveItem": {
            "properties": {
                "assess": {
                    "description": "Do not create compatibility, only assess if creation is possible.",
                    "type": "boolean"
                },
                "class_1": {
                    "description": "The first class in the desired compatibility",
                    "type": "string"
                },
                "class_2": {
                    "description": "The second class in the desired compatibility",
                    "type": "string"
                }
            },
            "required": [
                "class_2",
                "class_1"
            ],
            "type": "object"
        },
        "CompatibilitiesClassAvailable": {
            "properties": {
                "available": {
                    "items": {
                        "$ref": "#/definitions/CompatibilitiesClassAvailableAvailableItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompatibilitiesClassAvailableAvailableItem": {
            "properties": {
                "class_1": {
                    "description": "The first class in an available compatibility",
                    "type": "string"
                },
                "class_2": {
                    "description": "The second class in an available compatibility",
                    "type": "string"
                }
            },
            "required": [
                "class_2",
                "class_1"
            ],
            "type": "object"
        },
        "CompatibilitiesSsdActive": {
            "properties": {
                "active": {
                    "items": {
                        "$ref": "#/definitions/CompatibilitiesSsdActiveActiveItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CompatibilitiesSsdActiveActiveItem": {
            "properties": {
                "class_1": {
                    "description": "The node class of an ssd compatibility",
                    "type": "string"
                },
                "class_2": {
                    "description": "The optional second class turned on in an ssd compatibility",
                    "type": "string"
                },
                "id": {
                    "description": "The id of this ssd compatibility",
                    "type": "integer"
                }
            },
            "required": [
                "class_1",
                "id"
            ],
            "type": "object"
        },
        "CompatibilitiesSsdActiveExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/CompatibilitiesSsdActive"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CompatibilitiesSsdActiveItem": {
            "properties": {
                "assess": {
                    "description": "Do not create ssd compatibility, only assess if creation is possible.",
                    "type": "boolean"
                },
                "class_1": {
                    "description": "The node class of the desired ssd compatibility",
                    "type": "string"
                },
                "class_2": {
                    "description": "The optional second node class to turn on ssd compatibility",
                    "type": "string"
                }
            },
            "required": [
                "class_1"
            ],
            "type": "object"
        },
        "CompatibilitiesSsdAvailable": {
            "properties": {
                "available": {
                    "items": {
                        "$ref": "#/definitions/CompatibilitiesSsdAvailableAvailableItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompatibilitiesSsdAvailableAvailableItem": {
            "properties": {
                "class": {
                    "description": "The node class of an ssd compatibility",
                    "type": "string"
                }
            },
            "required": [
                "class"
            ],
            "type": "object"
        },
        "CreateCloudAccountResponse": {
            "properties": {
                "id": {
                    "description": "The name of the new account",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateCloudJobResponse": {
            "properties": {
                "id": {
                    "description": "The id of the new job",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CreateCloudPoolResponse": {
            "properties": {
                "id": {
                    "description": "The name of the new pool",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateCompatibilitiesClassActiveItemResponse": {
            "properties": {
                "merges": {
                    "description": "A list of all merges that will occure given this compatibility operation",
                    "items": {
                        "$ref": "#/definitions/CreateCompatibilitiesClassActiveItemResponseMerge",
                        "description": ""
                    },
                    "type": "array"
                },
                "message": {
                    "description": "A string describing the effects of the compatibily operation.",
                    "type": "string"
                },
                "splits": {
                    "description": "A list of all splits that will occure given this compatibility operation",
                    "items": {
                        "$ref": "#/definitions/CreateCompatibilitiesClassActiveItemResponseSplit",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "message"
            ],
            "type": "object"
        },
        "CreateCompatibilitiesClassActiveItemResponseMerge": {
            "properties": {
                "ids": {
                    "description": "The nodepool ids that will be merged",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "names": {
                    "description": "The nodepool names that will be merged, in the sameorder as the ids",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "result_name": {
                    "description": "The name of the nodepool all others will merge into",
                    "type": "string"
                }
            },
            "required": [
                "result_name",
                "ids",
                "names"
            ],
            "type": "object"
        },
        "CreateCompatibilitiesClassActiveItemResponseSplit": {
            "properties": {
                "id": {
                    "description": "The nodepool id that will be split",
                    "type": "integer"
                },
                "name": {
                    "description": "The nodepool name that will be split",
                    "type": "string"
                },
                "tier_name": {
                    "description": "A message explaining how the nodepools tier membership will change.",
                    "type": "string"
                }
            },
            "required": [
                "tier_name",
                "id",
                "name"
            ],
            "type": "object"
        },
        "CreateFilepoolPolicyResponse": {
            "properties": {
                "id": {
                    "description": "The name of the new policy",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateJobJobResponse": {
            "properties": {
                "id": {
                    "description": "The ID of the job.",
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateNfsAliaseResponse": {
            "description": "Return value from a successful create/modify",
            "properties": {
                "health": {
                    "description": "The health of the alias.",
                    "enum": [
                        "good",
                        "illegal file type",
                        "illegal path",
                        "name conflict",
                        "not exported",
                        "path not found",
                        "unknown"
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "String representing the unique per-zone location of this alias",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateQuotaReportResponse": {
            "properties": {
                "id": {
                    "description": "ID of created item that can be used to refer to item in the collection-item resource path.",
                    "type": "integer"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateResponse": {
            "properties": {
                "id": {
                    "description": "ID of created item that can be used to refer to item in the collection-item resource path.",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateSnapshotAliaseResponse": {
            "properties": {
                "id": {
                    "description": "The ID of the newly created snapshot alias.",
                    "type": "integer"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateSnapshotLockResponse": {
            "properties": {
                "id": {
                    "description": "The ID of the newly created snapshot lock.",
                    "type": "integer"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateSnapshotScheduleResponse": {
            "properties": {
                "id": {
                    "description": "The ID of the newly created snapshot schedule.",
                    "type": "integer"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateStoragepoolNodepoolResponse": {
            "properties": {
                "id": {
                    "description": "The system ID of the new object.",
                    "type": "integer"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateSyncReportsRotateItemResponse": {
            "description": "Force rotation of reports.",
            "properties": {
                "message": {
                    "description": "A message about the status of the task.",
                    "type": "string"
                }
            },
            "required": [
                "message"
            ],
            "type": "object"
        },
        "DebugStats": {
            "description": "Statistics for all the methods of all URIs in the Platform API.",
            "properties": {
                "DESCRIBE": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": ""
                },
                "UNKNOWN": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": ""
                },
                "handlers": {
                    "items": {
                        "$ref": "#/definitions/DebugStatsHandler",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DebugStatsHandler": {
            "properties": {
                "DELETE": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": ""
                },
                "GET": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": ""
                },
                "HEAD": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": ""
                },
                "POST": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": ""
                },
                "PUT": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": ""
                },
                "UNSUPPORTED": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": ""
                },
                "name": {
                    "descriprion": "The URI.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DebugStatsUnknown": {
            "descriprion": "Per-method statistics.",
            "properties": {
                "calls": {
                    "descriprion": "The number of calls.",
                    "type": "integer"
                },
                "errors": {
                    "descriprion": "The number of errors.",
                    "type": "integer"
                },
                "time": {
                    "descriprion": "The total amount of time spent in this method.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DedupeDedupeSummary": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/DedupeDedupeSummarySummary",
                    "description": ""
                }
            },
            "type": "object"
        },
        "DedupeDedupeSummarySummary": {
            "properties": {
                "block_size": {
                    "description": "Size in bytes of a filesystem block.",
                    "type": "number"
                },
                "estimated_physical_blocks": {
                    "description": "Estimated number of physical blocks deduped.",
                    "type": "number"
                },
                "estimated_saved_blocks": {
                    "description": "Estimated number of physical blocks saved by dedupe.",
                    "type": "number"
                },
                "logical_blocks": {
                    "description": "Number of logical blocks deduped.",
                    "type": "number"
                },
                "saved_logical_blocks": {
                    "description": "Number of logical blocks saved by dedupe.",
                    "type": "number"
                },
                "total_blocks": {
                    "description": "Total physical blocks in the cluster.",
                    "type": "number"
                },
                "used_blocks": {
                    "description": "Total physical blocks used in the cluster.",
                    "type": "number"
                }
            },
            "required": [
                "estimated_saved_blocks",
                "used_blocks",
                "estimated_physical_blocks",
                "saved_logical_blocks",
                "total_blocks",
                "logical_blocks",
                "block_size"
            ],
            "type": "object"
        },
        "DedupeReport": {
            "properties": {
                "phase": {
                    "description": "The phase of the job this report was generated for.",
                    "type": "integer"
                },
                "results": {
                    "description": "The report results.",
                    "type": "string"
                },
                "time": {
                    "description": "The time this report was generated in Unix epoch seconds.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DedupeReportExtended": {
            "properties": {
                "dedupe_percent": {
                    "description": "The amount of space the directory trees under this job's paths now take up, compared to what they would take up if not deduplicated (0 ~ 100).",
                    "type": "string"
                },
                "elapsed_time": {
                    "description": "The amount of time in seconds it took to run this job.",
                    "type": "integer"
                },
                "id": {
                    "description": "An unique identifier for this report.",
                    "type": "integer"
                },
                "job_id": {
                    "description": "The job id this report refers to.",
                    "type": "integer"
                },
                "job_type": {
                    "description": "The type of dedupe job this report refers to.",
                    "type": "string"
                },
                "reports": {
                    "description": "A list of report entries for this dedupe job.",
                    "items": {
                        "$ref": "#/definitions/DedupeReport",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DedupeReports": {
            "properties": {
                "reports": {
                    "items": {
                        "$ref": "#/definitions/DedupeReportExtended",
                        "description": "A report for a dedupe job."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DedupeReportsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/DedupeReports"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "DedupeSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/DedupeSettingsSettings",
                    "description": "Dedupe settings."
                }
            },
            "type": "object"
        },
        "DedupeSettingsExtended": {
            "description": "Dedupe settings.",
            "properties": {
                "assess_paths": {
                    "description": "The paths that will be assessed.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "paths": {
                    "description": "The paths that will be deduped.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DedupeSettingsSettings": {
            "properties": {
                "assess_paths": {
                    "description": "The paths that will be assessed.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "dedupe_schedule": {
                    "description": "The schedule for the dedupe job.",
                    "type": "string"
                },
                "paths": {
                    "description": "The paths that will be deduped.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Empty": {
            "properties": {},
            "type": "object"
        },
        "Error": {
            "properties": {
                "code": {
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "EventEvent": {
            "properties": {
                "acknowledged_time": {
                    "description": "The time in epoch seconds at which the event was acknowledged. Set to null when event has not been acknowledged.",
                    "type": "integer"
                },
                "coalesced_by_id": {
                    "description": "The ID of the parent event that coalesced this event. Set to null when event has not been coalesced.",
                    "type": "string"
                },
                "devid": {
                    "description": "The ID of the device the event refers to. When set to 0, indicates a cluster event.",
                    "type": "integer"
                },
                "end": {
                    "description": "The time in epoch seconds at which the event's lifetime ended. Set to null when the event is still alive.",
                    "type": "integer"
                },
                "event_type": {
                    "description": "A number indicating the class or type of the event.",
                    "type": "integer"
                },
                "extreme_severity": {
                    "description": "A severity assigned to events that can change severity during their lifetime.",
                    "type": "string"
                },
                "extreme_value": {
                    "description": "A value corresponding to extreme_severity assignment.",
                    "type": "number"
                },
                "id": {
                    "description": "A unique (across all event_types and instances) identifier for an event.",
                    "type": "string"
                },
                "is_coalescing": {
                    "description": "If non-zero this field represents the coalescer type.",
                    "type": "integer"
                },
                "message": {
                    "description": "A message containing information about the event.",
                    "type": "string"
                },
                "severity": {
                    "description": "The current severity of the event.",
                    "type": "string"
                },
                "specifiers": {
                    "$ref": "#/definitions/Empty",
                    "description": "Key-value pairs containing information specific to this event."
                },
                "start": {
                    "description": "The time in epoch seconds at which the event's lifetime begins.",
                    "type": "integer"
                },
                "update_count": {
                    "description": "The number of times (some parameter of) the event was updated during its lifetime.",
                    "type": "integer"
                },
                "value": {
                    "description": "A value associated with the event.",
                    "type": "number"
                }
            },
            "required": [
                "specifiers",
                "is_coalescing",
                "extreme_value",
                "severity",
                "devid",
                "value",
                "start",
                "extreme_severity",
                "message",
                "id",
                "event_type"
            ],
            "type": "object"
        },
        "EventEvents": {
            "properties": {
                "events": {
                    "items": {
                        "$ref": "#/definitions/EventEvent",
                        "description": "An object representing an event on the cluster."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "EventEventsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventEvents"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "FilepoolDefaultPolicy": {
            "description": "A default filepool policy object",
            "properties": {
                "default-policy": {
                    "$ref": "#/definitions/FilepoolDefaultPolicyDefault-Policy",
                    "description": "A default filepool policy object"
                }
            },
            "type": "object"
        },
        "FilepoolDefaultPolicyAction": {
            "allOf": [
                {
                    "$ref": "#/definitions/FilepoolDefaultPolicyDefault-PolicyAction"
                },
                {
                    "properties": {},
                    "required": [
                        "action_param"
                    ],
                    "type": "object"
                }
            ]
        },
        "FilepoolDefaultPolicyDefault-Policy": {
            "properties": {
                "actions": {
                    "description": "A list of actions to be taken for matching files",
                    "items": {
                        "$ref": "#/definitions/FilepoolDefaultPolicyDefault-PolicyAction",
                        "description": "An action to apply to a file matching the policy"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FilepoolDefaultPolicyDefault-PolicyAction": {
            "properties": {
                "action_param": {
                    "description": "Varies according to action_type",
                    "type": "string"
                },
                "action_type": {
                    "enum": [
                        "set_requested_protection",
                        "set_data_access_pattern",
                        "enable_coalescer",
                        "apply_data_storage_policy",
                        "apply_snapshot_storage_policy",
                        "set_cloudpool_policy"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "action_type"
            ],
            "type": "object"
        },
        "FilepoolDefaultPolicyExtended": {
            "properties": {
                "actions": {
                    "items": {
                        "$ref": "#/definitions/FilepoolDefaultPolicyAction",
                        "description": "An action to apply to a file matching the policy"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FilepoolPolicies": {
            "properties": {
                "policies": {
                    "items": {
                        "$ref": "#/definitions/FilepoolPolicyExtended",
                        "description": "A filepool policy object"
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "FilepoolPolicy": {
            "description": "A filepool policy object",
            "properties": {
                "actions": {
                    "description": "A list of actions to be taken for matching files",
                    "items": {
                        "$ref": "#/definitions/FilepoolDefaultPolicyAction",
                        "description": "An action to apply to a file matching the policy"
                    },
                    "type": "array"
                },
                "apply_order": {
                    "description": "The order in which this policy should be applied (relative to other policies)",
                    "type": "integer"
                },
                "description": {
                    "description": "A description for this policy",
                    "type": "string"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/FilepoolPolicyFileMatchingPattern",
                    "description": "The file matching rules for this policy"
                },
                "name": {
                    "description": "A unique name for this policy",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FilepoolPolicyAction": {
            "properties": {
                "action_param": {
                    "description": "Varies according to action_type",
                    "type": "string"
                },
                "action_type": {
                    "enum": [
                        "set_requested_protection",
                        "set_data_access_pattern",
                        "enable_coalescer",
                        "apply_data_storage_policy",
                        "apply_snapshot_storage_policy",
                        "set_cloudpool_policy"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "action_type"
            ],
            "type": "object"
        },
        "FilepoolPolicyActionCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/FilepoolPolicyAction"
                },
                {
                    "properties": {},
                    "required": [
                        "action_param"
                    ],
                    "type": "object"
                }
            ]
        },
        "FilepoolPolicyCreateParams": {
            "description": "A filepool policy object",
            "properties": {
                "actions": {
                    "description": "A list of actions to be taken for matching files",
                    "items": {
                        "$ref": "#/definitions/FilepoolPolicyActionCreateParams",
                        "description": "An action to apply to a file matching the policy"
                    },
                    "type": "array"
                },
                "apply_order": {
                    "description": "The order in which this policy should be applied (relative to other policies)",
                    "type": "integer"
                },
                "description": {
                    "description": "A description for this policy",
                    "type": "string"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/FilepoolPolicyFileMatchingPattern",
                    "description": "The file matching rules for this policy"
                },
                "name": {
                    "description": "A unique name for this policy",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "file_matching_pattern"
            ],
            "type": "object"
        },
        "FilepoolPolicyExtended": {
            "properties": {
                "actions": {
                    "description": "A list of actions to be taken for matching files",
                    "items": {
                        "$ref": "#/definitions/FilepoolPolicyAction",
                        "description": "An action to apply to a file matching the policy"
                    },
                    "type": "array"
                },
                "apply_order": {
                    "description": "The order in which this policy should be applied (relative to other policies)",
                    "type": "integer"
                },
                "birth_cluster_id": {
                    "description": "The guid assigned to the cluster on which the account was created",
                    "type": "string"
                },
                "description": {
                    "description": "A description for this policy",
                    "type": "string"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/FilepoolPolicyFileMatchingPattern",
                    "description": "The file matching rules for this policy"
                },
                "id": {
                    "description": "A unique identifier for this policy",
                    "type": "integer"
                },
                "name": {
                    "description": "A unique name for this policy",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FilepoolPolicyFileMatchingPattern": {
            "properties": {
                "or_criteria": {
                    "items": {
                        "$ref": "#/definitions/FilepoolPolicyFileMatchingPatternOrCriteriaItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "or_criteria"
            ],
            "type": "object"
        },
        "FilepoolPolicyFileMatchingPatternOrCriteriaItem": {
            "properties": {
                "and_criteria": {
                    "items": {
                        "$ref": "#/definitions/FilepoolPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "and_criteria"
            ],
            "type": "object"
        },
        "FilepoolPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem": {
            "properties": {
                "attribute_exists": {
                    "description": "Indicates whether the existence of an attribute indicates a match (valid only with 'type' = 'custom_attribute')",
                    "type": "boolean"
                },
                "begins_with": {
                    "description": "True to match files recursively under the given path. (valid only with 'type' = 'path')",
                    "type": "boolean"
                },
                "case_sensitive": {
                    "description": "True to indicate case sensitivity when comparing file attributes (valid only with 'type' = 'name' or 'type' = 'path')",
                    "type": "boolean"
                },
                "field": {
                    "description": "File attribute field name to be compared in a custom comparison (valid only with 'type' = 'custom_attribute')",
                    "type": "string"
                },
                "operator": {
                    "description": "The comparison operator to use while comparing an attribute with its value",
                    "enum": [
                        "==",
                        "!=",
                        ">",
                        ">=",
                        "<",
                        "<=",
                        "!"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "The file attribute to be compared to a given value",
                    "enum": [
                        "name",
                        "path",
                        "link_count",
                        "accessed_time",
                        "birth_time",
                        "changed_time",
                        "metadata_changed_time",
                        "size",
                        "file_type",
                        "custom_attribute"
                    ],
                    "type": "string"
                },
                "units": {
                    "description": "Size unit value. One of 'B','KB','MB','GB','TB','PB','EB' (valid only with 'type' = 'size')",
                    "type": "string"
                },
                "use_relative_time": {
                    "description": "Whether time units refer to a calendar date and time (e.g., Jun 3, 2009) or a relative duration (e.g., 2 weeks) (valid only with 'type' in {accessed_time, birth_time, changed_time or metadata_changed_time}",
                    "type": "boolean"
                },
                "value": {
                    "description": "The value to be compared against a file attribute",
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "FilepoolTemplates": {
            "properties": {
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "templates": {
                    "items": {
                        "$ref": "#/definitions/FilepoolPolicyExtended",
                        "description": "A filepool policy object"
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "FsaResult": {
            "properties": {
                "pinned": {
                    "description": "True if the result is pinned to prevent automatic removal.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "FsaResultExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/FsaResult"
                },
                {
                    "properties": {
                        "begin_time": {
                            "description": "Unix Epoch time of start of results collection job.",
                            "type": "integer"
                        },
                        "content_path": {
                            "description": "Path to results database.",
                            "type": "string"
                        },
                        "delete_link": {
                            "description": "Resource to call with DELETE to remove results..",
                            "type": "string"
                        },
                        "end_time": {
                            "description": "Unix Epoch time of end of results collection job.",
                            "type": "integer"
                        },
                        "fsa_state": {
                            "description": "State of the result set.",
                            "enum": [
                                "unknown",
                                "work",
                                "reduce",
                                "publish"
                            ],
                            "type": "string"
                        },
                        "id": {
                            "description": "The system generated result set ID.",
                            "type": "integer"
                        },
                        "job_state": {
                            "description": "State information about the FSA Job.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "properties_link": {
                            "description": "Resource to call to get result properties.",
                            "type": "string"
                        },
                        "version": {
                            "description": "FSA version used to create result set.",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "properties_link",
                        "job_state",
                        "fsa_state",
                        "pinned",
                        "version",
                        "end_time",
                        "begin_time",
                        "id"
                    ],
                    "type": "object"
                }
            ]
        },
        "FsaResults": {
            "properties": {
                "results": {
                    "items": {
                        "$ref": "#/definitions/FsaResultExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FsaResultsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/FsaResults"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "FsaSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/FsaSettingsSettings",
                    "description": ""
                }
            },
            "type": "object"
        },
        "FsaSettingsSettings": {
            "properties": {
                "default_template": {
                    "description": "Name of question template to use for new FSA jobs.",
                    "type": "string"
                },
                "disk_usage_depth": {
                    "description": "Maximum directory depth used for disk_usage question if not specified in the question.",
                    "type": "integer"
                },
                "max_age": {
                    "description": "Maximum age of non-pinned results in seconds.",
                    "type": "integer"
                },
                "max_count": {
                    "description": "Maximum number of non-pinned result sets to keep.",
                    "type": "integer"
                },
                "squash_depth": {
                    "description": "Squash depth to use for squash binning questions if not specified in the question.",
                    "type": "integer"
                },
                "top_n_max": {
                    "description": "Maximum number of items in a Top-N question result if not specified in the question.",
                    "type": "integer"
                },
                "use_snapshot": {
                    "description": "If true, use a snapshot for consistency, otherwise analyze head.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "GroupMember": {
            "description": "A persona consists of either a 'type' and 'name' or a 'ID'.",
            "properties": {
                "id": {
                    "description": "Serialized form (e.g. 'UID:0', 'USER:name', 'GID:0', 'GROUP:wheel', 'SID:S-1-1').",
                    "type": "string"
                },
                "name": {
                    "description": "Persona name, must be combined with type.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of persona when using name.",
                    "enum": [
                        "user",
                        "group",
                        "wellknown"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupMembers": {
            "properties": {
                "members": {
                    "items": {
                        "$ref": "#/definitions/GroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HdfsProxyuser": {
            "properties": {
                "id": {
                    "description": "The ID of the role.",
                    "type": "string"
                },
                "members": {
                    "description": "Users or groups impersonated by proxyuser.",
                    "items": {
                        "$ref": "#/definitions/GroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The name of the proxyuser.",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "members",
                "name"
            ],
            "type": "object"
        },
        "HdfsProxyuserCreateParams": {
            "description": "This is hdfs impersonation information of a proxyuser",
            "properties": {
                "id": {
                    "description": "The ID of the role.",
                    "type": "string"
                },
                "members": {
                    "description": "Users or groups impersonated by proxyuser.",
                    "items": {
                        "$ref": "#/definitions/GroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The name of the proxyuser.",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "HdfsProxyusers": {
            "properties": {
                "proxyusers": {
                    "items": {
                        "$ref": "#/definitions/HdfsProxyuser",
                        "description": "This is hdfs impersonation information of a proxyuser"
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "HdfsRack": {
            "description": "This is schema that contains HDFS rack properties.",
            "properties": {
                "client_ip_ranges": {
                    "description": "Array of IP ranges. Clients from one of these IP ranges are served by corresponding nodes from ip_pools array.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ip_pools": {
                    "description": "Array of IP pool names to use for serving clients from client_ip_ranges.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of the rack",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HdfsRackCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/HdfsRack"
                },
                {
                    "description": "This is schema that contains HDFS rack properties.",
                    "properties": {},
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "HdfsRackExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/HdfsRack"
                },
                {
                    "properties": {
                        "id": {
                            "description": "The ID of the rack.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "HdfsRacks": {
            "properties": {
                "racks": {
                    "items": {
                        "$ref": "#/definitions/HdfsRackExtended",
                        "description": "This is schema that contains HDFS rack properties."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "HdfsRacksExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/HdfsRacks"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "HdfsSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/HdfsSettingsSettings",
                    "description": "This is schema that contains HDFS protocol properties."
                }
            },
            "type": "object"
        },
        "HdfsSettingsSettings": {
            "properties": {
                "default_block_size": {
                    "description": "Block size (size=2**value) reported by HDFS server.",
                    "type": "integer"
                },
                "default_checksum_type": {
                    "description": "Checksum type reported by HDFS server.",
                    "enum": [
                        "none",
                        "crc32",
                        "crc32c"
                    ],
                    "type": "string"
                },
                "default_sendbuf_size": {
                    "description": "Send Buffer size used by HDFS server.",
                    "type": "integer"
                },
                "server_log_level": {
                    "description": "Log level for HDFS daemon.",
                    "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug"
                    ],
                    "type": "string"
                },
                "server_threads": {
                    "description": "Number of worker threads for HDFS daemon.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "HistoryFile": {
            "properties": {
                "statistics": {
                    "items": {
                        "$ref": "#/definitions/HistoryFileStatistic",
                        "description": "A synciq performance report."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "HistoryFileStatistic": {
            "properties": {
                "allocated": {
                    "description": "Nodes allocated for the sync action.",
                    "type": "integer"
                },
                "id": {
                    "description": "An ID for a single performance report.",
                    "type": "integer"
                },
                "limit": {
                    "description": "Sync action limit.",
                    "type": "integer"
                },
                "timestamp": {
                    "description": "Timestamp for the performance report.",
                    "type": "integer"
                },
                "total": {
                    "description": "Total usage for the performance report.",
                    "type": "integer"
                }
            },
            "required": [
                "timestamp",
                "allocated",
                "total",
                "limit",
                "id"
            ],
            "type": "object"
        },
        "JobEvent": {
            "properties": {
                "id": {
                    "description": "Job event ID.",
                    "type": "string"
                },
                "job_id": {
                    "description": "Job ID.",
                    "minimum": 1,
                    "type": "integer"
                },
                "job_type": {
                    "description": "Job Type.",
                    "type": "string"
                },
                "message": {
                    "description": "Description of event.",
                    "type": "string"
                },
                "phase": {
                    "description": "Job phase number at time of event.",
                    "type": "integer"
                },
                "policy": {
                    "description": "Policy in effect for job at time of event.",
                    "type": "string"
                },
                "progress": {
                    "description": "Job-type-specific progress indication.",
                    "type": "string"
                },
                "running_time": {
                    "description": "Total running time of job.",
                    "type": "integer"
                },
                "state": {
                    "description": "State of job associated with event.",
                    "type": "string"
                },
                "time": {
                    "description": "Time of event in Unix epoch seconds.",
                    "type": "integer"
                }
            },
            "required": [
                "job_id",
                "job_type",
                "policy",
                "time",
                "phase",
                "id"
            ],
            "type": "object"
        },
        "JobEvents": {
            "properties": {
                "events": {
                    "items": {
                        "$ref": "#/definitions/JobEvent",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "JobJob": {
            "properties": {
                "policy": {
                    "description": "Impact policy of this job instance.",
                    "type": "string"
                },
                "priority": {
                    "description": "Priority of this job instance; lower numbers preempt higher numbers.",
                    "maximum": 10,
                    "minimum": 1,
                    "type": "integer"
                },
                "state": {
                    "description": "Desired new state of this job instance.",
                    "enum": [
                        "run",
                        "pause",
                        "cancel"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobJobChangelistcreateParams": {
            "properties": {
                "newer_snapid": {
                    "description": "Newer snapshot ID.",
                    "minimum": 1,
                    "type": "integer"
                },
                "older_snapid": {
                    "description": "Older snapshot ID.",
                    "minimum": 1,
                    "type": "integer"
                },
                "retain_repstate": {
                    "description": "Whether to retain the replication record after a changelist is created. Retaining a replication record allows a changelist to be recreated later.",
                    "type": "boolean"
                }
            },
            "required": [
                "newer_snapid",
                "older_snapid"
            ],
            "type": "object"
        },
        "JobJobCreateParams": {
            "properties": {
                "allow_dup": {
                    "description": "Whether or not to queue the job if one of the same type is already running or queued.",
                    "type": "boolean"
                },
                "changelistcreate_params": {
                    "$ref": "#/definitions/JobJobChangelistcreateParams",
                    "description": ""
                },
                "domainmark_params": {
                    "$ref": "#/definitions/JobJobDomainmarkParams",
                    "description": ""
                },
                "paths": {
                    "description": "For jobs which take paths, the IFS paths to pass to the job.",
                    "items": {
                        "required": true,
                        "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "policy": {
                    "description": "Impact policy of this job instance.",
                    "type": "string"
                },
                "prepair_params": {
                    "$ref": "#/definitions/JobJobPrepairParams",
                    "description": ""
                },
                "priority": {
                    "description": "Priority of this job instance; lower numbers preempt higher numbers.",
                    "maximum": 10,
                    "minimum": 1,
                    "type": "integer"
                },
                "snaprevert_params": {
                    "$ref": "#/definitions/JobJobSnaprevertParams",
                    "description": ""
                },
                "type": {
                    "description": "Job type to queue.",
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "JobJobDomainmarkParams": {
            "properties": {
                "delete": {
                    "description": "Whether this is a delete operation.",
                    "type": "boolean"
                },
                "root": {
                    "description": "Base IFS path to associate with the domain.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of domain.",
                    "enum": [
                        "SnapRevert",
                        "SyncIQ"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type",
                "root"
            ],
            "type": "object"
        },
        "JobJobExtended": {
            "properties": {
                "create_time": {
                    "description": "The time the job was queued, in seconds since the epoch.",
                    "type": "integer"
                },
                "current_phase": {
                    "description": "The current phase of the job.",
                    "type": "integer"
                },
                "description": {
                    "description": "A text representation of the job.",
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the job.",
                    "minimum": 1,
                    "type": "integer"
                },
                "impact": {
                    "description": "The current impact of the job.",
                    "enum": [
                        "Low",
                        "Medium",
                        "High",
                        "Paused"
                    ],
                    "type": "string"
                },
                "participants": {
                    "description": "The set of devids working on the job.",
                    "items": {
                        "required": true,
                        "type": "integer"
                    },
                    "type": "array"
                },
                "paths": {
                    "description": "Paths for which the job was queued.",
                    "items": {
                        "required": true,
                        "type": "string"
                    },
                    "type": "array"
                },
                "policy": {
                    "description": "Current impact policy of the job.",
                    "type": "string"
                },
                "priority": {
                    "description": "Current priority of the job; lower numbers preempt higher numbers.",
                    "maximum": 10,
                    "minimum": 1,
                    "type": "integer"
                },
                "progress": {
                    "description": "A text representation of the job's progress.",
                    "type": "string"
                },
                "retries_remaining": {
                    "description": "The number of retries remaining if the job fails.",
                    "type": "integer"
                },
                "running_time": {
                    "description": "The number of seconds the job has executed.",
                    "type": "integer"
                },
                "start_time": {
                    "description": "The time the job started, in seconds since the Epoch.",
                    "type": "integer"
                },
                "state": {
                    "description": "Current state of the job.",
                    "enum": [
                        "running",
                        "paused_user",
                        "paused_system",
                        "paused_policy",
                        "paused_priority",
                        "cancelled_user",
                        "cancelled_system",
                        "failed",
                        "succeeded",
                        "unknown"
                    ],
                    "type": "string"
                },
                "total_phases": {
                    "description": "The total number of phases of the job type.",
                    "type": "integer"
                },
                "type": {
                    "description": "The job type.",
                    "type": "string"
                },
                "waiting_on": {
                    "description": "The ID of a job for which this job is waiting.",
                    "type": "integer"
                },
                "waiting_reason": {
                    "description": "The reason the job is waiting.",
                    "enum": [
                        "blocked_by_priority"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "impact",
                "state",
                "priority",
                "create_time",
                "total_phases",
                "policy",
                "retries_remaining",
                "type",
                "id"
            ],
            "type": "object"
        },
        "JobJobPrepairParams": {
            "properties": {
                "mapping_type": {
                    "description": "Type of permissions; not accepted with mode=clone or mode=inherit.",
                    "enum": [
                        "global",
                        "sid",
                        "unix",
                        "native"
                    ],
                    "type": "string"
                },
                "mode": {
                    "description": "Type of PermissionRepair operation.",
                    "enum": [
                        "clone",
                        "inherit",
                        "convert"
                    ],
                    "type": "string"
                },
                "template": {
                    "description": "IFS file or directory to use as a template; required with mode=clone and mode=inherit, not accepted with mode=convert.",
                    "type": "string"
                },
                "zone": {
                    "description": "Authentication zone; not accepted with mode=clone or mode=inherit.",
                    "type": "string"
                }
            },
            "required": [
                "mode"
            ],
            "type": "object"
        },
        "JobJobSnaprevertParams": {
            "properties": {
                "snapid": {
                    "description": "Snapshot to revert.",
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "required": [
                "snapid"
            ],
            "type": "object"
        },
        "JobJobSummary": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/JobJobSummarySummary",
                    "description": ""
                }
            },
            "type": "object"
        },
        "JobJobSummarySummary": {
            "properties": {
                "cluster_is_degraded": {
                    "description": "Whether the cluster is in a degraded state.  Note this is from the perspective of the node handling the query, which might be different from another node.",
                    "type": "boolean"
                },
                "connected": {
                    "description": "Whether isi_job_d instances on all up nodes in the cluster are connected to the coordinator.",
                    "type": "boolean"
                },
                "coordinator": {
                    "description": "The devid of the job engine coordinator.",
                    "type": "integer"
                },
                "disconnected_nodes": {
                    "description": "If connected=false, this is the set of devids that are not connected to the coordinator.",
                    "items": {
                        "required": true,
                        "type": "integer"
                    },
                    "type": "array"
                },
                "down_or_read_only_nodes": {
                    "description": "Whether the cluster has any down or read-only nodes.  These nodes are not considered in the connected property.",
                    "type": "boolean"
                },
                "next_jid": {
                    "description": "The job ID to be assigned to the next job.",
                    "type": "integer"
                },
                "run_degraded": {
                    "description": "Whether the job engine would allow most jobs to run even when the cluster is in a degraded state.",
                    "type": "boolean"
                },
                "stats_ready": {
                    "description": "Whether the coordinator has recently gathered statistics for all nodes in the cluster.",
                    "type": "boolean"
                }
            },
            "required": [
                "coordinator",
                "stats_ready",
                "next_jid",
                "down_or_read_only_nodes",
                "connected",
                "cluster_is_degraded",
                "run_degraded"
            ],
            "type": "object"
        },
        "JobJobs": {
            "properties": {
                "jobs": {
                    "items": {
                        "$ref": "#/definitions/JobJobExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobJobsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobJobs"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "JobPolicies": {
            "properties": {
                "types": {
                    "items": {
                        "$ref": "#/definitions/JobPoliciesType",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobPoliciesExtended": {
            "properties": {
                "policies": {
                    "items": {
                        "$ref": "#/definitions/JobPoliciesType",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "JobPoliciesType": {
            "properties": {
                "description": {
                    "description": "A helpful human-readable description of the impact policy.",
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the impact policy.",
                    "type": "string"
                },
                "intervals": {
                    "items": {
                        "$ref": "#/definitions/JobPolicyInterval",
                        "description": ""
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The name of the impact policy.",
                    "minLength": 1,
                    "type": "string"
                },
                "system": {
                    "description": "Whether or not this is a read-only system impact policy.",
                    "type": "boolean"
                }
            },
            "required": [
                "intervals",
                "description",
                "name",
                "id"
            ],
            "type": "object"
        },
        "JobPolicy": {
            "properties": {
                "description": {
                    "description": "A helpful human-readable description of the impact policy.",
                    "type": "string"
                },
                "intervals": {
                    "items": {
                        "$ref": "#/definitions/JobPolicyInterval",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobPolicyCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobPolicy"
                },
                {
                    "properties": {
                        "name": {
                            "description": "The name of the impact policy.",
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "JobPolicyInterval": {
            "properties": {
                "begin": {
                    "description": "Beginning time for the corresponding impact, in the format 'WWWW HH:MM', where 'WWWW' is the full English name of the day of the week, 'HH' is the hour (00-23), and 'MM' is the minute (00-59).",
                    "type": "string"
                },
                "end": {
                    "description": "Ending time for the corresponding impact, in the format 'WWWW HH:MM', where 'WWWW' is the full English name of the day of the week, 'HH' is the hour (00-23), and 'MM' is the minute (00-59).",
                    "type": "string"
                },
                "impact": {
                    "description": "Impact for the corresponding time span.",
                    "enum": [
                        "Low",
                        "Medium",
                        "High",
                        "Paused"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "impact",
                "begin",
                "end"
            ],
            "type": "object"
        },
        "JobReport": {
            "properties": {
                "id": {
                    "description": "Job event ID.",
                    "type": "string"
                },
                "job_id": {
                    "description": "Job ID.",
                    "minimum": 1,
                    "type": "integer"
                },
                "job_type": {
                    "description": "Job Type.",
                    "type": "string"
                },
                "phase": {
                    "description": "Job phase number at time of event.",
                    "type": "integer"
                },
                "results": {
                    "description": "Job results, if applicable.",
                    "type": "string"
                },
                "time": {
                    "description": "Time of event in Unix epoch seconds.",
                    "type": "integer"
                }
            },
            "required": [
                "job_id",
                "job_type",
                "time",
                "phase",
                "id"
            ],
            "type": "object"
        },
        "JobReports": {
            "properties": {
                "reports": {
                    "items": {
                        "$ref": "#/definitions/JobReport",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "JobStatistics": {
            "properties": {
                "jobs": {
                    "items": {
                        "$ref": "#/definitions/JobStatisticsJob",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "JobStatisticsJob": {
            "properties": {
                "job_id": {
                    "description": "The job ID.",
                    "type": "integer"
                },
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/JobStatisticsJobNode",
                        "description": ""
                    },
                    "type": "array"
                },
                "phase": {
                    "description": "The current phase of the job.",
                    "type": "integer"
                },
                "total_nodes": {
                    "description": "The number of nodes participating in the job.",
                    "type": "integer"
                }
            },
            "required": [
                "phase",
                "nodes",
                "job_id",
                "total_nodes"
            ],
            "type": "object"
        },
        "JobStatisticsJobNode": {
            "properties": {
                "cpu": {
                    "$ref": "#/definitions/JobStatisticsJobNodeCpu",
                    "description": ""
                },
                "io": {
                    "$ref": "#/definitions/JobStatisticsJobNodeIo",
                    "description": ""
                },
                "memory": {
                    "$ref": "#/definitions/JobStatisticsJobNodeMemory",
                    "description": ""
                },
                "node": {
                    "description": "The devid of the node.",
                    "type": "integer"
                },
                "pid": {
                    "description": "The process ID of the job on this node.",
                    "type": "integer"
                },
                "total_workers": {
                    "description": "The number of workers for this job on this node.",
                    "type": "integer"
                },
                "workers": {
                    "items": {
                        "$ref": "#/definitions/JobStatisticsJobNodeWorker",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "node",
                "workers",
                "pid",
                "total_workers",
                "io",
                "memory",
                "cpu"
            ],
            "type": "object"
        },
        "JobStatisticsJobNodeCpu": {
            "properties": {
                "average": {
                    "description": "The average CPU utilization of the job on this node.",
                    "type": "number"
                },
                "current": {
                    "description": "The current CPU utilization of the job on this node.",
                    "type": "number"
                },
                "maximum": {
                    "description": "The maximum CPU utilization of the job on this node.",
                    "type": "number"
                },
                "minimum": {
                    "description": "The minimum CPU utilization of the job on this node.",
                    "type": "number"
                }
            },
            "required": [
                "current",
                "minimum",
                "maximum"
            ],
            "type": "object"
        },
        "JobStatisticsJobNodeIo": {
            "properties": {
                "read": {
                    "$ref": "#/definitions/JobStatisticsJobNodeIoRead",
                    "description": ""
                },
                "write": {
                    "$ref": "#/definitions/JobStatisticsJobNodeIoWrite",
                    "description": ""
                }
            },
            "required": [
                "read",
                "write"
            ],
            "type": "object"
        },
        "JobStatisticsJobNodeIoRead": {
            "properties": {
                "bytes": {
                    "description": "The number of bytes recently read by this job on this node.",
                    "type": "integer"
                },
                "ops": {
                    "description": "The number of read operations recently performed by this job on this node.",
                    "type": "integer"
                }
            },
            "required": [
                "bytes",
                "ops"
            ],
            "type": "object"
        },
        "JobStatisticsJobNodeIoWrite": {
            "properties": {
                "bytes": {
                    "description": "The number of bytes recently written by this job on this node.",
                    "type": "integer"
                },
                "ops": {
                    "description": "The number of write operations recently performed by this job on this node.",
                    "type": "integer"
                }
            },
            "required": [
                "bytes",
                "ops"
            ],
            "type": "object"
        },
        "JobStatisticsJobNodeMemory": {
            "properties": {
                "physical": {
                    "$ref": "#/definitions/JobStatisticsJobNodeMemoryPhysical",
                    "description": ""
                },
                "virtual": {
                    "$ref": "#/definitions/JobStatisticsJobNodeMemoryVirtual",
                    "description": ""
                }
            },
            "required": [
                "virtual",
                "physical"
            ],
            "type": "object"
        },
        "JobStatisticsJobNodeMemoryPhysical": {
            "properties": {
                "average": {
                    "description": "The average physical memory utilization of the job on this node, in KB.",
                    "type": "number"
                },
                "current": {
                    "description": "The current physical memory utilization of the job on this node, in KB.",
                    "type": "number"
                },
                "maximum": {
                    "description": "The maximum physical memory utilization of the job on this node, in KB.",
                    "type": "number"
                },
                "minimum": {
                    "description": "The minimum physical memory utilization of the job on this node, in KB.",
                    "type": "number"
                }
            },
            "required": [
                "current",
                "minimum",
                "maximum"
            ],
            "type": "object"
        },
        "JobStatisticsJobNodeMemoryVirtual": {
            "properties": {
                "average": {
                    "description": "The average virtual memory utilization of the job on this node, in KB.",
                    "type": "number"
                },
                "current": {
                    "description": "The current virtual memory utilization of the job on this node, in KB.",
                    "type": "number"
                },
                "maximum": {
                    "description": "The maximum virtual memory utilization of the job on this node, in KB.",
                    "type": "number"
                },
                "minimum": {
                    "description": "The minimum virtual memory utilization of the job on this node, in KB.",
                    "type": "number"
                }
            },
            "required": [
                "current",
                "minimum",
                "maximum"
            ],
            "type": "object"
        },
        "JobStatisticsJobNodeWorker": {
            "properties": {
                "stw": {
                    "description": "The sleep-to-work ratio of this worker; how much time it spends sleeping compared to working.",
                    "type": "number"
                },
                "task": {
                    "description": "A representation of the task the worker is currently processing; not intended to be read by humans.",
                    "type": "string"
                },
                "task_result": {
                    "description": "A representation of the most recent task result produced by the worker; not intended to be read by humans.",
                    "type": "string"
                },
                "worker": {
                    "description": "The worker ID.",
                    "type": "integer"
                }
            },
            "required": [
                "worker"
            ],
            "type": "object"
        },
        "JobType": {
            "properties": {
                "enabled": {
                    "description": "Whether the job type is enabled and able to run.",
                    "type": "boolean"
                },
                "policy": {
                    "description": "Default impact policy of this job type.",
                    "type": "string"
                },
                "priority": {
                    "description": "Default priority of this job type; lower numbers preempt higher numbers.",
                    "maximum": 10,
                    "minimum": 1,
                    "type": "integer"
                },
                "schedule": {
                    "description": "The schedule on which this job type is queued, if any.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobTypeExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobType"
                },
                {
                    "properties": {
                        "allow_multiple_instances": {
                            "description": "Whether multiple instances of this job type may run simultaneously.",
                            "type": "boolean"
                        },
                        "description": {
                            "description": "Brief description of the job type.",
                            "type": "string"
                        },
                        "exclusion_set": {
                            "description": "The set(s) of mututally-exclusive job types to which this job belongs.  No job in this set may run with any other job in this set.",
                            "type": "string"
                        },
                        "hidden": {
                            "description": "Whether this job type is normally visible in the UI.",
                            "type": "boolean"
                        },
                        "id": {
                            "description": "Job type ID.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "priority",
                        "description",
                        "schedule",
                        "enabled",
                        "exclusion_set",
                        "policy",
                        "hidden",
                        "allow_multiple_instances",
                        "id"
                    ],
                    "type": "object"
                }
            ]
        },
        "JobTypes": {
            "properties": {
                "types": {
                    "items": {
                        "$ref": "#/definitions/JobTypeExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobTypesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobTypes"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "LicenseLicense": {
            "properties": {
                "duration": {
                    "description": "Total duration in seconds for temporary licenses.",
                    "type": "integer"
                },
                "expiration": {
                    "description": "Unix epoch time the license will expire.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the licensed feature.",
                    "type": "string"
                },
                "status": {
                    "description": "Current status of the license.",
                    "enum": [
                        "Activated",
                        "Evaluation",
                        "Expired",
                        "Inactive",
                        "Unknown"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "status",
                "name"
            ],
            "type": "object"
        },
        "LicenseLicenseCreateParams": {
            "properties": {
                "key": {
                    "description": "New license key.",
                    "type": "string"
                }
            },
            "required": [
                "key"
            ],
            "type": "object"
        },
        "LicenseLicenses": {
            "properties": {
                "licenses": {
                    "items": {
                        "$ref": "#/definitions/LicenseLicense",
                        "description": "Information about an application license."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MappingIdentities": {
            "properties": {
                "identities": {
                    "items": {
                        "$ref": "#/definitions/MappingIdentity",
                        "description": "Identity mapping entry"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MappingIdentity": {
            "properties": {
                "id": {
                    "description": "The identity mapping entry id",
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "targets": {
                    "items": {
                        "$ref": "#/definitions/MappingIdentityTarget",
                        "description": "Target identity mappings."
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "targets"
            ],
            "type": "object"
        },
        "MappingIdentityCreateParams": {
            "description": "Identity mapping entry",
            "properties": {
                "source": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "targets": {
                    "items": {
                        "$ref": "#/definitions/MappingIdentityTargetCreateParams",
                        "description": "Target identity mappings."
                    },
                    "type": "array"
                }
            },
            "required": [
                "source",
                "targets"
            ],
            "type": "object"
        },
        "MappingIdentityTarget": {
            "properties": {
                "on_disk": {
                    "description": "Identity is preferred on-disk.",
                    "type": "boolean"
                },
                "target": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "type": {
                    "description": "Origin of identity mapping.",
                    "enum": [
                        "auto",
                        "external",
                        "manual"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MappingIdentityTargetCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/MappingIdentityTarget"
                },
                {
                    "properties": {},
                    "required": [
                        "target"
                    ],
                    "type": "object"
                }
            ]
        },
        "MappingUsersLookup": {
            "properties": {
                "mapping": {
                    "description": "Lookup a user access token.",
                    "items": {
                        "$ref": "#/definitions/MappingUsersLookupMappingItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MappingUsersLookupMappingItem": {
            "properties": {
                "groups": {
                    "items": {
                        "$ref": "#/definitions/MappingUsersLookupMappingItemGroup",
                        "description": "Configuration for a user."
                    },
                    "type": "array"
                },
                "privileges": {
                    "items": {
                        "$ref": "#/definitions/AuthIdNtokenPrivilegeItem",
                        "description": "A system defined privilege that may be granted to users."
                    },
                    "type": "array"
                },
                "user": {
                    "$ref": "#/definitions/MappingUsersLookupMappingItemUser",
                    "description": "Configuration for a user."
                },
                "zid": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MappingUsersLookupMappingItemGroup": {
            "properties": {
                "dn": {
                    "type": "string"
                },
                "dns_domain": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "email": {
                    "description": "Specifies an Email address.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Auth user is enabled.",
                    "type": "boolean"
                },
                "expired": {
                    "description": "Auth user is expired.",
                    "type": "boolean"
                },
                "expiry": {
                    "description": "Epoch time at which the auth user will expire.",
                    "type": "integer"
                },
                "gecos": {
                    "description": "Sets GECOS value (usually full name).",
                    "type": "string"
                },
                "generated_gid": {
                    "type": "boolean"
                },
                "generated_uid": {
                    "type": "boolean"
                },
                "generated_upn": {
                    "type": "boolean"
                },
                "gid": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "home_directory": {
                    "description": "Specifies user's home directory.",
                    "type": "string"
                },
                "id": {
                    "description": "The user or group ID.",
                    "type": "string"
                },
                "locked": {
                    "description": "Specifies if account is locked out.",
                    "type": "boolean"
                },
                "max_password_age": {
                    "description": "The maximum age in seconds allowed for the password before it expires.",
                    "type": "integer"
                },
                "member_of": {
                    "items": {
                        "$ref": "#/definitions/GroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "name": {
                    "description": "A user or group name.",
                    "type": "string"
                },
                "on_disk_group_identity": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "on_disk_user_identity": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "password_expired": {
                    "description": "Specifies whether the password has expired.",
                    "type": "boolean"
                },
                "password_expires": {
                    "description": "Password is allowed to expire.",
                    "type": "boolean"
                },
                "password_expiry": {
                    "description": "Specifies the time in epoch seconds the password will expire.",
                    "type": "integer"
                },
                "password_last_set": {
                    "description": "Specifies the last time the password was set.",
                    "type": "integer"
                },
                "primary_group_sid": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "prompt_password_change": {
                    "description": "Prompts the user to change their password on next login.",
                    "type": "boolean"
                },
                "provider": {
                    "description": "Specifies an authentication provider.",
                    "type": "string"
                },
                "sam_account_name": {
                    "type": "string"
                },
                "shell": {
                    "description": "Sets path to user's shell.",
                    "type": "string"
                },
                "sid": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "upn": {
                    "description": "The user principal name.",
                    "type": "string"
                },
                "user_can_change_password": {
                    "description": "Specifies whether the user's password can be changed.",
                    "type": "boolean"
                }
            },
            "required": [
                "id",
                "type",
                "name"
            ],
            "type": "object"
        },
        "MappingUsersLookupMappingItemUser": {
            "properties": {
                "dn": {
                    "type": "string"
                },
                "dns_domain": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "email": {
                    "description": "Specifies an Email address.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Auth user is enabled.",
                    "type": "boolean"
                },
                "expired": {
                    "description": "Auth user is expired.",
                    "type": "boolean"
                },
                "expiry": {
                    "description": "Epoch time at which the auth user will expire.",
                    "type": "integer"
                },
                "gecos": {
                    "description": "Sets GECOS value (usually full name).",
                    "type": "string"
                },
                "generated_gid": {
                    "type": "boolean"
                },
                "generated_uid": {
                    "type": "boolean"
                },
                "generated_upn": {
                    "type": "boolean"
                },
                "gid": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "home_directory": {
                    "description": "Specifies user's home directory.",
                    "type": "string"
                },
                "id": {
                    "description": "The user or group ID.",
                    "type": "string"
                },
                "locked": {
                    "description": "Specifies if account is locked out.",
                    "type": "boolean"
                },
                "max_password_age": {
                    "description": "The maximum age in seconds allowed for the password before it expires.",
                    "type": "integer"
                },
                "member_of": {
                    "items": {
                        "$ref": "#/definitions/GroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "name": {
                    "description": "A user or group name.",
                    "type": "string"
                },
                "on_disk_group_identity": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "on_disk_user_identity": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "password_expired": {
                    "description": "Specifies whether the password has expired.",
                    "type": "boolean"
                },
                "password_expires": {
                    "description": "Password is allowed to expire.",
                    "type": "boolean"
                },
                "password_expiry": {
                    "description": "Specifies the time in epoch seconds the password will expire.",
                    "type": "integer"
                },
                "password_last_set": {
                    "description": "Specifies the last time the password was set.",
                    "type": "integer"
                },
                "primary_group_sid": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "prompt_password_change": {
                    "description": "Prompts the user to change their password on next login.",
                    "type": "boolean"
                },
                "provider": {
                    "description": "Specifies an authentication provider.",
                    "type": "string"
                },
                "sam_account_name": {
                    "type": "string"
                },
                "shell": {
                    "description": "Sets path to user's shell.",
                    "type": "string"
                },
                "sid": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "upn": {
                    "description": "The user principal name.",
                    "type": "string"
                },
                "user_can_change_password": {
                    "description": "Specifies whether the user's password can be changed.",
                    "type": "boolean"
                }
            },
            "required": [
                "password_expires",
                "password_expired",
                "id",
                "type",
                "user_can_change_password",
                "expired",
                "locked",
                "name",
                "enabled",
                "prompt_password_change"
            ],
            "type": "object"
        },
        "MappingUsersRules": {
            "properties": {
                "rules": {
                    "$ref": "#/definitions/MappingUsersRulesRules",
                    "description": "This object contains rules for user mapping."
                }
            },
            "type": "object"
        },
        "MappingUsersRulesExtended": {
            "properties": {
                "parameters": {
                    "$ref": "#/definitions/MappingUsersRulesParameters",
                    "description": "If the final credential does not have valid UID/GID then it is replaced with default unix user."
                },
                "rules": {
                    "description": "The list of user mapping rules.",
                    "items": {
                        "$ref": "#/definitions/MappingUsersRulesRuleExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MappingUsersRulesParameters": {
            "properties": {
                "default_unix_user": {
                    "$ref": "#/definitions/MappingUsersRulesRuleOptionsDefaultUser",
                    "description": ""
                }
            },
            "type": "object"
        },
        "MappingUsersRulesRule": {
            "properties": {
                "operator": {
                    "description": "The operator used to make rules on specified users or groups.",
                    "enum": [
                        "append",
                        "insert",
                        "replace",
                        "trim",
                        "union"
                    ],
                    "type": "string"
                },
                "options": {
                    "$ref": "#/definitions/MappingUsersRulesRuleOptions",
                    "description": "These are options that can be applied to user mapping rules."
                },
                "user1": {
                    "$ref": "#/definitions/MappingUsersRulesRuleUser2",
                    "description": ""
                },
                "user2": {
                    "$ref": "#/definitions/MappingUsersRulesRuleUser2",
                    "description": ""
                }
            },
            "type": "object"
        },
        "MappingUsersRulesRuleExtended": {
            "properties": {
                "operator": {
                    "description": "The operator used to make rules on specified users or groups.",
                    "enum": [
                        "append",
                        "insert",
                        "replace",
                        "trim",
                        "union"
                    ],
                    "type": "string"
                },
                "options": {
                    "$ref": "#/definitions/MappingUsersRulesRuleOptionsExtended",
                    "description": "These are options that can be applied to user mapping rules."
                },
                "user1": {
                    "$ref": "#/definitions/MappingUsersRulesRuleOptionsDefaultUser",
                    "description": ""
                },
                "user2": {
                    "$ref": "#/definitions/MappingUsersRulesRuleUser2Extended",
                    "description": ""
                }
            },
            "required": [
                "user1"
            ],
            "type": "object"
        },
        "MappingUsersRulesRuleOptions": {
            "properties": {
                "break": {
                    "description": "If this rule applies successfully, stop processing further.",
                    "type": "boolean"
                },
                "default_user": {
                    "$ref": "#/definitions/MappingUsersRulesRuleUser2",
                    "description": ""
                },
                "group": {
                    "description": "Specifies that the primary GID and primary group SID should be copied to the existing credential.",
                    "type": "boolean"
                },
                "groups": {
                    "description": "Specifies that all additional identifiers should be copied to the existing credential.",
                    "type": "boolean"
                },
                "user": {
                    "description": "Specifies that the primary UID and primary user SID should be copied to the existing credential.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "MappingUsersRulesRuleOptionsDefaultUser": {
            "allOf": [
                {
                    "$ref": "#/definitions/MappingUsersRulesRuleUser2"
                },
                {
                    "properties": {},
                    "required": [
                        "user"
                    ],
                    "type": "object"
                }
            ]
        },
        "MappingUsersRulesRuleOptionsExtended": {
            "properties": {
                "break": {
                    "description": "If this rule applies successfully, stop processing further.",
                    "type": "boolean"
                },
                "default_user": {
                    "$ref": "#/definitions/MappingUsersRulesRuleOptionsDefaultUser",
                    "description": ""
                },
                "group": {
                    "description": "Specifies that the primary GID and primary group SID should be copied to the existing credential.",
                    "type": "boolean"
                },
                "groups": {
                    "description": "Specifies that all additional identifiers should be copied to the existing credential.",
                    "type": "boolean"
                },
                "user": {
                    "description": "Specifies that the primary UID and primary user SID should be copied to the existing credential.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "MappingUsersRulesRuleUser2": {
            "properties": {
                "domain": {
                    "description": "The domain of the user that is being mapped.",
                    "type": "string"
                },
                "user": {
                    "description": "The name of the user that is being mapped.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MappingUsersRulesRuleUser2Extended": {
            "allOf": [
                {
                    "$ref": "#/definitions/MappingUsersRulesRuleUser2"
                },
                {
                    "properties": {},
                    "required": [
                        "user"
                    ],
                    "type": "object"
                }
            ]
        },
        "MappingUsersRulesRules": {
            "properties": {
                "parameters": {
                    "$ref": "#/definitions/MappingUsersRulesRulesParameters",
                    "description": "If the final credential does not have valid UID/GID then it is replaced with default unix user."
                },
                "rules": {
                    "description": "The list of user mapping rules.",
                    "items": {
                        "$ref": "#/definitions/MappingUsersRulesRule",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MappingUsersRulesRulesParameters": {
            "properties": {
                "default_unix_user": {
                    "$ref": "#/definitions/MappingUsersRulesRuleUser2",
                    "description": ""
                }
            },
            "type": "object"
        },
        "NfsAliase": {
            "description": "aliases are names for physical paths in the file system",
            "properties": {
                "health": {
                    "description": "The health of the alias.",
                    "enum": [
                        "good",
                        "illegal file type",
                        "illegal path",
                        "name conflict",
                        "not exported",
                        "path not found",
                        "unknown"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "The name by which the alias can be referenced",
                    "type": "string"
                },
                "path": {
                    "description": "The path to which the alias points",
                    "type": "string"
                },
                "zone": {
                    "description": "The zone in which the alias is valid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NfsAliaseCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/NfsAliase"
                },
                {
                    "description": "aliases are names for physical paths in the file system",
                    "properties": {},
                    "required": [
                        "path",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "NfsAliaseExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NfsAliase"
                },
                {
                    "properties": {
                        "id": {
                            "description": "String representing the unique location of this alias",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NfsAliases": {
            "properties": {
                "aliases": {
                    "items": {
                        "$ref": "#/definitions/NfsAliaseExtended",
                        "description": "aliases are names for physical paths in the file system"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NfsAliasesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NfsAliases"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NfsCheck": {
            "properties": {
                "id": {
                    "description": "The ID of the export.",
                    "type": "integer"
                },
                "messages": {
                    "description": "The message about the export.",
                    "type": "string"
                }
            },
            "required": [
                "messages"
            ],
            "type": "object"
        },
        "NfsCheckExtended": {
            "description": "Validation information about NFS exports.",
            "properties": {
                "checks": {
                    "items": {
                        "$ref": "#/definitions/NfsCheck",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NfsExport": {
            "description": "NFS export configuration values.",
            "properties": {
                "all_dirs": {
                    "description": "If true, all directories under the specified paths are mountable.",
                    "type": "boolean"
                },
                "block_size": {
                    "description": "The block size returned by the NFS STATFS procedure.",
                    "type": "integer"
                },
                "can_set_time": {
                    "description": "If true, the client may  set file  times using the NFS SETATTR request.  This  option is advisory and the server always behaves as if it is true.",
                    "type": "boolean"
                },
                "case_insensitive": {
                    "description": "If true, the server will report that it ignores case for file names.",
                    "type": "boolean"
                },
                "case_preserving": {
                    "description": "If true, the server will report that it always preserves case for file names.",
                    "type": "boolean"
                },
                "chown_restricted": {
                    "description": "If true, the server will report that only the superuser may change file ownership.",
                    "type": "boolean"
                },
                "clients": {
                    "description": "Clients that have access to the export.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "commit_asynchronous": {
                    "description": "If true, allows NFS  commit  requests to  execute asynchronously.",
                    "type": "boolean"
                },
                "description": {
                    "description": "A human readable description of the export.",
                    "type": "string"
                },
                "directory_transfer_size": {
                    "description": "The preferred size for directory read operations.  This option is advisory.",
                    "type": "integer"
                },
                "encoding": {
                    "description": "The character encoding of clients connecting to the export.",
                    "type": "string"
                },
                "link_max": {
                    "description": "The reported maximum number of links to a file.",
                    "type": "integer"
                },
                "map_all": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "map_failure": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "map_full": {
                    "description": "If true, user mappings queries the OneFS user database.  If false, only local authentication is queried.",
                    "type": "boolean"
                },
                "map_lookup_uid": {
                    "description": "If true, incoming UIDs are mapped to users in the OneFS user database.  If false, incoming UIDs are applied directly to file operations.",
                    "type": "boolean"
                },
                "map_non_root": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "map_retry": {
                    "description": "Determines whether lookups for users specified in map_all, map_root or map_nonroot are retried if the look fails.",
                    "type": "boolean"
                },
                "map_root": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "max_file_size": {
                    "description": "The maximum file size in the export.",
                    "type": "integer"
                },
                "name_max_size": {
                    "description": "The reported maximum length of a file name.",
                    "type": "integer"
                },
                "no_truncate": {
                    "description": "If true, report that too-long file names result in an error",
                    "type": "boolean"
                },
                "paths": {
                    "description": "The paths under /ifs that are exported.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "read_only": {
                    "description": "If true, the export is read-only.",
                    "type": "boolean"
                },
                "read_only_clients": {
                    "description": "Clients that have read only access to the export.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "read_transfer_max_size": {
                    "description": "The maximum buffer size that clients should use on NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "read_transfer_multiple": {
                    "description": "The preferred multiple size for NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "read_transfer_size": {
                    "description": "The optimal size for NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "read_write_clients": {
                    "description": "Clients that have read and write access to the export, even if the export is read-only.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "readdirplus": {
                    "description": "If true, readdirplus requests are enabled.",
                    "type": "boolean"
                },
                "readdirplus_prefetch": {
                    "description": "This field is deprecated and does not do anything.",
                    "type": "integer"
                },
                "return_32bit_file_ids": {
                    "description": "Limits the size of file identifiers returned by NFSv3+ to 32-bit values.",
                    "type": "boolean"
                },
                "root_clients": {
                    "description": "Clients that have root access to the export.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "security_flavors": {
                    "description": "The authentication flavors that are supported for this export.",
                    "items": {
                        "description": "The security type.",
                        "enum": [
                            "unix",
                            "krb5",
                            "krb5i",
                            "krb5p"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "setattr_asynchronous": {
                    "description": "If true, allows setattr operations to execute asynchronously.",
                    "type": "boolean"
                },
                "snapshot": {
                    "description": "Use this snapshot for all mounts.",
                    "type": "string"
                },
                "symlinks": {
                    "description": "If true, paths reachable by symlinks are exported.",
                    "type": "boolean"
                },
                "time_delta": {
                    "description": "The resolution of all time values that are returned to clients.",
                    "type": "number"
                },
                "write_datasync_action": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_datasync_reply": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_filesync_action": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_filesync_reply": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_transfer_max_size": {
                    "description": "The maximum buffer size that clients should use on NFS write requests.  This option is advisory.",
                    "type": "integer"
                },
                "write_transfer_multiple": {
                    "description": "The preferred multiple size for NFS write requests.  This option is advisory.",
                    "type": "integer"
                },
                "write_transfer_size": {
                    "description": "The optimal size for NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "write_unstable_action": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_unstable_reply": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "zone": {
                    "description": "The zone in which the export is valid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NfsExportCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/NfsExport"
                },
                {
                    "description": "NFS export configuration values.",
                    "properties": {},
                    "required": [
                        "paths"
                    ],
                    "type": "object"
                }
            ]
        },
        "NfsExportExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NfsExport"
                },
                {
                    "properties": {
                        "conflicting_paths": {
                            "description": "Paths that conflict with another export.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "id": {
                            "description": "Unique ID for the export.",
                            "type": "integer"
                        },
                        "unresolved_clients": {
                            "description": "Clients that cannot be resolved.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NfsExportMapAll": {
            "properties": {
                "enabled": {
                    "description": "Should this user mapping be applied",
                    "type": "boolean"
                },
                "primary_group": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "secondary_groups": {
                    "items": {
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'.",
                        "properties": {
                            "id": {
                                "description": "Serialized form (e.g. 'UID:0', 'USER:name', 'GID:0', 'GROUP:wheel', 'SID:S-1-1').",
                                "type": "string"
                            },
                            "name": {
                                "description": "Persona name, must be combined with type.",
                                "type": "string"
                            },
                            "type": {
                                "description": "Type of persona when using name.",
                                "enum": [
                                    "user",
                                    "group",
                                    "wellknown"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "user": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                }
            },
            "type": "object"
        },
        "NfsExports": {
            "properties": {
                "exports": {
                    "items": {
                        "$ref": "#/definitions/NfsExportExtended",
                        "description": "NFS export configuration values."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NfsExportsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NfsExports"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NfsExportsSummary": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/NfsExportsSummarySummary",
                    "description": "The summary of a collection of objects."
                }
            },
            "type": "object"
        },
        "NfsExportsSummarySummary": {
            "properties": {
                "count": {
                    "description": "The count of objects in the collection",
                    "type": "integer"
                }
            },
            "required": [
                "count"
            ],
            "type": "object"
        },
        "NfsNlmLocks": {
            "properties": {
                "locks": {
                    "items": {
                        "$ref": "#/definitions/NfsNlmLocksLock",
                        "description": "Information for an NLM lock on NFS."
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NfsNlmLocksLock": {
            "properties": {
                "client": {
                    "description": "The client host name.",
                    "type": "string"
                },
                "client_id": {
                    "description": "The client ID.",
                    "type": "string"
                },
                "created": {
                    "description": "Time of lock creation.",
                    "type": "integer"
                },
                "id": {
                    "description": "The lock ID.",
                    "type": "string"
                },
                "lin": {
                    "description": "The LIN in ifs that is locked.",
                    "type": "string"
                },
                "lock_type": {
                    "description": "The type of lock.",
                    "type": "string"
                },
                "path": {
                    "description": "The path in ifs that is locked.",
                    "type": "string"
                },
                "range": {
                    "description": "The byte range within the file that is locked.",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NfsNlmSessions": {
            "properties": {
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "sessions": {
                    "items": {
                        "$ref": "#/definitions/NfsNlmSessionsSession",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NfsNlmSessionsSession": {
            "properties": {
                "client": {
                    "description": "The client that has the session.",
                    "type": "string"
                },
                "id": {
                    "description": "The session ID.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NfsNlmWaiters": {
            "properties": {
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                },
                "waiters": {
                    "items": {
                        "$ref": "#/definitions/NfsNlmLocksLock",
                        "description": "Information for an NLM lock on NFS."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NfsSettingsExport": {
            "description": "Default NFS export configuration values.",
            "properties": {
                "settings": {
                    "$ref": "#/definitions/NfsSettingsExportSettings",
                    "description": "NFS export configuration values."
                }
            },
            "type": "object"
        },
        "NfsSettingsExportSettings": {
            "properties": {
                "all_dirs": {
                    "description": "If true, all directories under the specified paths are mountable.",
                    "type": "boolean"
                },
                "block_size": {
                    "description": "The block size returned by the NFS STATFS procedure.",
                    "type": "integer"
                },
                "can_set_time": {
                    "description": "If true, the client may  set file  times using the NFS SETATTR request.  This  option is advisory and the server always behaves as if it is true.",
                    "type": "boolean"
                },
                "case_insensitive": {
                    "description": "If true, the server will report that it ignores case for file names.",
                    "type": "boolean"
                },
                "case_preserving": {
                    "description": "If true, the server will report that it always preserves case for file names.",
                    "type": "boolean"
                },
                "chown_restricted": {
                    "description": "If true, the server will report that only the superuser may change file ownership.",
                    "type": "boolean"
                },
                "commit_asynchronous": {
                    "description": "If true, allows NFS  commit  requests to  execute asynchronously.",
                    "type": "boolean"
                },
                "directory_transfer_size": {
                    "description": "The preferred size for directory read operations.  This option is advisory.",
                    "type": "integer"
                },
                "encoding": {
                    "description": "The character encoding of clients connecting to the export.",
                    "type": "string"
                },
                "link_max": {
                    "description": "The reported maximum number of links to a file.",
                    "type": "integer"
                },
                "map_all": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "map_failure": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "map_full": {
                    "description": "If true, user mappings queries the OneFS user database.  If false, only local authentication is queried.",
                    "type": "boolean"
                },
                "map_lookup_uid": {
                    "description": "If true, incoming UIDs are mapped to users in the OneFS user database.  If false, incoming UIDs are applied directly to file operations.",
                    "type": "boolean"
                },
                "map_non_root": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "map_retry": {
                    "description": "Determines whether lookups for users specified in map_all, map_root or map_nonroot are retried if the look fails.",
                    "type": "boolean"
                },
                "map_root": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "max_file_size": {
                    "description": "The maximum file size in the export.",
                    "type": "integer"
                },
                "name_max_size": {
                    "description": "The reported maximum length of a file name.",
                    "type": "integer"
                },
                "no_truncate": {
                    "description": "If true, report that too-long file names result in an error",
                    "type": "boolean"
                },
                "read_only": {
                    "description": "If true, the export is read-only.",
                    "type": "boolean"
                },
                "read_transfer_max_size": {
                    "description": "The maximum buffer size that clients should use on NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "read_transfer_multiple": {
                    "description": "The preferred multiple size for NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "read_transfer_size": {
                    "description": "The optimal size for NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "readdirplus": {
                    "description": "If true, readdirplus requests are enabled.",
                    "type": "boolean"
                },
                "readdirplus_prefetch": {
                    "description": "This field is deprecated and does not do anything.",
                    "type": "integer"
                },
                "return_32bit_file_ids": {
                    "description": "Limits the size of file identifiers returned by NFSv3+ to 32-bit values.",
                    "type": "boolean"
                },
                "security_flavors": {
                    "description": "The authentication flavors that are supported for this export.",
                    "items": {
                        "description": "The security type.",
                        "enum": [
                            "unix",
                            "krb5",
                            "krb5i",
                            "krb5p"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "setattr_asynchronous": {
                    "description": "If true, allows setattr operations to execute asynchronously.",
                    "type": "boolean"
                },
                "snapshot": {
                    "description": "Use this snapshot for all mounts.",
                    "type": "string"
                },
                "symlinks": {
                    "description": "If true, paths reachable by symlinks are exported.",
                    "type": "boolean"
                },
                "time_delta": {
                    "description": "The resolution of all time values that are returned to clients.",
                    "type": "number"
                },
                "write_datasync_action": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_datasync_reply": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_filesync_action": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_filesync_reply": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_transfer_max_size": {
                    "description": "The maximum buffer size that clients should use on NFS write requests.  This option is advisory.",
                    "type": "integer"
                },
                "write_transfer_multiple": {
                    "description": "The preferred multiple size for NFS write requests.  This option is advisory.",
                    "type": "integer"
                },
                "write_transfer_size": {
                    "description": "The optimal size for NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "write_unstable_action": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_unstable_reply": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "zone": {
                    "description": "The zone in which the export is valid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NfsSettingsGlobal": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/NfsSettingsGlobalSettings",
                    "description": "Global NFS configuration."
                }
            },
            "type": "object"
        },
        "NfsSettingsGlobalSettings": {
            "properties": {
                "lock_protection": {
                    "description": "",
                    "type": "integer"
                },
                "nfsv3_enabled": {
                    "description": "Enable or disable NFSv3.",
                    "type": "boolean"
                },
                "nfsv4_enabled": {
                    "description": "Enable or disable NFSv4.",
                    "type": "boolean"
                },
                "rpc_maxthreads": {
                    "description": "Maximum number of threads in the nfs server thread pool.",
                    "type": "integer"
                },
                "rpc_minthreads": {
                    "description": "Minimum number of threads in the nfs server thread pool.",
                    "type": "integer"
                },
                "service": {
                    "description": "Enable or disable the nfs service.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NfsSettingsZone": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/NfsSettingsZoneSettings",
                    "description": "Per-zone NFS configuration."
                }
            },
            "type": "object"
        },
        "NfsSettingsZoneSettings": {
            "properties": {
                "nfsv4_allow_numeric_ids": {
                    "description": "Send owners/groups as UIDs/GIDs when lookups fail or if no_names=1 (v4)",
                    "type": "boolean"
                },
                "nfsv4_domain": {
                    "description": "The domain or realm used to associate users and groups.",
                    "type": "string"
                },
                "nfsv4_no_domain": {
                    "description": "Send owners/groups without domainname (v4)",
                    "type": "boolean"
                },
                "nfsv4_no_domain_uids": {
                    "description": "Send UIDs/GIDs without domainname (v4)",
                    "type": "boolean"
                },
                "nfsv4_no_names": {
                    "description": "Always send owners/groups as UIDs/GIDs (v4)",
                    "type": "boolean"
                },
                "nfsv4_replace_domain": {
                    "description": "Replace owner/group domain with nfs domainname. (v4)",
                    "type": "boolean"
                },
                "zone": {
                    "description": "The zone in which these settings apply",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersAds": {
            "properties": {
                "ads": {
                    "items": {
                        "$ref": "#/definitions/ProvidersAdsAdsItem",
                        "description": "An ADS provider of authentication."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersAdsAdsItem": {
            "properties": {
                "allocate_gids": {
                    "description": "Allocate GIDs for unmapped AD groups.",
                    "type": "boolean"
                },
                "allocate_uids": {
                    "description": "Enables allocation of UIDs for unmapped AD users.",
                    "type": "boolean"
                },
                "assume_default_domain": {
                    "description": "Enables lookup of unqualified user names in the primary domain.",
                    "type": "boolean"
                },
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "cache_entry_expiry": {
                    "description": "Specifies amount of time in seconds to cache a user/group.",
                    "type": "integer"
                },
                "check_online_interval": {
                    "description": "Specifies time in seconds between provider online checks.",
                    "type": "integer"
                },
                "controller_time": {
                    "description": "The domain controllers current time.",
                    "type": "integer"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "domain_offline_alerts": {
                    "description": "Send an alert if the domain goes offline.",
                    "type": "boolean"
                },
                "forest": {
                    "description": "The active directory forest.",
                    "type": "string"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "hostname": {
                    "description": "The fully qualified hostname stored in the machine account.",
                    "type": "string"
                },
                "id": {
                    "description": "Specifies Active Directory provider ID.",
                    "type": "string"
                },
                "ignore_all_trusts": {
                    "description": "Ignores all trusted domains.",
                    "type": "boolean"
                },
                "ignored_trusted_domains": {
                    "description": "Includes trusted domains when ignore_all_trusts false.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "include_trusted_domains": {
                    "description": "Includes trusted domains when ignore_all_trusts is true.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ldap_sign_and_seal": {
                    "description": "Uses encryption and signing on LDAP requests.",
                    "type": "boolean"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "lookup_domains": {
                    "description": "Limits user and group lookups to the specified domains.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "lookup_groups": {
                    "description": "Looks up AD groups in other providers before allocating a GID.",
                    "type": "boolean"
                },
                "lookup_normalize_groups": {
                    "description": "Normalizes AD group names to lowercase before lookup.",
                    "type": "boolean"
                },
                "lookup_normalize_users": {
                    "description": "Normalize AD user names to lowercase before lookup.",
                    "type": "boolean"
                },
                "lookup_users": {
                    "description": "Looks up AD users in other providers before allocating a UID.",
                    "type": "boolean"
                },
                "machine_account": {
                    "description": "The SAM account name of the machine account.",
                    "type": "string"
                },
                "machine_password_changes": {
                    "description": "Enables periodic changes of machine password for security.",
                    "type": "boolean"
                },
                "machine_password_lifespan": {
                    "description": "Sets maximum age of a password in seconds.",
                    "maximum": 31536000,
                    "minimum": 3600,
                    "type": "integer"
                },
                "name": {
                    "description": "Specifies Active Directory provider name.",
                    "type": "string"
                },
                "netbios_domain": {
                    "description": "NetBIOS domain name associated with the machine account.",
                    "type": "string"
                },
                "node_dc_affinity": {
                    "description": "Specifies the domain controller to which the node should affinitize",
                    "type": "string"
                },
                "node_dc_affinity_timeout": {
                    "description": "Specifies the timeout for the local node affinity to a domain controller",
                    "type": "integer"
                },
                "nss_enumeration": {
                    "description": "Enables the Active Directory provider to respond to getpwent and getgrent requests.",
                    "type": "boolean"
                },
                "primary_domain": {
                    "description": "The AD domain to which the provider is joined.",
                    "type": "string"
                },
                "sfu_support": {
                    "description": "Specifies whether to support RFC 2307 attributes for Windows domain controllers.",
                    "enum": [
                        "none",
                        "rfc2307"
                    ],
                    "type": "string"
                },
                "site": {
                    "description": "The active directory site.",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the provider.",
                    "type": "string"
                },
                "store_sfu_mappings": {
                    "description": "Stores SFU mappings permanently in the ID mapper.",
                    "type": "boolean"
                },
                "system": {
                    "description": "If true, this provider instance was created by OneFS and cannot be removed.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ProvidersAdsIdParams": {
            "description": "An ADS provider of authentication.",
            "properties": {
                "allocate_gids": {
                    "description": "Allocate GIDs for unmapped AD groups.",
                    "type": "boolean"
                },
                "allocate_uids": {
                    "description": "Enables allocation of UIDs for unmapped AD users.",
                    "type": "boolean"
                },
                "assume_default_domain": {
                    "description": "Enables lookup of unqualified user names in the primary domain.",
                    "type": "boolean"
                },
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "cache_entry_expiry": {
                    "description": "Specifies amount of time in seconds to cache a user/group.",
                    "type": "integer"
                },
                "check_online_interval": {
                    "description": "Specifies time in seconds between provider online checks.",
                    "type": "integer"
                },
                "controller_time": {
                    "description": "The domain controllers current time.",
                    "type": "integer"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "domain_controller": {
                    "description": "A preferred domain controller to which the authentication service should send requests",
                    "type": "string"
                },
                "domain_offline_alerts": {
                    "description": "Send an alert if the domain goes offline.",
                    "type": "boolean"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "ignore_all_trusts": {
                    "description": "Ignores all trusted domains.",
                    "type": "boolean"
                },
                "ignored_trusted_domains": {
                    "description": "Includes trusted domains when ignore_all_trusts false.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "include_trusted_domains": {
                    "description": "Includes trusted domains when ignore_all_trusts is true.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ldap_sign_and_seal": {
                    "description": "Uses encryption and signing on LDAP requests.",
                    "type": "boolean"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "lookup_domains": {
                    "description": "Limits user and group lookups to the specified domains.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "lookup_groups": {
                    "description": "Looks up AD groups in other providers before allocating a GID.",
                    "type": "boolean"
                },
                "lookup_normalize_groups": {
                    "description": "Normalizes AD group names to lowercase before lookup.",
                    "type": "boolean"
                },
                "lookup_normalize_users": {
                    "description": "Normalize AD user names to lowercase before lookup.",
                    "type": "boolean"
                },
                "lookup_users": {
                    "description": "Looks up AD users in other providers before allocating a UID.",
                    "type": "boolean"
                },
                "machine_password_changes": {
                    "description": "Enables periodic changes of machine password for security.",
                    "type": "boolean"
                },
                "machine_password_lifespan": {
                    "description": "Sets maximum age of a password in seconds.",
                    "maximum": 31536000,
                    "minimum": 3600,
                    "type": "integer"
                },
                "node_dc_affinity": {
                    "description": "Specifies the domain controller to which the node should affinitize",
                    "type": "string"
                },
                "node_dc_affinity_timeout": {
                    "description": "Specifies the timeout for the local node affinity to a domain controller",
                    "type": "integer"
                },
                "nss_enumeration": {
                    "description": "Enables the Active Directory provider to respond to getpwent and getgrent requests.",
                    "type": "boolean"
                },
                "reset_schannel": {
                    "description": "Reset the secure channel to the primary domain.",
                    "type": "boolean"
                },
                "sfu_support": {
                    "description": "Specifies whether to support RFC 2307 attributes for Windows domain controllers.",
                    "enum": [
                        "none",
                        "rfc2307"
                    ],
                    "type": "string"
                },
                "store_sfu_mappings": {
                    "description": "Stores SFU mappings permanently in the ID mapper.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ProvidersAdsItem": {
            "description": "An ADS provider of authentication.",
            "properties": {
                "account": {
                    "description": "Machine account name to use in AD. Default is the cluster name.",
                    "type": "string"
                },
                "allocate_gids": {
                    "description": "Allocate GIDs for unmapped AD groups.",
                    "type": "boolean"
                },
                "allocate_uids": {
                    "description": "Enables allocation of UIDs for unmapped AD users.",
                    "type": "boolean"
                },
                "assume_default_domain": {
                    "description": "Enables lookup of unqualified user names in the primary domain.",
                    "type": "boolean"
                },
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "cache_entry_expiry": {
                    "description": "Specifies amount of time in seconds to cache a user/group.",
                    "type": "integer"
                },
                "check_online_interval": {
                    "description": "Specifies time in seconds between provider online checks.",
                    "type": "integer"
                },
                "controller_time": {
                    "description": "The domain controllers current time.",
                    "type": "integer"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "dns_domain": {
                    "description": "The DNS search domain.  Set if DNS search domain differs.",
                    "type": "string"
                },
                "domain_offline_alerts": {
                    "description": "Send an alert if the domain goes offline.",
                    "type": "boolean"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "ignore_all_trusts": {
                    "description": "Ignores all trusted domains.",
                    "type": "boolean"
                },
                "ignored_trusted_domains": {
                    "description": "Includes trusted domains when ignore_all_trusts false.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "include_trusted_domains": {
                    "description": "Includes trusted domains when ignore_all_trusts is true.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "kerberos_hdfs_spn": {
                    "description": "SPN for using Kerberized HDFS.",
                    "type": "boolean"
                },
                "kerberos_nfs_spn": {
                    "description": "SPN for using Kerberized NFS.",
                    "type": "boolean"
                },
                "ldap_sign_and_seal": {
                    "description": "Uses encryption and signing on LDAP requests.",
                    "type": "boolean"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "lookup_domains": {
                    "description": "Limits user and group lookups to the specified domains.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "lookup_groups": {
                    "description": "Looks up AD groups in other providers before allocating a GID.",
                    "type": "boolean"
                },
                "lookup_normalize_groups": {
                    "description": "Normalizes AD group names to lowercase before lookup.",
                    "type": "boolean"
                },
                "lookup_normalize_users": {
                    "description": "Normalize AD user names to lowercase before lookup.",
                    "type": "boolean"
                },
                "lookup_users": {
                    "description": "Looks up AD users in other providers before allocating a UID.",
                    "type": "boolean"
                },
                "machine_password_changes": {
                    "description": "Enables periodic changes of machine password for security.",
                    "type": "boolean"
                },
                "machine_password_lifespan": {
                    "description": "Sets maximum age of a password in seconds.",
                    "maximum": 31536000,
                    "minimum": 3600,
                    "type": "integer"
                },
                "name": {
                    "description": "Specifies Active Directory provider name.",
                    "type": "string"
                },
                "node_dc_affinity": {
                    "description": "Specifies the domain controller to which the node should affinitize",
                    "type": "string"
                },
                "node_dc_affinity_timeout": {
                    "description": "Specifies the timeout for the local node affinity to a domain controller",
                    "type": "integer"
                },
                "nss_enumeration": {
                    "description": "Enables the Active Directory provider to respond to getpwent and getgrent requests.",
                    "type": "boolean"
                },
                "organizational_unit": {
                    "description": "The organizational unit.",
                    "type": "string"
                },
                "password": {
                    "description": "Password used during domain join.",
                    "type": "string"
                },
                "sfu_support": {
                    "description": "Specifies whether to support RFC 2307 attributes for Windows domain controllers.",
                    "enum": [
                        "none",
                        "rfc2307"
                    ],
                    "type": "string"
                },
                "store_sfu_mappings": {
                    "description": "Stores SFU mappings permanently in the ID mapper.",
                    "type": "boolean"
                },
                "user": {
                    "description": "User name with permission to join machine to the given domain.",
                    "type": "string"
                }
            },
            "required": [
                "user",
                "password",
                "name"
            ],
            "type": "object"
        },
        "ProvidersFile": {
            "properties": {
                "file": {
                    "items": {
                        "$ref": "#/definitions/ProvidersFileFileItem",
                        "description": "A file provider of authentication."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersFileFileItem": {
            "properties": {
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "cache_entry_expiry": {
                    "description": "Specifies amount of time in seconds to cache a user/group.",
                    "type": "integer"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Enables the file provider.",
                    "type": "boolean"
                },
                "enumerate_groups": {
                    "description": "Enables provider to enumerate groups.",
                    "type": "boolean"
                },
                "enumerate_users": {
                    "description": "Enables provider to enumerate users.",
                    "type": "boolean"
                },
                "findable_groups": {
                    "description": "Sets list of groups that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "findable_users": {
                    "description": "Sets list of users that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "group_domain": {
                    "description": "Domain used to qualify groups for this provider.",
                    "type": "string"
                },
                "group_file": {
                    "description": "Location of the file containing group information.",
                    "type": "string"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "id": {
                    "description": "Specifies file provider ID.",
                    "type": "string"
                },
                "listable_groups": {
                    "description": "Specifies groups that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "listable_users": {
                    "description": "Specifies users that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "modifiable_groups": {
                    "description": "Specifies groups that can be modified in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "modifiable_users": {
                    "description": "Specifies users that can be modified in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Specifies file provider name.",
                    "type": "string"
                },
                "netgroup_file": {
                    "description": "Path to a netgroups replacement file.",
                    "type": "string"
                },
                "normalize_groups": {
                    "description": "Normalizes group name to lowercase before lookup.",
                    "type": "boolean"
                },
                "normalize_users": {
                    "description": "Normalizes user name to lowercase before lookup.",
                    "type": "boolean"
                },
                "ntlm_support": {
                    "description": "For users with NTLM-compatible credentials, specify what NTLM versions to support.",
                    "enum": [
                        "all",
                        "v2only",
                        "none"
                    ],
                    "type": "string"
                },
                "password_file": {
                    "description": "Location of the file containing user information.",
                    "type": "string"
                },
                "provider_domain": {
                    "description": "Specifies the provider domain.",
                    "type": "string"
                },
                "restrict_findable": {
                    "description": "Check the provider for filtered lists of findable and unfindable users and groups.",
                    "type": "boolean"
                },
                "restrict_listable": {
                    "description": "Check the provider for filtered lists of listable and unlistable users and groups.",
                    "type": "boolean"
                },
                "restrict_modifiable": {
                    "description": "Check the provider for filtered lists of modifiable and unmodifiable users and groups.",
                    "type": "boolean"
                },
                "status": {
                    "description": "The status of the provider.",
                    "type": "string"
                },
                "system": {
                    "description": "If true, this provider instance was created by OneFS and cannot be removed.",
                    "type": "boolean"
                },
                "unfindable_groups": {
                    "description": "Specifies a group that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_users": {
                    "description": "Specifies a group that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_groups": {
                    "description": "Specifies a group that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_users": {
                    "description": "Specifies a user that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unmodifiable_groups": {
                    "description": "Specifies a group that cannot be modified by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unmodifiable_users": {
                    "description": "Specifies a user that cannot be modified by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user_domain": {
                    "description": "Domain used to qualify users for this provider.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersFileIdParams": {
            "description": "A file provider of authentication.",
            "properties": {
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "cache_entry_expiry": {
                    "description": "Specifies amount of time in seconds to cache a user/group.",
                    "type": "integer"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Enables the file provider.",
                    "type": "boolean"
                },
                "enumerate_groups": {
                    "description": "Enables provider to enumerate groups.",
                    "type": "boolean"
                },
                "enumerate_users": {
                    "description": "Enables provider to enumerate users.",
                    "type": "boolean"
                },
                "findable_groups": {
                    "description": "Sets list of groups that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "findable_users": {
                    "description": "Sets list of users that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "group_domain": {
                    "description": "Domain used to qualify groups for this provider.",
                    "type": "string"
                },
                "group_file": {
                    "description": "Location of the file containing group information.",
                    "type": "string"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "listable_groups": {
                    "description": "Specifies groups that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "listable_users": {
                    "description": "Specifies users that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "modifiable_groups": {
                    "description": "Specifies groups that can be modified in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "modifiable_users": {
                    "description": "Specifies users that can be modified in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Specifies file provider name.",
                    "type": "string"
                },
                "netgroup_file": {
                    "description": "Path to a netgroups replacement file.",
                    "type": "string"
                },
                "normalize_groups": {
                    "description": "Normalizes group name to lowercase before lookup.",
                    "type": "boolean"
                },
                "normalize_users": {
                    "description": "Normalizes user name to lowercase before lookup.",
                    "type": "boolean"
                },
                "ntlm_support": {
                    "description": "For users with NTLM-compatible credentials, specify what NTLM versions to support.",
                    "enum": [
                        "all",
                        "v2only",
                        "none"
                    ],
                    "type": "string"
                },
                "password_file": {
                    "description": "Location of the file containing user information.",
                    "type": "string"
                },
                "provider_domain": {
                    "description": "Specifies the provider domain.",
                    "type": "string"
                },
                "restrict_findable": {
                    "description": "Check the provider for filtered lists of findable and unfindable users and groups.",
                    "type": "boolean"
                },
                "restrict_listable": {
                    "description": "Check the provider for filtered lists of listable and unlistable users and groups.",
                    "type": "boolean"
                },
                "restrict_modifiable": {
                    "description": "Check the provider for filtered lists of modifiable and unmodifiable users and groups.",
                    "type": "boolean"
                },
                "unfindable_groups": {
                    "description": "Specifies a group that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_users": {
                    "description": "Specifies a group that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_groups": {
                    "description": "Specifies a group that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_users": {
                    "description": "Specifies a user that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unmodifiable_groups": {
                    "description": "Specifies a group that cannot be modified by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unmodifiable_users": {
                    "description": "Specifies a user that cannot be modified by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user_domain": {
                    "description": "Domain used to qualify users for this provider.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersFileItem": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProvidersFileIdParams"
                },
                {
                    "description": "A file provider of authentication.",
                    "properties": {},
                    "required": [
                        "password_file",
                        "group_file",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "ProvidersKrb5": {
            "properties": {
                "krb5": {
                    "items": {
                        "$ref": "#/definitions/ProvidersKrb5Krb5Item",
                        "description": "A Kerberos provider of authentication."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersKrb5Extended": {
            "properties": {
                "krb5": {
                    "items": {
                        "$ref": "#/definitions/ProvidersKrb5Krb5ItemExtended",
                        "description": "A Kerberos provider of authentication."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersKrb5IdParams": {
            "description": "A Kerberos provider of authentication.",
            "properties": {
                "keytab_entries": {
                    "description": "Service principal names to register",
                    "items": {
                        "$ref": "#/definitions/ProvidersKrb5IdParamsKeytabEntry",
                        "description": "Krb5 SPN Key info"
                    },
                    "type": "array"
                },
                "keytab_file": {
                    "description": "Path to a keytab file to import",
                    "type": "string"
                },
                "manual_keying": {
                    "description": "Indicates keys are managed manually rather than with kadmin",
                    "type": "boolean"
                },
                "name": {
                    "description": "Specifies Kerberos provider name.",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "realm": {
                    "description": "Name of realm we are joined to",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the provider.",
                    "type": "string"
                },
                "user": {
                    "description": "Name of the user to use for kadmin tasks",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersKrb5IdParamsKeytabEntry": {
            "properties": {
                "encryption": {
                    "description": "List of encryption types.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "kvno": {
                    "description": "Version number of the SPN key.",
                    "type": "integer"
                },
                "spn": {
                    "description": "The service principal name.",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Time the key was created.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ProvidersKrb5Item": {
            "description": "A Kerberos provider of authentication.",
            "properties": {
                "keytab_entries": {
                    "description": "Service principal names to register",
                    "items": {
                        "$ref": "#/definitions/ProvidersKrb5IdParamsKeytabEntry",
                        "description": "Krb5 SPN Key info"
                    },
                    "type": "array"
                },
                "keytab_file": {
                    "description": "Path to a keytab file to import",
                    "type": "string"
                },
                "manual_keying": {
                    "description": "Indicates keys are managed manually rather than with kadmin",
                    "type": "boolean"
                },
                "name": {
                    "description": "Specifies Kerberos provider name.",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "realm": {
                    "description": "Name of realm we are joined to",
                    "type": "string"
                },
                "user": {
                    "description": "Name of the user to use for kadmin tasks",
                    "type": "string"
                }
            },
            "required": [
                "realm"
            ],
            "type": "object"
        },
        "ProvidersKrb5Krb5Item": {
            "properties": {
                "id": {
                    "description": "Specifies Kerberos provider ID.",
                    "type": "string"
                },
                "keytab_entries": {
                    "description": "Service principal names to register",
                    "items": {
                        "$ref": "#/definitions/ProvidersKrb5IdParamsKeytabEntry",
                        "description": "Krb5 SPN Key info"
                    },
                    "type": "array"
                },
                "keytab_file": {
                    "description": "Path to a keytab file to import",
                    "type": "string"
                },
                "manual_keying": {
                    "description": "Indicates keys are managed manually rather than with kadmin",
                    "type": "boolean"
                },
                "name": {
                    "description": "Specifies Kerberos provider name.",
                    "type": "string"
                },
                "realm": {
                    "description": "Name of realm we are joined to",
                    "type": "string"
                },
                "recommended_spns": {
                    "description": "Service principal names advised to be populated",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "The status of the provider.",
                    "type": "string"
                },
                "system": {
                    "description": "If true, this provider instance was created by OneFS and cannot be removed",
                    "type": "boolean"
                },
                "user": {
                    "description": "Name of the user to use for kadmin tasks",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersKrb5Krb5ItemExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProvidersKrb5Krb5Item"
                },
                {
                    "properties": {
                        "password": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ProvidersLdap": {
            "properties": {
                "ldap": {
                    "items": {
                        "$ref": "#/definitions/ProvidersLdapLdapItem",
                        "description": "An LDAP provider of authentication."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersLdapIdParams": {
            "description": "An LDAP provider of authentication.",
            "properties": {
                "alternate_security_identities_attribute": {
                    "description": "Specifies attribute name used when searching for alternate security identities.",
                    "type": "string"
                },
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "balance_servers": {
                    "description": "Makes provider connect to a random server.",
                    "type": "boolean"
                },
                "base_dn": {
                    "description": "Sets root of tree in which to search identities.",
                    "type": "string"
                },
                "bind_dn": {
                    "description": "Sets distinguished name used when binding to LDAP server.",
                    "type": "string"
                },
                "bind_mechanism": {
                    "description": "Bind mechanism to use when connecting to an LDAP server; 'simple' is the only supported option.",
                    "enum": [
                        "simple",
                        "gssapi",
                        "digest-md5"
                    ],
                    "type": "string"
                },
                "bind_password": {
                    "description": "Sets password for distinguished name used when binding to the LDAP server.",
                    "type": "string"
                },
                "bind_timeout": {
                    "description": "Sets timeout in seconds when binding to LDAP server.",
                    "type": "integer"
                },
                "cache_entry_expiry": {
                    "description": "Specifies amount of time in seconds to cache a user/group.",
                    "type": "integer"
                },
                "certificate_authority_file": {
                    "description": "Sets path to root certificates file.",
                    "type": "string"
                },
                "check_online_interval": {
                    "description": "Specifies time in seconds between provider online checks.",
                    "type": "integer"
                },
                "cn_attribute": {
                    "description": "Specifies canonical name.",
                    "type": "string"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "crypt_password_attribute": {
                    "description": "Sets hashed password value.",
                    "type": "string"
                },
                "email_attribute": {
                    "description": "Sets the LDAP Email attribute.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Enables the LDAP provider.",
                    "type": "boolean"
                },
                "enumerate_groups": {
                    "description": "Enables provider to enumerate groups.",
                    "type": "boolean"
                },
                "enumerate_users": {
                    "description": "Enables provider to enumerate users.",
                    "type": "boolean"
                },
                "findable_groups": {
                    "description": "Sets list of groups that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "findable_users": {
                    "description": "Sets list of users that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gecos_attribute": {
                    "description": "Sets the LDAP GECOS attribute.",
                    "type": "string"
                },
                "gid_attribute": {
                    "description": "Sets the LDAP GID attribute.",
                    "type": "string"
                },
                "group_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start LDAP searches for groups.",
                    "type": "string"
                },
                "group_domain": {
                    "description": "Domain used to qualify groups for this provider.",
                    "type": "string"
                },
                "group_filter": {
                    "description": "Sets LDAP filter for group objects.",
                    "type": "string"
                },
                "group_members_attribute": {
                    "description": "Sets the LDAP Group Members attribute.",
                    "type": "string"
                },
                "group_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "homedir_attribute": {
                    "description": "Sets the LDAP Homedir attribute.",
                    "type": "string"
                },
                "ignore_tls_errors": {
                    "description": "Continues over secure connection even if identity checks fail.",
                    "type": "boolean"
                },
                "listable_groups": {
                    "description": "Specifies groups that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "listable_users": {
                    "description": "Specifies users that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "member_of_attribute": {
                    "description": "Sets the LDAP Query Member Of attribute, which is used for reverse membership queries",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the name of the LDAP provider.",
                    "type": "string"
                },
                "name_attribute": {
                    "description": "Sets the LDAP UID attribute, which is used as the login name.",
                    "type": "string"
                },
                "netgroup_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start the LDAP search for netgroups.",
                    "type": "string"
                },
                "netgroup_filter": {
                    "description": "Sets LDAP filter for netgroup objects.",
                    "type": "string"
                },
                "netgroup_members_attribute": {
                    "description": "Sets the LDAP Netgroup Members attribute.",
                    "type": "string"
                },
                "netgroup_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "netgroup_triple_attribute": {
                    "description": "Sets the LDAP Netgroup Triple attribute.",
                    "type": "string"
                },
                "normalize_groups": {
                    "description": "Normalizes group name to lowercase before lookup.",
                    "type": "boolean"
                },
                "normalize_users": {
                    "description": "Normalizes user name to lowercase before lookup.",
                    "type": "boolean"
                },
                "nt_password_attribute": {
                    "description": "Sets the LDAP NT Password attribute.",
                    "type": "string"
                },
                "ntlm_support": {
                    "description": "For users with NTLM-compatible credentials, specify what NTLM versions to support.",
                    "enum": [
                        "all",
                        "v2only",
                        "none"
                    ],
                    "type": "string"
                },
                "provider_domain": {
                    "description": "Specifies the provider domain.",
                    "type": "string"
                },
                "require_secure_connection": {
                    "description": "Specifies whether to continue over non-TLS connection.",
                    "type": "boolean"
                },
                "restrict_findable": {
                    "description": "Check the provider for filtered lists of findable and unfindable users and groups.",
                    "type": "boolean"
                },
                "restrict_listable": {
                    "description": "Check the provider for filtered lists of listable and unlistable users and groups.",
                    "type": "boolean"
                },
                "search_scope": {
                    "description": "Defines the default depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "search_timeout": {
                    "description": "Sets search timeout period in seconds.",
                    "type": "integer"
                },
                "server_uris": {
                    "description": "Sets server URIs.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "shell_attribute": {
                    "description": "Sets the LDAP Shell attribute.",
                    "type": "string"
                },
                "uid_attribute": {
                    "description": "Sets the LDAP UID Number attribute.",
                    "type": "string"
                },
                "unfindable_groups": {
                    "description": "Specifies groups that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_users": {
                    "description": "Specifies users that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unique_group_members_attribute": {
                    "description": "Sets the LDAP Unique Group Members attribute.",
                    "type": "string"
                },
                "unlistable_groups": {
                    "description": "Specifies a group that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_users": {
                    "description": "Specifies a user that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start LDAP searches for users.",
                    "type": "string"
                },
                "user_domain": {
                    "description": "Domain used to qualify users for this provider.",
                    "type": "string"
                },
                "user_filter": {
                    "description": "Sets LDAP filter for user objects.",
                    "type": "string"
                },
                "user_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersLdapItem": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProvidersLdapIdParams"
                },
                {
                    "description": "An LDAP provider of authentication.",
                    "properties": {},
                    "required": [
                        "base_dn",
                        "server_uris",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "ProvidersLdapLdapItem": {
            "properties": {
                "alternate_security_identities_attribute": {
                    "description": "Specifies attribute name used when searching for alternate security identities.",
                    "type": "string"
                },
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "balance_servers": {
                    "description": "Makes provider connect to a random server.",
                    "type": "boolean"
                },
                "base_dn": {
                    "description": "Sets root of tree in which to search identities.",
                    "type": "string"
                },
                "bind_dn": {
                    "description": "Sets distinguished name used when binding to LDAP server.",
                    "type": "string"
                },
                "bind_mechanism": {
                    "description": "Bind mechanism to use when connecting to an LDAP server; 'simple' is the only supported option.",
                    "enum": [
                        "simple",
                        "gssapi",
                        "digest-md5"
                    ],
                    "type": "string"
                },
                "bind_timeout": {
                    "description": "Sets timeout in seconds when binding to LDAP server.",
                    "type": "integer"
                },
                "cache_entry_expiry": {
                    "description": "Specifies amount of time in seconds to cache a user/group.",
                    "type": "integer"
                },
                "certificate_authority_file": {
                    "description": "Sets path to root certificates file.",
                    "type": "string"
                },
                "check_online_interval": {
                    "description": "Specifies time in seconds between provider online checks.",
                    "type": "integer"
                },
                "cn_attribute": {
                    "description": "Specifies canonical name.",
                    "type": "string"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "crypt_password_attribute": {
                    "description": "Sets hashed password value.",
                    "type": "string"
                },
                "email_attribute": {
                    "description": "Sets the LDAP Email attribute.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Enables the LDAP provider.",
                    "type": "boolean"
                },
                "enumerate_groups": {
                    "description": "Enables provider to enumerate groups.",
                    "type": "boolean"
                },
                "enumerate_users": {
                    "description": "Enables provider to enumerate users.",
                    "type": "boolean"
                },
                "findable_groups": {
                    "description": "Sets list of groups that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "findable_users": {
                    "description": "Sets list of users that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gecos_attribute": {
                    "description": "Sets the LDAP GECOS attribute.",
                    "type": "string"
                },
                "gid_attribute": {
                    "description": "Sets the LDAP GID attribute.",
                    "type": "string"
                },
                "group_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start LDAP searches for groups.",
                    "type": "string"
                },
                "group_domain": {
                    "description": "Domain used to qualify groups for this provider.",
                    "type": "string"
                },
                "group_filter": {
                    "description": "Sets LDAP filter for group objects.",
                    "type": "string"
                },
                "group_members_attribute": {
                    "description": "Sets the LDAP Group Members attribute.",
                    "type": "string"
                },
                "group_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "homedir_attribute": {
                    "description": "Sets the LDAP Homedir attribute.",
                    "type": "string"
                },
                "id": {
                    "description": "Specifies the ID of the LDAP provider.",
                    "type": "string"
                },
                "ignore_tls_errors": {
                    "description": "Continues over secure connection even if identity checks fail.",
                    "type": "boolean"
                },
                "listable_groups": {
                    "description": "Specifies groups that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "listable_users": {
                    "description": "Specifies users that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "member_of_attribute": {
                    "description": "Sets the LDAP Query Member Of attribute, which is used for reverse membership queries",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the name of the LDAP provider.",
                    "type": "string"
                },
                "name_attribute": {
                    "description": "Sets the LDAP UID attribute, which is used as the login name.",
                    "type": "string"
                },
                "netgroup_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start the LDAP search for netgroups.",
                    "type": "string"
                },
                "netgroup_filter": {
                    "description": "Sets LDAP filter for netgroup objects.",
                    "type": "string"
                },
                "netgroup_members_attribute": {
                    "description": "Sets the LDAP Netgroup Members attribute.",
                    "type": "string"
                },
                "netgroup_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "netgroup_triple_attribute": {
                    "description": "Sets the LDAP Netgroup Triple attribute.",
                    "type": "string"
                },
                "normalize_groups": {
                    "description": "Normalizes group name to lowercase before lookup.",
                    "type": "boolean"
                },
                "normalize_users": {
                    "description": "Normalizes user name to lowercase before lookup.",
                    "type": "boolean"
                },
                "nt_password_attribute": {
                    "description": "Sets the LDAP NT Password attribute.",
                    "type": "string"
                },
                "ntlm_support": {
                    "description": "For users with NTLM-compatible credentials, specify what NTLM versions to support.",
                    "enum": [
                        "all",
                        "v2only",
                        "none"
                    ],
                    "type": "string"
                },
                "provider_domain": {
                    "description": "Specifies the provider domain.",
                    "type": "string"
                },
                "require_secure_connection": {
                    "description": "Specifies whether to continue over non-TLS connection.",
                    "type": "boolean"
                },
                "restrict_findable": {
                    "description": "Check the provider for filtered lists of findable and unfindable users and groups.",
                    "type": "boolean"
                },
                "restrict_listable": {
                    "description": "Check the provider for filtered lists of listable and unlistable users and groups.",
                    "type": "boolean"
                },
                "search_scope": {
                    "description": "Defines the default depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "search_timeout": {
                    "description": "Sets search timeout period in seconds.",
                    "type": "integer"
                },
                "server_uris": {
                    "description": "Sets server URIs.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "shell_attribute": {
                    "description": "Sets the LDAP Shell attribute.",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the provider.",
                    "type": "string"
                },
                "system": {
                    "description": "If true, this provider instance was created by OneFS and cannot be removed.",
                    "type": "boolean"
                },
                "uid_attribute": {
                    "description": "Sets the LDAP UID Number attribute.",
                    "type": "string"
                },
                "unfindable_groups": {
                    "description": "Specifies groups that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_users": {
                    "description": "Specifies users that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unique_group_members_attribute": {
                    "description": "Sets the LDAP Unique Group Members attribute.",
                    "type": "string"
                },
                "unlistable_groups": {
                    "description": "Specifies a group that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_users": {
                    "description": "Specifies a user that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start LDAP searches for users.",
                    "type": "string"
                },
                "user_domain": {
                    "description": "Domain used to qualify users for this provider.",
                    "type": "string"
                },
                "user_filter": {
                    "description": "Sets LDAP filter for user objects.",
                    "type": "string"
                },
                "user_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersLocal": {
            "properties": {
                "local": {
                    "items": {
                        "$ref": "#/definitions/ProvidersLocalLocalItem",
                        "description": "A local provider of authentication."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersLocalIdParams": {
            "description": "A local provider of authentication.",
            "properties": {
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "lockout_duration": {
                    "description": "Sets length of time in seconds that an account will be inaccessible after multiple failed login attempts.",
                    "type": "integer"
                },
                "lockout_threshold": {
                    "description": "Sets the number of failed login attempts necessary for an account to be locked out.",
                    "type": "integer"
                },
                "lockout_window": {
                    "description": "Sets the time in seconds in which lockout_threshold failed attempts must be made for an account to be locked out.",
                    "type": "integer"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "machine_name": {
                    "description": "Specifies domain used to qualify user and group names for this provider.",
                    "type": "string"
                },
                "max_password_age": {
                    "description": "Sets maximum password age in seconds.",
                    "type": "integer"
                },
                "min_password_age": {
                    "description": "Sets minimum password age in seconds.",
                    "type": "integer"
                },
                "min_password_length": {
                    "description": "Sets minimum password length.",
                    "type": "integer"
                },
                "name": {
                    "description": "Specifies local provider name.",
                    "type": "string"
                },
                "password_complexity": {
                    "description": "List of cases required in a password. Options are lowercase, uppercase, numeric and symbol",
                    "items": {
                        "enum": [
                            "lowercase",
                            "uppercase",
                            "numeric",
                            "symbol"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "password_history_length": {
                    "description": "The number of previous passwords to store.",
                    "type": "integer"
                },
                "password_prompt_time": {
                    "description": "Specifies time in seconds remaining before prompting for password change.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ProvidersLocalLocalItem": {
            "properties": {
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "id": {
                    "description": "Specifies local provider ID.",
                    "type": "string"
                },
                "lockout_duration": {
                    "description": "Sets length of time in seconds that an account will be inaccessible after multiple failed login attempts.",
                    "type": "integer"
                },
                "lockout_threshold": {
                    "description": "Sets the number of failed login attempts necessary for an account to be locked out.",
                    "type": "integer"
                },
                "lockout_window": {
                    "description": "Sets the time in seconds in which lockout_threshold failed attempts must be made for an account to be locked out.",
                    "type": "integer"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "machine_name": {
                    "description": "Specifies domain used to qualify user and group names for this provider.",
                    "type": "string"
                },
                "max_password_age": {
                    "description": "Sets maximum password age in seconds.",
                    "type": "integer"
                },
                "min_password_age": {
                    "description": "Sets minimum password age in seconds.",
                    "type": "integer"
                },
                "min_password_length": {
                    "description": "Sets minimum password length.",
                    "type": "integer"
                },
                "name": {
                    "description": "Specifies local provider name.",
                    "type": "string"
                },
                "password_complexity": {
                    "description": "List of cases required in a password. Options are lowercase, uppercase, numeric and symbol",
                    "items": {
                        "enum": [
                            "lowercase",
                            "uppercase",
                            "numeric",
                            "symbol"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "password_history_length": {
                    "description": "The number of previous passwords to store.",
                    "type": "integer"
                },
                "password_prompt_time": {
                    "description": "Specifies time in seconds remaining before prompting for password change.",
                    "type": "integer"
                },
                "status": {
                    "description": "The status of the provider.",
                    "type": "string"
                },
                "system": {
                    "description": "If true, this provider instance was created by OneFS and cannot be removed.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ProvidersNis": {
            "properties": {
                "nis": {
                    "items": {
                        "$ref": "#/definitions/ProvidersNisNisItem",
                        "description": "A NIS provider of authentication."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersNisIdParams": {
            "description": "A NIS provider of authentication.",
            "properties": {
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "balance_servers": {
                    "description": "Makes provider connect to a random server.",
                    "type": "boolean"
                },
                "cache_entry_expiry": {
                    "description": "Specifies amount of time in seconds to cache a user/group.",
                    "type": "integer"
                },
                "check_online_interval": {
                    "description": "Specifies time in seconds between provider online checks.",
                    "type": "integer"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Enables NIS provider.",
                    "type": "boolean"
                },
                "enumerate_groups": {
                    "description": "Enables provider to enumerate groups.",
                    "type": "boolean"
                },
                "enumerate_users": {
                    "description": "Enables provider to enumerate users.",
                    "type": "boolean"
                },
                "findable_groups": {
                    "description": "Sets list of groups that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "findable_users": {
                    "description": "Sets list of users that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "group_domain": {
                    "description": "Domain used to qualify groups for this provider.",
                    "type": "string"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "hostname_lookup": {
                    "description": "Enables host name lookups.",
                    "type": "boolean"
                },
                "listable_groups": {
                    "description": "Specifies groups that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "listable_users": {
                    "description": "Specifies users that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies NIS provider name.",
                    "type": "string"
                },
                "nis_domain": {
                    "description": "Specifies NIS domain name.",
                    "type": "string"
                },
                "normalize_groups": {
                    "description": "Normalizes group name to lowercase before lookup.",
                    "type": "boolean"
                },
                "normalize_users": {
                    "description": "Normalizes user name to lowercase before lookup.",
                    "type": "boolean"
                },
                "ntlm_support": {
                    "description": "For users with NTLM-compatible credentials, specify what NTLM versions to support.",
                    "enum": [
                        "all",
                        "v2only",
                        "none"
                    ],
                    "type": "string"
                },
                "provider_domain": {
                    "description": "Specifies the provider domain.",
                    "type": "string"
                },
                "request_timeout": {
                    "description": "Specifies the request timeout interval in seconds.",
                    "type": "integer"
                },
                "restrict_findable": {
                    "description": "Check the provider for filtered lists of findable and unfindable users and groups.",
                    "type": "boolean"
                },
                "restrict_listable": {
                    "description": "Check the provider for filtered lists of listable and unlistable users and groups.",
                    "type": "boolean"
                },
                "retry_time": {
                    "description": "Sets timeout period in seconds after which a request will be retried.",
                    "type": "integer"
                },
                "servers": {
                    "description": "Adds a NIS server to be used by this provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_groups": {
                    "description": "Specifies a group that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_users": {
                    "description": "Specifies a group that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_groups": {
                    "description": "Specifies a group that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_users": {
                    "description": "Specifies a user that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user_domain": {
                    "description": "Domain used to qualify users for this provider.",
                    "type": "string"
                },
                "ypmatch_using_tcp": {
                    "description": "Uses TCP for YP Match operations.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ProvidersNisItem": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProvidersNisIdParams"
                },
                {
                    "description": "A NIS provider of authentication.",
                    "properties": {},
                    "required": [
                        "servers",
                        "nis_domain",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "ProvidersNisNisItem": {
            "properties": {
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "balance_servers": {
                    "description": "Makes provider connect to a random server.",
                    "type": "boolean"
                },
                "cache_entry_expiry": {
                    "description": "Specifies amount of time in seconds to cache a user/group.",
                    "type": "integer"
                },
                "check_online_interval": {
                    "description": "Specifies time in seconds between provider online checks.",
                    "type": "integer"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Enables NIS provider.",
                    "type": "boolean"
                },
                "enumerate_groups": {
                    "description": "Enables provider to enumerate groups.",
                    "type": "boolean"
                },
                "enumerate_users": {
                    "description": "Enables provider to enumerate users.",
                    "type": "boolean"
                },
                "findable_groups": {
                    "description": "Sets list of groups that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "findable_users": {
                    "description": "Sets list of users that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "group_domain": {
                    "description": "Domain used to qualify groups for this provider.",
                    "type": "string"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "hostname_lookup": {
                    "description": "Enables host name lookups.",
                    "type": "boolean"
                },
                "id": {
                    "description": "Specifies NIS provider ID.",
                    "type": "string"
                },
                "listable_groups": {
                    "description": "Specifies groups that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "listable_users": {
                    "description": "Specifies users that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies NIS provider name.",
                    "type": "string"
                },
                "nis_domain": {
                    "description": "Specifies NIS domain name.",
                    "type": "string"
                },
                "normalize_groups": {
                    "description": "Normalizes group name to lowercase before lookup.",
                    "type": "boolean"
                },
                "normalize_users": {
                    "description": "Normalizes user name to lowercase before lookup.",
                    "type": "boolean"
                },
                "ntlm_support": {
                    "description": "For users with NTLM-compatible credentials, specify what NTLM versions to support.",
                    "enum": [
                        "all",
                        "v2only",
                        "none"
                    ],
                    "type": "string"
                },
                "provider_domain": {
                    "description": "Specifies the provider domain.",
                    "type": "string"
                },
                "request_timeout": {
                    "description": "Specifies the request timeout interval in seconds.",
                    "type": "integer"
                },
                "restrict_findable": {
                    "description": "Check the provider for filtered lists of findable and unfindable users and groups.",
                    "type": "boolean"
                },
                "restrict_listable": {
                    "description": "Check the provider for filtered lists of listable and unlistable users and groups.",
                    "type": "boolean"
                },
                "retry_time": {
                    "description": "Sets timeout period in seconds after which a request will be retried.",
                    "type": "integer"
                },
                "servers": {
                    "description": "Adds a NIS server to be used by this provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "The status of the provider.",
                    "type": "string"
                },
                "system": {
                    "description": "If true, this provider instance was created by OneFS and cannot be removed.",
                    "type": "boolean"
                },
                "unfindable_groups": {
                    "description": "Specifies a group that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_users": {
                    "description": "Specifies a group that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_groups": {
                    "description": "Specifies a group that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_users": {
                    "description": "Specifies a user that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user_domain": {
                    "description": "Domain used to qualify users for this provider.",
                    "type": "string"
                },
                "ypmatch_using_tcp": {
                    "description": "Uses TCP for YP Match operations.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ProvidersSummary": {
            "properties": {
                "provider_instances": {
                    "items": {
                        "$ref": "#/definitions/ProvidersSummaryProviderInstance",
                        "description": "Summary information for an authentication provider."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersSummaryProviderInstance": {
            "properties": {
                "active_server": {
                    "description": "The server the provider is using to serve authentication requests. Null if no server is set or is not applicable for that provider.",
                    "type": "string"
                },
                "connections": {
                    "items": {
                        "$ref": "#/definitions/ProvidersSummaryProviderInstanceConnection",
                        "description": ""
                    },
                    "type": "array"
                },
                "forest": {
                    "description": "The active directory forest. Null if not applicable.",
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the provider.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the provider.",
                    "type": "string"
                },
                "site": {
                    "description": "The active directory forest. Null if not applicable.",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the provider.",
                    "enum": [
                        "offline",
                        "active",
                        "online",
                        "initializing",
                        "joining",
                        "disabled"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "The type of provider.",
                    "enum": [
                        "file",
                        "ldap",
                        "local",
                        "nis",
                        "ads",
                        "krb5",
                        "unknown"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersSummaryProviderInstanceConnection": {
            "properties": {
                "address": {
                    "description": "IP address of Provider",
                    "type": "string"
                },
                "last_used": {
                    "description": "Last time server was contacted",
                    "type": "string"
                },
                "server": {
                    "description": "FQDN of Server",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QuotaNotification": {
            "properties": {
                "action_alert": {
                    "description": "Send alert when rule matches.",
                    "type": "boolean"
                },
                "action_email_address": {
                    "description": "Email a specific email address when rule matches.",
                    "type": "string"
                },
                "action_email_owner": {
                    "description": "Email quota domain owner when rule matches.",
                    "type": "boolean"
                },
                "email_template": {
                    "description": "Path of optional /ifs template file used for email actions.",
                    "type": "string"
                },
                "holdoff": {
                    "description": "Time to wait between detections for rules triggered by user actions.",
                    "type": "integer"
                },
                "schedule": {
                    "description": "Schedule for rules that repeatedly notify.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QuotaNotificationCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/QuotaNotification"
                },
                {
                    "properties": {
                        "condition": {
                            "description": "The condition detected.",
                            "enum": [
                                "exceeded",
                                "denied",
                                "violated",
                                "expired"
                            ],
                            "type": "string"
                        },
                        "threshold": {
                            "description": "The quota threshold detected.",
                            "enum": [
                                "hard",
                                "soft",
                                "advisory"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "threshold",
                        "condition"
                    ],
                    "type": "object"
                }
            ]
        },
        "QuotaNotificationExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/QuotaNotification"
                },
                {
                    "properties": {
                        "condition": {
                            "description": "The condition detected.",
                            "enum": [
                                "exceeded",
                                "denied",
                                "violated",
                                "expired"
                            ],
                            "type": "string"
                        },
                        "id": {
                            "description": "The system ID given to the rule.",
                            "type": "string"
                        },
                        "threshold": {
                            "description": "The quota threshold detected.",
                            "enum": [
                                "hard",
                                "soft",
                                "advisory"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "action_email_owner",
                        "id",
                        "threshold",
                        "action_alert",
                        "condition"
                    ],
                    "type": "object"
                }
            ]
        },
        "QuotaNotifications": {
            "properties": {
                "notifications": {
                    "items": {
                        "$ref": "#/definitions/QuotaNotificationExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "QuotaNotificationsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/QuotaNotifications"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "QuotaQuota": {
            "properties": {
                "container": {
                    "description": "If true, SMB shares using the quota directory see the quota thresholds as share size.",
                    "type": "boolean"
                },
                "enforced": {
                    "description": "True if the quota provides enforcement, otherwise a accounting quota.",
                    "type": "boolean"
                },
                "linked": {
                    "description": "If false and the quota is linked, attempt to unlink.",
                    "type": "boolean"
                },
                "thresholds": {
                    "$ref": "#/definitions/QuotaQuotaThresholds",
                    "description": ""
                },
                "thresholds_include_overhead": {
                    "description": "If true, thresholds apply to data plus filesystem overhead required to store the data (i.e. 'physical' usage).",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "QuotaQuotaCreateParams": {
            "properties": {
                "container": {
                    "description": "If true, SMB shares using the quota directory see the quota thresholds as share size.",
                    "type": "boolean"
                },
                "enforced": {
                    "description": "True if the quota provides enforcement, otherwise a accounting quota.",
                    "type": "boolean"
                },
                "force": {
                    "description": "Force creation of quotas on the root of /ifs.",
                    "type": "boolean"
                },
                "include_snapshots": {
                    "description": "If true, quota governs snapshot data as well as head data.",
                    "type": "boolean"
                },
                "path": {
                    "description": "The /ifs path governed.",
                    "type": "string"
                },
                "persona": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "thresholds": {
                    "$ref": "#/definitions/QuotaQuotaThresholds",
                    "description": ""
                },
                "thresholds_include_overhead": {
                    "description": "If true, thresholds apply to data plus filesystem overhead required to store the data (i.e. 'physical' usage).",
                    "type": "boolean"
                },
                "type": {
                    "description": "The type of quota.",
                    "enum": [
                        "directory",
                        "user",
                        "group",
                        "default-user",
                        "default-group"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "enforced",
                "include_snapshots",
                "thresholds_include_overhead",
                "path",
                "type"
            ],
            "type": "object"
        },
        "QuotaQuotaExtended": {
            "properties": {
                "container": {
                    "description": "If true, SMB shares using the quota directory see the quota thresholds as share size.",
                    "type": "boolean"
                },
                "enforced": {
                    "description": "True if the quota provides enforcement, otherwise a accounting quota.",
                    "type": "boolean"
                },
                "id": {
                    "description": "The system ID given to the quota.",
                    "type": "string"
                },
                "include_snapshots": {
                    "description": "If true, quota governs snapshot data as well as head data.",
                    "type": "boolean"
                },
                "linked": {
                    "description": "For user and group quotas, true if the quota is linked and controlled by a parent default-* quota. Linked quotas cannot be modified until they are unlinked.",
                    "type": "boolean"
                },
                "notifications": {
                    "description": "Summary of notifications: 'custom' indicates one or more notification rules available from the notifications sub-resource; 'default' indicates system default rules are used; 'disabled' indicates that no notifications will be used for this quota.",
                    "enum": [
                        "custom",
                        "default",
                        "disabled"
                    ],
                    "type": "string"
                },
                "path": {
                    "description": "The /ifs path governed.",
                    "type": "string"
                },
                "persona": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "ready": {
                    "description": "True if the accounting is accurate on the quota.  If false, this quota is waiting on completion of a QuotaScan job.",
                    "type": "boolean"
                },
                "thresholds": {
                    "$ref": "#/definitions/QuotaQuotaThresholdsExtended",
                    "description": ""
                },
                "thresholds_include_overhead": {
                    "description": "If true, thresholds apply to data plus filesystem overhead required to store the data (i.e. 'physical' usage).",
                    "type": "boolean"
                },
                "type": {
                    "description": "The type of quota.",
                    "enum": [
                        "directory",
                        "user",
                        "group",
                        "default-user",
                        "default-group"
                    ],
                    "type": "string"
                },
                "usage": {
                    "$ref": "#/definitions/QuotaQuotaUsage",
                    "description": ""
                }
            },
            "required": [
                "enforced",
                "include_snapshots",
                "container",
                "usage",
                "thresholds",
                "notifications",
                "thresholds_include_overhead",
                "ready",
                "path",
                "type",
                "id"
            ],
            "type": "object"
        },
        "QuotaQuotaThresholds": {
            "properties": {
                "advisory": {
                    "description": "Usage bytes at which notifications will be sent but writes will not be denied.",
                    "minimum": 1,
                    "type": "integer"
                },
                "hard": {
                    "description": "Usage bytes at which further writes will be denied.",
                    "minimum": 1,
                    "type": "integer"
                },
                "soft": {
                    "description": "Usage bytes at which notifications will be sent and soft grace time will be started.",
                    "minimum": 1,
                    "type": "integer"
                },
                "soft_grace": {
                    "description": "Time in seconds after which the soft threshold has been hit before writes will be denied.",
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "QuotaQuotaThresholdsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/QuotaQuotaThresholds"
                },
                {
                    "properties": {
                        "advisory_exceeded": {
                            "description": "True if the advisory threshold has been hit.",
                            "type": "boolean"
                        },
                        "advisory_last_exceeded": {
                            "description": "Time at which advisory threshold was hit.",
                            "type": "integer"
                        },
                        "hard_exceeded": {
                            "description": "True if the hard threshold has been hit.",
                            "type": "boolean"
                        },
                        "hard_last_exceeded": {
                            "description": "Time at which hard threshold was hit.",
                            "type": "integer"
                        },
                        "soft_exceeded": {
                            "description": "True if the soft threshold has been hit.",
                            "type": "boolean"
                        },
                        "soft_last_exceeded": {
                            "description": "Time at which soft threshold was hit",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "QuotaQuotaUsage": {
            "properties": {
                "inodes": {
                    "description": "Number of inodes (filesystem entities) used by governed data.",
                    "type": "integer"
                },
                "logical": {
                    "description": "Apparent bytes used by governed data.",
                    "type": "integer"
                },
                "physical": {
                    "description": "Bytes used for governed data and filesystem overhead.",
                    "type": "integer"
                }
            },
            "required": [
                "logical",
                "inodes",
                "physical"
            ],
            "type": "object"
        },
        "QuotaQuotas": {
            "properties": {
                "quotas": {
                    "items": {
                        "$ref": "#/definitions/QuotaQuotaExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "QuotaQuotasExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/QuotaQuotas"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "QuotaQuotasSummary": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/QuotaQuotasSummarySummary",
                    "description": ""
                }
            },
            "type": "object"
        },
        "QuotaQuotasSummarySummary": {
            "properties": {
                "count": {
                    "description": "Total number of quotas.",
                    "type": "integer"
                },
                "default_group_quotas_count": {
                    "description": "Total number of default-group quotas.",
                    "type": "integer"
                },
                "default_user_quotas_count": {
                    "description": "Total number of default-user quotas.",
                    "type": "integer"
                },
                "directory_quotas_count": {
                    "description": "Total number of directory quotas.",
                    "type": "integer"
                },
                "group_quotas_count": {
                    "description": "Total number of -group quotas.",
                    "type": "integer"
                },
                "linked_quotas_count": {
                    "description": "Total number of user and group totals that are linked.",
                    "type": "integer"
                },
                "user_quotas_count": {
                    "description": "Total number of user quotas.",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "directory_quotas_count",
                "user_quotas_count",
                "default_group_quotas_count",
                "group_quotas_count",
                "default_user_quotas_count",
                "linked_quotas_count"
            ],
            "type": "object"
        },
        "QuotaReports": {
            "properties": {
                "reports": {
                    "items": {
                        "$ref": "#/definitions/ReportAboutReport",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "RemotesupportConnectemc": {
            "properties": {
                "connectemc": {
                    "$ref": "#/definitions/RemotesupportConnectemcConnectemc",
                    "description": ""
                }
            },
            "type": "object"
        },
        "RemotesupportConnectemcConnectemc": {
            "properties": {
                "email_customer_on_failure": {
                    "description": "Email the customer if all trasmission methods fail.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Enable ConnectEMC.",
                    "type": "boolean"
                },
                "primary_esrs_gateway": {
                    "description": "Primary ESRS Gateway. Necessary to enable ConnectEMC.",
                    "type": "string"
                },
                "remote_support_subnet": {
                    "description": "Network subnet to use for remote support.  Necessary to enable ConnectEMC.",
                    "type": "string"
                },
                "secondary_esrs_gateway": {
                    "description": "Secondary ESRS Gateway. Used if Primary is unavailable.",
                    "type": "string"
                },
                "use_smtp_failover": {
                    "description": "Use SMPT if primary and secondary gateways are unavailable.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ReportAbout": {
            "properties": {
                "reports": {
                    "items": {
                        "$ref": "#/definitions/ReportAboutReport",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ReportAboutReport": {
            "properties": {
                "generated": {
                    "description": "Whether report was manually requested (live) or scheduled.",
                    "enum": [
                        "manual",
                        "scheduled"
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "The system ID given to the report.",
                    "type": "string"
                },
                "time": {
                    "description": "Unix epoch time the report was taken.",
                    "type": "integer"
                },
                "type": {
                    "description": "Whether this is a summary or detail report.",
                    "enum": [
                        "summary",
                        "detail"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "generated",
                "type",
                "id",
                "time"
            ],
            "type": "object"
        },
        "ReportSubreport": {
            "properties": {
                "action": {
                    "description": "The action to be taken by this job.",
                    "enum": [
                        "resync_prep",
                        "allow_write",
                        "allow_write_revert",
                        "test",
                        "run"
                    ],
                    "type": "string"
                },
                "ads_streams_replicated": {
                    "description": "The number of ads streams replicated by this job.",
                    "type": "integer"
                },
                "block_specs_replicated": {
                    "description": "The number of block specs replicated by this job.",
                    "type": "integer"
                },
                "bytes_recoverable": {
                    "description": "The number of bytes recoverable by this job.",
                    "type": "integer"
                },
                "bytes_transferred": {
                    "description": "The number of bytes that have been transferred by this job.",
                    "type": "integer"
                },
                "char_specs_replicated": {
                    "description": "The number of char specs replicated by this job.",
                    "type": "integer"
                },
                "corrected_lins": {
                    "description": "The number of LINs corrected by this job.",
                    "type": "integer"
                },
                "dead_node": {
                    "description": "This field is true if the node running this job is dead.",
                    "type": "boolean"
                },
                "directories_replicated": {
                    "description": "The number of directories replicated.",
                    "type": "integer"
                },
                "dirs_changed": {
                    "description": "The number of directories changed by this job.",
                    "type": "integer"
                },
                "dirs_deleted": {
                    "description": "The number of directories deleted by this job.",
                    "type": "integer"
                },
                "dirs_moved": {
                    "description": "The number of directories moved by this job.",
                    "type": "integer"
                },
                "dirs_new": {
                    "description": "The number of directories created by this job.",
                    "type": "integer"
                },
                "duration": {
                    "description": "The amount of time in seconds between when the job was started and when it ended.  If the job has not yet ended, this is the amount of time since the job started.  This field is null if the job has not yet started.",
                    "type": "integer"
                },
                "end_time": {
                    "description": "The time the job ended in unix epoch seconds. The field is null if the job hasn't ended.",
                    "type": "integer"
                },
                "error": {
                    "description": "The primary error message for this job.",
                    "type": "string"
                },
                "error_checksum_files_skipped": {
                    "description": "The number of files with checksum errors skipped by this job.",
                    "type": "integer"
                },
                "error_io_files_skipped": {
                    "description": "The number of files with io errors skipped by this job.",
                    "type": "integer"
                },
                "error_net_files_skipped": {
                    "description": "The number of files with network errors skipped by this job.",
                    "type": "integer"
                },
                "errors": {
                    "description": "A list of error messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "failed_chunks": {
                    "description": "Tyhe number of data chunks that failed transmission.",
                    "type": "integer"
                },
                "fifos_replicated": {
                    "description": "The number of fifos replicated by this job.",
                    "type": "integer"
                },
                "file_data_bytes": {
                    "description": "The number of bytes tranferred that belong to files.",
                    "type": "integer"
                },
                "files_changed": {
                    "description": "The number of files changed by this job.",
                    "type": "integer"
                },
                "files_linked": {
                    "description": "The number of files linked by this job.",
                    "type": "integer"
                },
                "files_new": {
                    "description": "The number of files created by this job.",
                    "type": "integer"
                },
                "files_selected": {
                    "description": "The number of files selected by this job.",
                    "type": "integer"
                },
                "files_transferred": {
                    "description": "The number of files transfered by this job.",
                    "type": "integer"
                },
                "files_unlinked": {
                    "description": "The number of files unlinked by this job.",
                    "type": "integer"
                },
                "files_with_ads_replicated": {
                    "description": "The number of files with ads replicated by this job.",
                    "type": "integer"
                },
                "flipped_lins": {
                    "description": "The number of LINs flipped by this job.",
                    "type": "integer"
                },
                "hard_links_replicated": {
                    "description": "The number of hard links replicated by this job.",
                    "type": "integer"
                },
                "hash_exceptions_fixed": {
                    "description": "The number of hash exceptions fixed by this job.",
                    "type": "integer"
                },
                "hash_exceptions_found": {
                    "description": "The number of hash exceptions found by this job.",
                    "type": "integer"
                },
                "id": {
                    "description": "A unique identifier for this object.",
                    "type": "string"
                },
                "job_id": {
                    "description": "The ID of the job.",
                    "type": "integer"
                },
                "lins_total": {
                    "description": "The number of LINs tranferred by this job.",
                    "type": "integer"
                },
                "network_bytes_to_source": {
                    "description": "The total number of bytes sent to the source by this job.",
                    "type": "integer"
                },
                "network_bytes_to_target": {
                    "description": "The total number of bytes sent to the target by this job.",
                    "type": "integer"
                },
                "new_files_replicated": {
                    "description": "The number of new files replicated by this job.",
                    "type": "integer"
                },
                "num_retransmitted_files": {
                    "description": "The number of files that have been retransmitted by this job.",
                    "type": "integer"
                },
                "phases": {
                    "description": "Data for each phase of this job.",
                    "items": {
                        "$ref": "#/definitions/SyncJobPhase",
                        "description": ""
                    },
                    "type": "array"
                },
                "policy": {
                    "$ref": "#/definitions/SyncJobPolicy",
                    "description": ""
                },
                "policy_action": {
                    "description": "This is the action the policy is configured to perform.",
                    "enum": [
                        "copy",
                        "sync"
                    ],
                    "type": "string"
                },
                "policy_id": {
                    "description": "The ID of the policy.",
                    "type": "string"
                },
                "policy_name": {
                    "description": "The name of the policy.",
                    "type": "string"
                },
                "regular_files_replicated": {
                    "description": "The number of regular files replicated by this job.",
                    "type": "integer"
                },
                "resynced_lins": {
                    "description": "The number of LINs resynched by this job.",
                    "type": "integer"
                },
                "retransmitted_files": {
                    "description": "The files that have been retransmitted by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "retry": {
                    "description": "The number of times the job has been retried.",
                    "type": "integer"
                },
                "running_chunks": {
                    "description": "The number of data chunks currently being transmitted.",
                    "type": "integer"
                },
                "sockets_replicated": {
                    "description": "The number of sockets replicated by this job.",
                    "type": "integer"
                },
                "source_bytes_recovered": {
                    "description": "The number of bytes recovered on the source.",
                    "type": "integer"
                },
                "source_directories_created": {
                    "description": "The number of directories created on the source.",
                    "type": "integer"
                },
                "source_directories_deleted": {
                    "description": "The number of directories deleted on the source.",
                    "type": "integer"
                },
                "source_directories_linked": {
                    "description": "The number of directories linked on the source.",
                    "type": "integer"
                },
                "source_directories_unlinked": {
                    "description": "The number of directories unlinked on the source.",
                    "type": "integer"
                },
                "source_directories_visited": {
                    "description": "The number of directories visited on the source.",
                    "type": "integer"
                },
                "source_files_deleted": {
                    "description": "The number of files deleted on the source.",
                    "type": "integer"
                },
                "source_files_linked": {
                    "description": "The number of files linked on the source.",
                    "type": "integer"
                },
                "source_files_unlinked": {
                    "description": "The number of files unlinked on the source.",
                    "type": "integer"
                },
                "sparse_data_bytes": {
                    "description": "The number of sparse data bytes transferred by this job.",
                    "type": "integer"
                },
                "start_time": {
                    "description": "The time the job started in unix epoch seconds. The field is null if the job hasn't started.",
                    "type": "integer"
                },
                "state": {
                    "description": "The state of the job.",
                    "enum": [
                        "scheduled",
                        "running",
                        "paused",
                        "finished",
                        "failed",
                        "canceled",
                        "needs_attention",
                        "unknown"
                    ],
                    "type": "string"
                },
                "succeeded_chunks": {
                    "description": "The number of data chunks that have been transmitted successfully.",
                    "type": "integer"
                },
                "symlinks_replicated": {
                    "description": "The number of symlinks replicated by this job.",
                    "type": "integer"
                },
                "sync_type": {
                    "description": "The type of sync being performed by this job.",
                    "enum": [
                        "invalid",
                        "legacy",
                        "initial",
                        "incremental",
                        "upgrade",
                        "fofb",
                        "domainmark"
                    ],
                    "type": "string"
                },
                "target_bytes_recovered": {
                    "description": "The number of bytes recovered on the target.",
                    "type": "integer"
                },
                "target_directories_created": {
                    "description": "The number of directories created on the target.",
                    "type": "integer"
                },
                "target_directories_deleted": {
                    "description": "The number of directories deleted on the target.",
                    "type": "integer"
                },
                "target_directories_linked": {
                    "description": "The number of directories linked on the target.",
                    "type": "integer"
                },
                "target_directories_unlinked": {
                    "description": "The number of directories unlinked on the target.",
                    "type": "integer"
                },
                "target_files_deleted": {
                    "description": "The number of files deleted on the target.",
                    "type": "integer"
                },
                "target_files_linked": {
                    "description": "The number of files linked on the target.",
                    "type": "integer"
                },
                "target_files_unlinked": {
                    "description": "The number of files unlinked on the target.",
                    "type": "integer"
                },
                "target_snapshots": {
                    "description": "The target snapshots created by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "total_chunks": {
                    "description": "The total number of data chunks transmitted by this job.",
                    "type": "integer"
                },
                "total_data_bytes": {
                    "description": "The total number of bytes transferred by this job.",
                    "type": "integer"
                },
                "total_files": {
                    "description": "The number of files affected by this job.",
                    "type": "integer"
                },
                "total_network_bytes": {
                    "description": "The total number of bytes sent over the network by this job.",
                    "type": "integer"
                },
                "total_phases": {
                    "description": "The total number of phases for this job.",
                    "type": "integer"
                },
                "unchanged_data_bytes": {
                    "description": "The number of bytes unchanged by this job.",
                    "type": "integer"
                },
                "up_to_date_files_skipped": {
                    "description": "The number of up-to-date files skipped by this job.",
                    "type": "integer"
                },
                "updated_files_replicated": {
                    "description": "The number of updated files replicated by this job.",
                    "type": "integer"
                },
                "user_conflict_files_skipped": {
                    "description": "The number of files with user conflicts skipped by this job.",
                    "type": "integer"
                },
                "warnings": {
                    "description": "A list of warning messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "files_new",
                "error_io_files_skipped",
                "policy_name",
                "target_directories_unlinked",
                "network_bytes_to_source",
                "hash_exceptions_fixed",
                "failed_chunks",
                "dirs_moved",
                "policy",
                "fifos_replicated",
                "source_directories_linked",
                "target_directories_linked",
                "dead_node",
                "source_bytes_recovered",
                "retransmitted_files",
                "lins_total",
                "new_files_replicated",
                "dirs_changed",
                "total_phases",
                "files_unlinked",
                "sockets_replicated",
                "source_directories_visited",
                "bytes_transferred",
                "regular_files_replicated",
                "file_data_bytes",
                "target_directories_deleted",
                "hash_exceptions_found",
                "sparse_data_bytes",
                "phases",
                "errors",
                "resynced_lins",
                "bytes_recoverable",
                "state",
                "block_specs_replicated",
                "sync_type",
                "corrected_lins",
                "action",
                "target_files_unlinked",
                "total_data_bytes",
                "symlinks_replicated",
                "source_files_unlinked",
                "total_chunks",
                "files_with_ads_replicated",
                "target_files_deleted",
                "dirs_new",
                "files_selected",
                "num_retransmitted_files",
                "target_snapshots",
                "error_net_files_skipped",
                "unchanged_data_bytes",
                "target_bytes_recovered",
                "user_conflict_files_skipped",
                "target_files_linked",
                "files_transferred",
                "policy_action",
                "running_chunks",
                "network_bytes_to_target",
                "error",
                "directories_replicated",
                "total_network_bytes",
                "source_directories_deleted",
                "target_directories_created",
                "id",
                "flipped_lins",
                "char_specs_replicated",
                "updated_files_replicated",
                "source_directories_unlinked",
                "ads_streams_replicated",
                "total_files",
                "source_files_linked",
                "warnings",
                "source_directories_created",
                "hard_links_replicated",
                "succeeded_chunks",
                "files_changed",
                "retry",
                "error_checksum_files_skipped",
                "dirs_deleted",
                "files_linked",
                "up_to_date_files_skipped",
                "source_files_deleted",
                "policy_id"
            ],
            "type": "object"
        },
        "ReportSubreports": {
            "properties": {
                "subreports": {
                    "items": {
                        "$ref": "#/definitions/ReportSubreport",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ReportSubreportsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportSubreports"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ReportsReportSubreports": {
            "properties": {
                "subreports": {
                    "items": {
                        "$ref": "#/definitions/ReportsReportSubreportsSubreport",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ReportsReportSubreportsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportsReportSubreports"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ReportsReportSubreportsSubreport": {
            "properties": {
                "action": {
                    "description": "The action to be taken by this job.",
                    "enum": [
                        "resync_prep",
                        "allow_write",
                        "allow_write_revert",
                        "test",
                        "run"
                    ],
                    "type": "string"
                },
                "ads_streams_replicated": {
                    "description": "The number of ads streams replicated by this job.",
                    "type": "integer"
                },
                "block_specs_replicated": {
                    "description": "The number of block specs replicated by this job.",
                    "type": "integer"
                },
                "bytes_recoverable": {
                    "description": "The number of bytes recoverable by this job.",
                    "type": "integer"
                },
                "bytes_transferred": {
                    "description": "The number of bytes that have been transferred by this job.",
                    "type": "integer"
                },
                "char_specs_replicated": {
                    "description": "The number of char specs replicated by this job.",
                    "type": "integer"
                },
                "corrected_lins": {
                    "description": "The number of LINs corrected by this job.",
                    "type": "integer"
                },
                "dead_node": {
                    "description": "This field is true if the node running this job is dead.",
                    "type": "boolean"
                },
                "directories_replicated": {
                    "description": "The number of directories replicated.",
                    "type": "integer"
                },
                "dirs_changed": {
                    "description": "The number of directories changed by this job.",
                    "type": "integer"
                },
                "dirs_deleted": {
                    "description": "The number of directories deleted by this job.",
                    "type": "integer"
                },
                "dirs_moved": {
                    "description": "The number of directories moved by this job.",
                    "type": "integer"
                },
                "dirs_new": {
                    "description": "The number of directories created by this job.",
                    "type": "integer"
                },
                "duration": {
                    "description": "The amount of time in seconds between when the job was started and when it ended.  If the job has not yet ended, this is the amount of time since the job started.  This field is null if the job has not yet started.",
                    "type": "integer"
                },
                "end_time": {
                    "description": "The time the job ended in unix epoch seconds. The field is null if the job hasn't ended.",
                    "type": "integer"
                },
                "error": {
                    "description": "The primary error message for this job.",
                    "type": "string"
                },
                "error_checksum_files_skipped": {
                    "description": "The number of files with checksum errors skipped by this job.",
                    "type": "integer"
                },
                "error_io_files_skipped": {
                    "description": "The number of files with io errors skipped by this job.",
                    "type": "integer"
                },
                "error_net_files_skipped": {
                    "description": "The number of files with network errors skipped by this job.",
                    "type": "integer"
                },
                "errors": {
                    "description": "A list of error messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "failed_chunks": {
                    "description": "Tyhe number of data chunks that failed transmission.",
                    "type": "integer"
                },
                "fifos_replicated": {
                    "description": "The number of fifos replicated by this job.",
                    "type": "integer"
                },
                "file_data_bytes": {
                    "description": "The number of bytes tranferred that belong to files.",
                    "type": "integer"
                },
                "files_changed": {
                    "description": "The number of files changed by this job.",
                    "type": "integer"
                },
                "files_linked": {
                    "description": "The number of files linked by this job.",
                    "type": "integer"
                },
                "files_new": {
                    "description": "The number of files created by this job.",
                    "type": "integer"
                },
                "files_selected": {
                    "description": "The number of files selected by this job.",
                    "type": "integer"
                },
                "files_transferred": {
                    "description": "The number of files transfered by this job.",
                    "type": "integer"
                },
                "files_unlinked": {
                    "description": "The number of files unlinked by this job.",
                    "type": "integer"
                },
                "files_with_ads_replicated": {
                    "description": "The number of files with ads replicated by this job.",
                    "type": "integer"
                },
                "flipped_lins": {
                    "description": "The number of LINs flipped by this job.",
                    "type": "integer"
                },
                "hard_links_replicated": {
                    "description": "The number of hard links replicated by this job.",
                    "type": "integer"
                },
                "hash_exceptions_fixed": {
                    "description": "The number of hash exceptions fixed by this job.",
                    "type": "integer"
                },
                "hash_exceptions_found": {
                    "description": "The number of hash exceptions found by this job.",
                    "type": "integer"
                },
                "id": {
                    "description": "A unique identifier for this object.",
                    "type": "string"
                },
                "job_id": {
                    "description": "The ID of the job.",
                    "type": "integer"
                },
                "lins_total": {
                    "description": "The number of LINs tranferred by this job.",
                    "type": "integer"
                },
                "network_bytes_to_source": {
                    "description": "The total number of bytes sent to the source by this job.",
                    "type": "integer"
                },
                "network_bytes_to_target": {
                    "description": "The total number of bytes sent to the target by this job.",
                    "type": "integer"
                },
                "new_files_replicated": {
                    "description": "The number of new files replicated by this job.",
                    "type": "integer"
                },
                "num_retransmitted_files": {
                    "description": "The number of files that have been retransmitted by this job.",
                    "type": "integer"
                },
                "phases": {
                    "description": "Data for each phase of this job.",
                    "items": {
                        "$ref": "#/definitions/SyncJobPhase",
                        "description": ""
                    },
                    "type": "array"
                },
                "policy_id": {
                    "description": "The ID of the policy.",
                    "type": "string"
                },
                "policy_name": {
                    "description": "The name of the policy.",
                    "type": "string"
                },
                "regular_files_replicated": {
                    "description": "The number of regular files replicated by this job.",
                    "type": "integer"
                },
                "resynced_lins": {
                    "description": "The number of LINs resynched by this job.",
                    "type": "integer"
                },
                "retransmitted_files": {
                    "description": "The files that have been retransmitted by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "retry": {
                    "description": "The number of times the job has been retried.",
                    "type": "integer"
                },
                "running_chunks": {
                    "description": "The number of data chunks currently being transmitted.",
                    "type": "integer"
                },
                "sockets_replicated": {
                    "description": "The number of sockets replicated by this job.",
                    "type": "integer"
                },
                "source_bytes_recovered": {
                    "description": "The number of bytes recovered on the source.",
                    "type": "integer"
                },
                "source_directories_created": {
                    "description": "The number of directories created on the source.",
                    "type": "integer"
                },
                "source_directories_deleted": {
                    "description": "The number of directories deleted on the source.",
                    "type": "integer"
                },
                "source_directories_linked": {
                    "description": "The number of directories linked on the source.",
                    "type": "integer"
                },
                "source_directories_unlinked": {
                    "description": "The number of directories unlinked on the source.",
                    "type": "integer"
                },
                "source_directories_visited": {
                    "description": "The number of directories visited on the source.",
                    "type": "integer"
                },
                "source_files_deleted": {
                    "description": "The number of files deleted on the source.",
                    "type": "integer"
                },
                "source_files_linked": {
                    "description": "The number of files linked on the source.",
                    "type": "integer"
                },
                "source_files_unlinked": {
                    "description": "The number of files unlinked on the source.",
                    "type": "integer"
                },
                "source_host": {
                    "description": "Hostname or IP address of sync source cluster.",
                    "type": "string"
                },
                "sparse_data_bytes": {
                    "description": "The number of sparse data bytes transferred by this job.",
                    "type": "integer"
                },
                "start_time": {
                    "description": "The time the job started in unix epoch seconds. The field is null if the job hasn't started.",
                    "type": "integer"
                },
                "state": {
                    "description": "The state of the job.",
                    "enum": [
                        "scheduled",
                        "running",
                        "paused",
                        "finished",
                        "failed",
                        "canceled",
                        "needs_attention",
                        "unknown"
                    ],
                    "type": "string"
                },
                "succeeded_chunks": {
                    "description": "The number of data chunks that have been transmitted successfully.",
                    "type": "integer"
                },
                "symlinks_replicated": {
                    "description": "The number of symlinks replicated by this job.",
                    "type": "integer"
                },
                "sync_type": {
                    "description": "The type of sync being performed by this job.",
                    "enum": [
                        "invalid",
                        "legacy",
                        "initial",
                        "incremental",
                        "upgrade",
                        "fofb",
                        "domainmark"
                    ],
                    "type": "string"
                },
                "target_bytes_recovered": {
                    "description": "The number of bytes recovered on the target.",
                    "type": "integer"
                },
                "target_directories_created": {
                    "description": "The number of directories created on the target.",
                    "type": "integer"
                },
                "target_directories_deleted": {
                    "description": "The number of directories deleted on the target.",
                    "type": "integer"
                },
                "target_directories_linked": {
                    "description": "The number of directories linked on the target.",
                    "type": "integer"
                },
                "target_directories_unlinked": {
                    "description": "The number of directories unlinked on the target.",
                    "type": "integer"
                },
                "target_files_deleted": {
                    "description": "The number of files deleted on the target.",
                    "type": "integer"
                },
                "target_files_linked": {
                    "description": "The number of files linked on the target.",
                    "type": "integer"
                },
                "target_files_unlinked": {
                    "description": "The number of files unlinked on the target.",
                    "type": "integer"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                },
                "target_snapshots": {
                    "description": "The target snapshots created by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "total_chunks": {
                    "description": "The total number of data chunks transmitted by this job.",
                    "type": "integer"
                },
                "total_data_bytes": {
                    "description": "The total number of bytes transferred by this job.",
                    "type": "integer"
                },
                "total_files": {
                    "description": "The number of files affected by this job.",
                    "type": "integer"
                },
                "total_network_bytes": {
                    "description": "The total number of bytes sent over the network by this job.",
                    "type": "integer"
                },
                "total_phases": {
                    "description": "The total number of phases for this job.",
                    "type": "integer"
                },
                "unchanged_data_bytes": {
                    "description": "The number of bytes unchanged by this job.",
                    "type": "integer"
                },
                "up_to_date_files_skipped": {
                    "description": "The number of up-to-date files skipped by this job.",
                    "type": "integer"
                },
                "updated_files_replicated": {
                    "description": "The number of updated files replicated by this job.",
                    "type": "integer"
                },
                "user_conflict_files_skipped": {
                    "description": "The number of files with user conflicts skipped by this job.",
                    "type": "integer"
                },
                "warnings": {
                    "description": "A list of warning messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "files_new",
                "error_io_files_skipped",
                "policy_name",
                "target_directories_unlinked",
                "network_bytes_to_source",
                "hash_exceptions_fixed",
                "failed_chunks",
                "dirs_moved",
                "error_net_files_skipped",
                "fifos_replicated",
                "source_directories_linked",
                "target_directories_linked",
                "dead_node",
                "source_bytes_recovered",
                "retransmitted_files",
                "lins_total",
                "new_files_replicated",
                "dirs_changed",
                "total_phases",
                "files_unlinked",
                "sockets_replicated",
                "bytes_transferred",
                "regular_files_replicated",
                "file_data_bytes",
                "target_directories_deleted",
                "hash_exceptions_found",
                "sparse_data_bytes",
                "running_chunks",
                "phases",
                "errors",
                "resynced_lins",
                "bytes_recoverable",
                "state",
                "block_specs_replicated",
                "sync_type",
                "source_host",
                "corrected_lins",
                "action",
                "target_files_unlinked",
                "total_data_bytes",
                "symlinks_replicated",
                "source_files_unlinked",
                "total_chunks",
                "files_with_ads_replicated",
                "target_files_deleted",
                "dirs_new",
                "files_selected",
                "num_retransmitted_files",
                "target_snapshots",
                "unchanged_data_bytes",
                "target_bytes_recovered",
                "user_conflict_files_skipped",
                "target_files_linked",
                "files_transferred",
                "source_directories_visited",
                "target_path",
                "network_bytes_to_target",
                "error",
                "directories_replicated",
                "total_network_bytes",
                "source_directories_deleted",
                "target_directories_created",
                "id",
                "flipped_lins",
                "char_specs_replicated",
                "updated_files_replicated",
                "source_directories_unlinked",
                "ads_streams_replicated",
                "total_files",
                "source_files_linked",
                "warnings",
                "source_directories_created",
                "hard_links_replicated",
                "succeeded_chunks",
                "files_changed",
                "retry",
                "error_checksum_files_skipped",
                "dirs_deleted",
                "files_linked",
                "up_to_date_files_skipped",
                "source_files_deleted",
                "policy_id"
            ],
            "type": "object"
        },
        "RolePrivileges": {
            "properties": {
                "privileges": {
                    "items": {
                        "$ref": "#/definitions/AuthIdNtokenPrivilegeItem",
                        "description": "A system defined privilege that may be granted to users."
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SettingsAccessTime": {
            "properties": {
                "access-time": {
                    "items": {
                        "$ref": "#/definitions/SettingsAccessTimeAccess-TimeItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SettingsAccessTimeAccess-TimeItem": {
            "properties": {
                "enabled": {
                    "description": "Enable access time tracking.",
                    "type": "boolean"
                },
                "precision": {
                    "description": "Access time tracked in seconds for each cluster file if enabled.",
                    "type": "integer"
                }
            },
            "required": [
                "enabled",
                "precision"
            ],
            "type": "object"
        },
        "SettingsAccessTimeExtended": {
            "properties": {
                "enabled": {
                    "description": "Enable access time tracking.",
                    "type": "boolean"
                },
                "precision": {
                    "description": "Access time tracked on each cluster file accurate to this number of seconds.",
                    "maximum": 1576800000,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SettingsGlobal": {
            "properties": {
                "global_settings": {
                    "$ref": "#/definitions/SettingsGlobalGlobalSettings",
                    "description": "Global settings for authentication."
                }
            },
            "type": "object"
        },
        "SettingsGlobalGlobalSettings": {
            "properties": {
                "alloc_retries": {
                    "description": "Sets number of times to retry an ID allocation before failing.",
                    "type": "integer"
                },
                "cache_cred_lifetime": {
                    "description": "Sets length of time in seconds to cache credential responses from the ID mapper.",
                    "type": "integer"
                },
                "cache_id_lifetime": {
                    "description": "Sets length of time in seconds to cache ID responses from the ID mapper.",
                    "type": "integer"
                },
                "gid_range_enabled": {
                    "description": "Enables use of a fixed range for allocating GIDs.",
                    "type": "boolean"
                },
                "gid_range_max": {
                    "description": "Specifies ending number for allocating GIDs.",
                    "type": "integer"
                },
                "gid_range_min": {
                    "description": "Specifies starting number for allocating GIDs.",
                    "type": "integer"
                },
                "gid_range_next": {
                    "description": "Specifies the next GID to be allocated.",
                    "type": "integer"
                },
                "group_uid": {
                    "type": "integer"
                },
                "load_providers": {
                    "items": {
                        "enum": [
                            "ActiveDirectory",
                            "Local",
                            "Nss",
                            "File",
                            "Nis",
                            "Ldap",
                            "Krb5"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "min_mapped_rid": {
                    "type": "integer"
                },
                "null_gid": {
                    "type": "integer"
                },
                "null_uid": {
                    "type": "integer"
                },
                "on_disk_identity": {
                    "description": "Specifies type of identity stored on disk.",
                    "enum": [
                        "native",
                        "unix",
                        "sid"
                    ],
                    "type": "string"
                },
                "rpc_block_time": {
                    "type": "integer"
                },
                "rpc_max_requests": {
                    "type": "integer"
                },
                "rpc_timeout": {
                    "type": "integer"
                },
                "send_ntlmv2": {
                    "description": "Specifies whether to send NTLMv2 responses.",
                    "type": "boolean"
                },
                "space_replacement": {
                    "description": "Sets space replacement.",
                    "type": "string"
                },
                "system_gid_threshold": {
                    "type": "integer"
                },
                "system_uid_threshold": {
                    "type": "integer"
                },
                "uid_range_enabled": {
                    "description": "Uses a fixed range for allocating UIDs.",
                    "type": "boolean"
                },
                "uid_range_max": {
                    "description": "Specifies ending number for allocating UIDs.",
                    "type": "integer"
                },
                "uid_range_min": {
                    "description": "Specifies starting number for allocating UIDs.",
                    "type": "integer"
                },
                "uid_range_next": {
                    "description": "Specifies the next UID to be allocated.",
                    "type": "integer"
                },
                "unknown_gid": {
                    "description": "Specifies GID to use for the unknown (anonymous) group.",
                    "type": "integer"
                },
                "unknown_uid": {
                    "description": "Specifies UID to use for the unknown (anonymous) user.",
                    "type": "integer"
                },
                "workgroup": {
                    "description": "Sets NetBIOS workgroup/domain.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SettingsKrb5Defaults": {
            "properties": {
                "krb5_settings": {
                    "$ref": "#/definitions/SettingsKrb5DefaultsKrb5Settings",
                    "description": "Krb5 global settings for authentication."
                }
            },
            "type": "object"
        },
        "SettingsKrb5DefaultsKrb5Settings": {
            "properties": {
                "always_send_preauth": {
                    "description": "Always attempt to preauth to controller",
                    "type": "boolean"
                },
                "default_realm": {
                    "description": "Realm to use for unqualified names",
                    "type": "string"
                },
                "dns_lookup_kdc": {
                    "description": "Use DNS to find KDCs",
                    "type": "boolean"
                },
                "dns_lookup_realm": {
                    "description": "Use DNS to find realm names",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SettingsKrb5Domain": {
            "description": "Krb5 settings for domain-realm mappings",
            "properties": {
                "domain": {
                    "description": "Name of the domain",
                    "type": "string"
                },
                "realm": {
                    "description": "Name of the realm",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SettingsKrb5DomainCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SettingsKrb5Domain"
                },
                {
                    "description": "Krb5 settings for domain-realm mappings",
                    "properties": {},
                    "required": [
                        "domain",
                        "realm"
                    ],
                    "type": "object"
                }
            ]
        },
        "SettingsKrb5Domains": {
            "properties": {
                "domain": {
                    "$ref": "#/definitions/SettingsKrb5Domain",
                    "description": "Krb5 settings for domain-realm mappings"
                }
            },
            "type": "object"
        },
        "SettingsKrb5DomainsDomain": {
            "properties": {
                "domain": {
                    "description": "Name of the domain",
                    "type": "string"
                },
                "realm": {
                    "description": "Name of the realm",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SettingsKrb5DomainsExtended": {
            "properties": {
                "domains": {
                    "items": {
                        "$ref": "#/definitions/SettingsKrb5DomainsDomain",
                        "description": "Krb5 settings for domain-realm mappings"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SettingsKrb5Realm": {
            "description": "Krb5 settings for realm access",
            "properties": {
                "admin_server": {
                    "description": "administrative server hostname",
                    "type": "string"
                },
                "default_domain": {
                    "description": "Default domain mapped to this realm",
                    "type": "string"
                },
                "is_default_realm": {
                    "description": "Specify whether this realm is default",
                    "type": "boolean"
                },
                "kdc": {
                    "description": "List of KDC hostnames",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "realm": {
                    "description": "Name of realm",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SettingsKrb5RealmCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SettingsKrb5Realm"
                },
                {
                    "description": "Krb5 settings for realm access",
                    "properties": {},
                    "required": [
                        "realm"
                    ],
                    "type": "object"
                }
            ]
        },
        "SettingsMapping": {
            "properties": {
                "mapping_settings": {
                    "$ref": "#/definitions/SettingsMappingMappingSettings",
                    "description": "Global settings for authentication."
                }
            },
            "type": "object"
        },
        "SettingsMappingExtended": {
            "properties": {
                "mapping": {
                    "description": "The FQDN of destination domain to map to.",
                    "type": "string"
                }
            },
            "required": [
                "mapping"
            ],
            "type": "object"
        },
        "SettingsMappingExtendedExtended": {
            "properties": {
                "domain": {
                    "description": "The FQDN of the source domain to map.",
                    "type": "string"
                },
                "mapping": {
                    "description": "The FQDN of destination domain to map to.",
                    "type": "string"
                },
                "type": {
                    "description": "The authentication provider type.",
                    "enum": [
                        "ad",
                        "local",
                        "nis",
                        "ldap"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "domain",
                "type",
                "mapping"
            ],
            "type": "object"
        },
        "SettingsMappingMappingSettings": {
            "properties": {
                "gid_range_enabled": {
                    "description": "Enables use of a fixed range for allocating GIDs.",
                    "type": "boolean"
                },
                "gid_range_max": {
                    "description": "Specifies ending number for allocating GIDs.",
                    "type": "integer"
                },
                "gid_range_min": {
                    "description": "Specifies starting number for allocating GIDs.",
                    "type": "integer"
                },
                "gid_range_next": {
                    "description": "Specifies the next GID to be allocated.",
                    "type": "integer"
                },
                "uid_range_enabled": {
                    "description": "Uses a fixed range for allocating UIDs.",
                    "type": "boolean"
                },
                "uid_range_max": {
                    "description": "Specifies ending number for allocating UIDs.",
                    "type": "integer"
                },
                "uid_range_min": {
                    "description": "Specifies starting number for allocating UIDs.",
                    "type": "integer"
                },
                "uid_range_next": {
                    "description": "Specifies the next UID to be allocated.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SettingsMappings": {
            "properties": {
                "mappings": {
                    "items": {
                        "$ref": "#/definitions/SettingsMappingExtendedExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SettingsReports": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/SettingsReportsSettings",
                    "description": ""
                }
            },
            "type": "object"
        },
        "SettingsReportsExtended": {
            "properties": {
                "live_dir": {
                    "description": "The directory on /ifs where manual or live reports will be placed.",
                    "type": "string"
                },
                "live_retain": {
                    "description": "The number of manual reports to keep.",
                    "minimum": 1,
                    "type": "integer"
                },
                "schedule": {
                    "description": "The isidate schedule used to generate reports.",
                    "type": "string"
                },
                "scheduled_dir": {
                    "description": "The directory on /ifs where schedule reports will be placed.",
                    "type": "string"
                },
                "scheduled_retain": {
                    "description": "The number of scheduled reports to keep.",
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SettingsReportsSettings": {
            "properties": {
                "live_dir": {
                    "description": "The directory on /ifs where manual or live reports will be placed.",
                    "type": "string"
                },
                "live_retain": {
                    "description": "The number of manual reports to keep.",
                    "minimum": 1,
                    "type": "integer"
                },
                "schedule": {
                    "description": "The isidate schedule used to generate reports.",
                    "type": "string"
                },
                "scheduled_dir": {
                    "description": "The directory on /ifs where schedule reports will be placed.",
                    "type": "string"
                },
                "scheduled_retain": {
                    "description": "The number of scheduled reports to keep.",
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "required": [
                "live_retain",
                "live_dir",
                "scheduled_retain",
                "scheduled_dir",
                "schedule"
            ],
            "type": "object"
        },
        "SmbOpenfile": {
            "properties": {
                "file": {
                    "description": "Path of file within /ifs.",
                    "type": "string"
                },
                "id": {
                    "description": "The file ID.",
                    "type": "integer"
                },
                "locks": {
                    "description": "Number of locks user holds on file.",
                    "type": "integer"
                },
                "permissions": {
                    "description": "The user's permissions on file.",
                    "items": {
                        "enum": [
                            "read",
                            "write",
                            "create"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "user": {
                    "description": "User holding file open.",
                    "type": "string"
                }
            },
            "required": [
                "locks",
                "user",
                "id",
                "file",
                "permissions"
            ],
            "type": "object"
        },
        "SmbOpenfiles": {
            "properties": {
                "openfiles": {
                    "items": {
                        "$ref": "#/definitions/SmbOpenfile",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SmbSession": {
            "properties": {
                "active_time": {
                    "description": "Number of seconds since session start.",
                    "type": "integer"
                },
                "client_type": {
                    "description": "Client type.",
                    "type": "string"
                },
                "computer": {
                    "description": "Client internet address.",
                    "type": "string"
                },
                "encryption": {
                    "description": "True if session is encrypted.",
                    "type": "boolean"
                },
                "guest_login": {
                    "description": "True for guest logins.",
                    "type": "boolean"
                },
                "id": {
                    "description": "The session ID.",
                    "type": "integer"
                },
                "idle_time": {
                    "description": "Number of seconds since last client operation.",
                    "type": "integer"
                },
                "openfiles": {
                    "description": "Number of files open by client.",
                    "type": "integer"
                },
                "user": {
                    "description": "Local user name.",
                    "type": "string"
                }
            },
            "required": [
                "active_time",
                "computer",
                "encryption",
                "idle_time",
                "client_type",
                "guest_login",
                "openfiles",
                "id",
                "user"
            ],
            "type": "object"
        },
        "SmbSessions": {
            "properties": {
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "sessions": {
                    "items": {
                        "$ref": "#/definitions/SmbSession",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SmbSettingsGlobal": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/SmbSettingsGlobalSettings",
                    "description": ""
                }
            },
            "required": [
                "settings"
            ],
            "type": "object"
        },
        "SmbSettingsGlobalSettings": {
            "properties": {
                "access_based_share_enum": {
                    "description": "Only enumerate files and folders the requesting user has access to.",
                    "type": "boolean"
                },
                "audit_fileshare": {
                    "description": "Specify level of file share audit events to log.",
                    "enum": [
                        "all",
                        "success",
                        "failure",
                        "none"
                    ],
                    "type": "string"
                },
                "audit_global_sacl": {
                    "description": "List of permissions to audit.",
                    "items": {
                        "$ref": "#/definitions/SmbSettingsGlobalSettingsAuditGlobalSaclItem",
                        "description": "SACL Access Control Entry."
                    },
                    "type": "array"
                },
                "audit_logon": {
                    "description": "Specify the level of logon audit events to log.",
                    "enum": [
                        "all",
                        "success",
                        "failure",
                        "none"
                    ],
                    "type": "string"
                },
                "dot_snap_accessible_child": {
                    "description": "Allow access to .snapshot directories in share subdirectories.",
                    "type": "boolean"
                },
                "dot_snap_accessible_root": {
                    "description": "Allow access to the .snapshot directory in the root of the share.",
                    "type": "boolean"
                },
                "dot_snap_visible_child": {
                    "description": "Show .snapshot directories in share subdirectories.",
                    "type": "boolean"
                },
                "dot_snap_visible_root": {
                    "description": "Show the .snapshot directory in the root of a share.",
                    "type": "boolean"
                },
                "enable_security_signatures": {
                    "description": "Indicates whether the server supports signed SMB packets.",
                    "type": "boolean"
                },
                "guest_user": {
                    "description": "Specifies the fully-qualified user to use for guest access.",
                    "type": "string"
                },
                "ignore_eas": {
                    "description": "Specify whether to ignore EAs on files.",
                    "type": "boolean"
                },
                "onefs_cpu_multiplier": {
                    "description": "Specify the number of OneFS driver worker threads per CPU.",
                    "maximum": 4,
                    "minimum": 1,
                    "type": "integer"
                },
                "onefs_num_workers": {
                    "description": "Set the maximum number of OneFS driver worker threads.",
                    "maximum": 1024,
                    "minimum": 0,
                    "type": "integer"
                },
                "require_security_signatures": {
                    "description": "Indicates whether the server requires signed SMB packets.",
                    "type": "boolean"
                },
                "server_string": {
                    "description": "Provides a description of the server.",
                    "type": "string"
                },
                "service": {
                    "description": "Specify whether service is enabled.",
                    "type": "boolean"
                },
                "srv_cpu_multiplier": {
                    "description": "Specify the number of SRV service worker threads per CPU.",
                    "maximum": 8,
                    "minimum": 1,
                    "type": "integer"
                },
                "srv_num_workers": {
                    "description": "Set the maximum number of SRV service worker threads.",
                    "maximum": 1024,
                    "minimum": 0,
                    "type": "integer"
                },
                "support_multichannel": {
                    "description": "Support multichannel.",
                    "type": "boolean"
                },
                "support_netbios": {
                    "description": "Support NetBIOS.",
                    "type": "boolean"
                },
                "support_smb2": {
                    "description": "Support the SMB2 protocol on the server.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SmbSettingsGlobalSettingsAuditGlobalSaclItem": {
            "properties": {
                "flags": {
                    "description": "Audit on success or failure.",
                    "enum": [
                        "successful",
                        "failed"
                    ],
                    "type": "string"
                },
                "permission": {
                    "description": "Array of filesystem rights governed.",
                    "items": {
                        "description": "Filesystem access permission.",
                        "enum": [
                            "generic_all",
                            "generic_read",
                            "generic_write",
                            "generic_exec",
                            "std_delete",
                            "std_read_dac",
                            "std_write_dac",
                            "std_write_owner",
                            "std_synchronize",
                            "std_required",
                            "list",
                            "add_file",
                            "add_subdir",
                            "delete_child",
                            "traverse",
                            "dir_read_attr",
                            "dir_write_attr",
                            "dir_read_ext_attr",
                            "dir_write_ext_attr",
                            "dir_gen_read",
                            "dir_gen_write",
                            "dir_gen_execute",
                            "dir_gen_all",
                            "file_read",
                            "file_write",
                            "append",
                            "execute",
                            "delete_child",
                            "file_read_attr",
                            "file_write_attr",
                            "file_read_ext_attr",
                            "file_write_ext_attr",
                            "file_gen_read",
                            "file_gen_write",
                            "file_gen_execute",
                            "file_gen_all",
                            "modify",
                            "object_inherit",
                            "container_inherit",
                            "no_prop_inherit",
                            "inherit_only",
                            "inherited_ace"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "flags",
                "permission"
            ],
            "type": "object"
        },
        "SmbSettingsShare": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/SmbSettingsShareSettings",
                    "description": ""
                }
            },
            "required": [
                "settings"
            ],
            "type": "object"
        },
        "SmbSettingsShareSettings": {
            "properties": {
                "access_based_enumeration": {
                    "description": "Only enumerate files and folders the requesting user has access to.",
                    "type": "boolean"
                },
                "access_based_enumeration_root_only": {
                    "description": "Access-based enumeration on only the root directory of the share.",
                    "type": "boolean"
                },
                "allow_delete_readonly": {
                    "description": "Allow deletion of read-only files in the share.",
                    "type": "boolean"
                },
                "allow_execute_always": {
                    "description": "Allows users to execute files they have read rights for.",
                    "type": "boolean"
                },
                "change_notify": {
                    "description": "Specify level of change notification alerts on the share.",
                    "enum": [
                        "all",
                        "norecurse",
                        "none"
                    ],
                    "type": "string"
                },
                "create_permissions": {
                    "description": "Set the create permissions for new files and directories in share.",
                    "enum": [
                        "default acl",
                        "inherit mode bits",
                        "use create mask and mode"
                    ],
                    "type": "string"
                },
                "csc_policy": {
                    "description": "Client-side caching policy for the shares.",
                    "enum": [
                        "manual",
                        "documents",
                        "programs",
                        "none"
                    ],
                    "type": "string"
                },
                "directory_create_mask": {
                    "description": "Unix umask or mode bits.",
                    "maximum": 511,
                    "minimum": 0,
                    "type": "integer"
                },
                "directory_create_mode": {
                    "description": "Unix umask or mode bits.",
                    "maximum": 511,
                    "minimum": 0,
                    "type": "integer"
                },
                "file_create_mask": {
                    "description": "Unix umask or mode bits.",
                    "maximum": 511,
                    "minimum": 0,
                    "type": "integer"
                },
                "file_create_mode": {
                    "description": "Unix umask or mode bits.",
                    "maximum": 511,
                    "minimum": 0,
                    "type": "integer"
                },
                "hide_dot_files": {
                    "description": "Hide files and directories that begin with a period '.'.",
                    "type": "boolean"
                },
                "host_acl": {
                    "description": "An ACL expressing which hosts are allowed access. A deny clause must be the final entry.",
                    "items": {
                        "description": "<'allow:'|'deny:'><'ALL'|IP-range|subnet|fqdn>[' EXCEPT '<IP-range|subnet|fqdn>].",
                        "type": "string"
                    },
                    "type": "array"
                },
                "impersonate_guest": {
                    "description": "Specify the condition in which user access is done as the guest account.",
                    "enum": [
                        "always",
                        "bad user",
                        "never"
                    ],
                    "type": "string"
                },
                "impersonate_user": {
                    "description": "User account to be used as guest account.",
                    "type": "string"
                },
                "mangle_byte_start": {
                    "description": "Specifies the wchar_t starting point for automatic byte mangling.",
                    "maximum": 65535,
                    "minimum": 256,
                    "type": "integer"
                },
                "mangle_map": {
                    "description": "Character mangle map.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ntfs_acl_support": {
                    "description": "Support NTFS ACLs on files and directories.",
                    "type": "boolean"
                },
                "oplocks": {
                    "description": "Allow oplock requests.",
                    "type": "boolean"
                },
                "strict_flush": {
                    "description": "Handle SMB flush operations.",
                    "type": "boolean"
                },
                "strict_locking": {
                    "description": "Specifies whether byte range locks contend against SMB I/O.",
                    "type": "boolean"
                },
                "zone": {
                    "description": "Name of the access zone in which to update settings",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmbShare": {
            "properties": {
                "access_based_enumeration": {
                    "description": "Only enumerate files and folders the requesting user has access to.",
                    "type": "boolean"
                },
                "access_based_enumeration_root_only": {
                    "description": "Access-based enumeration on only the root directory of the share.",
                    "type": "boolean"
                },
                "allow_delete_readonly": {
                    "description": "Allow deletion of read-only files in the share.",
                    "type": "boolean"
                },
                "allow_execute_always": {
                    "description": "Allows users to execute files they have read rights for.",
                    "type": "boolean"
                },
                "allow_variable_expansion": {
                    "description": "Allow automatic expansion of variables for home directories.",
                    "type": "boolean"
                },
                "auto_create_directory": {
                    "description": "Automatically create home directories.",
                    "type": "boolean"
                },
                "browsable": {
                    "description": "Share is visible in net view and the browse list.",
                    "type": "boolean"
                },
                "change_notify": {
                    "description": "Level of change notification alerts on the share.",
                    "enum": [
                        "all",
                        "norecurse",
                        "none"
                    ],
                    "type": "string"
                },
                "create_permissions": {
                    "description": "Create permissions for new files and directories in share.",
                    "enum": [
                        "default acl",
                        "inherit mode bits",
                        "use create mask and mode"
                    ],
                    "type": "string"
                },
                "csc_policy": {
                    "description": "Client-side caching policy for the shares.",
                    "enum": [
                        "manual",
                        "documents",
                        "programs",
                        "none"
                    ],
                    "type": "string"
                },
                "description": {
                    "description": "Description for this SMB share.",
                    "type": "string"
                },
                "directory_create_mask": {
                    "description": "Directory create mask bits.",
                    "type": "integer"
                },
                "directory_create_mode": {
                    "description": "Directory create mode bits.",
                    "type": "integer"
                },
                "file_create_mask": {
                    "description": "File create mask bits.",
                    "type": "integer"
                },
                "file_create_mode": {
                    "description": "File create mode bits.",
                    "type": "integer"
                },
                "hide_dot_files": {
                    "description": "Hide files and directories that begin with a period '.'.",
                    "type": "boolean"
                },
                "host_acl": {
                    "description": "An ACL expressing which hosts are allowed access. A deny clause must be the final entry.",
                    "items": {
                        "description": "<'allow:'|'deny:'><'ALL'|IP-range|subnet|fqdn>[' EXCEPT '<IP-range|subnet|fqdn>].",
                        "type": "string"
                    },
                    "type": "array"
                },
                "impersonate_guest": {
                    "description": "Specify the condition in which user access is done as the guest account.",
                    "enum": [
                        "always",
                        "bad user",
                        "never"
                    ],
                    "type": "string"
                },
                "impersonate_user": {
                    "description": "User account to be used as guest account.",
                    "type": "string"
                },
                "inheritable_path_acl": {
                    "description": "Set the inheritable ACL on the share path.",
                    "type": "boolean"
                },
                "mangle_byte_start": {
                    "description": "Specifies the wchar_t starting point for automatic byte mangling.",
                    "type": "integer"
                },
                "mangle_map": {
                    "description": "Character mangle map.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Share name.",
                    "type": "string"
                },
                "ntfs_acl_support": {
                    "description": "Support NTFS ACLs on files and directories.",
                    "type": "boolean"
                },
                "oplocks": {
                    "description": "Support oplocks.",
                    "type": "boolean"
                },
                "path": {
                    "description": "Path of share within /ifs.",
                    "type": "string"
                },
                "permissions": {
                    "description": "Ordered list of permission modifications.",
                    "items": {
                        "$ref": "#/definitions/SmbSharePermission",
                        "description": "Access Control Entry."
                    },
                    "type": "array"
                },
                "run_as_root": {
                    "description": "Allow account to run as root.",
                    "items": {
                        "$ref": "#/definitions/GroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "strict_flush": {
                    "description": "Handle SMB flush operations.",
                    "type": "boolean"
                },
                "strict_locking": {
                    "description": "Specifies whether byte range locks contend against SMB I/O.",
                    "type": "boolean"
                },
                "zone": {
                    "description": "Name of the access zone to which to move this SMB share",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmbShareCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SmbShare"
                },
                {
                    "properties": {
                        "create_path": {
                            "description": "Create path if does not exist.",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "path",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "SmbShareExtended": {
            "properties": {
                "access_based_enumeration": {
                    "description": "Only enumerate files and folders the requesting user has access to.",
                    "type": "boolean"
                },
                "access_based_enumeration_root_only": {
                    "description": "Access-based enumeration on only the root directory of the share.",
                    "type": "boolean"
                },
                "allow_delete_readonly": {
                    "description": "Allow deletion of read-only files in the share.",
                    "type": "boolean"
                },
                "allow_execute_always": {
                    "description": "Allows users to execute files they have read rights for.",
                    "type": "boolean"
                },
                "allow_variable_expansion": {
                    "description": "Allow automatic expansion of variables for home directories.",
                    "type": "boolean"
                },
                "auto_create_directory": {
                    "description": "Automatically create home directories.",
                    "type": "boolean"
                },
                "browsable": {
                    "description": "Share is visible in net view and the browse list.",
                    "type": "boolean"
                },
                "change_notify": {
                    "description": "Level of change notification alerts on the share.",
                    "enum": [
                        "all",
                        "norecurse",
                        "none"
                    ],
                    "type": "string"
                },
                "create_permissions": {
                    "description": "Create permissions for new files and directories in share.",
                    "enum": [
                        "default acl",
                        "inherit mode bits",
                        "use create mask and mode"
                    ],
                    "type": "string"
                },
                "csc_policy": {
                    "description": "Client-side caching policy for the shares.",
                    "enum": [
                        "manual",
                        "documents",
                        "programs",
                        "none"
                    ],
                    "type": "string"
                },
                "description": {
                    "description": "Description for this SMB share.",
                    "type": "string"
                },
                "directory_create_mask": {
                    "description": "Directory create mask bits.",
                    "type": "integer"
                },
                "directory_create_mode": {
                    "description": "Directory create mode bits.",
                    "type": "integer"
                },
                "file_create_mask": {
                    "description": "File create mask bits.",
                    "type": "integer"
                },
                "file_create_mode": {
                    "description": "File create mode bits.",
                    "type": "integer"
                },
                "hide_dot_files": {
                    "description": "Hide files and directories that begin with a period '.'.",
                    "type": "boolean"
                },
                "host_acl": {
                    "description": "An ACL expressing which hosts are allowed access. A deny clause must be the final entry.",
                    "items": {
                        "description": "<'allow:'|'deny:'><'ALL'|IP-range|subnet|fqdn>[' EXCEPT '<IP-range|subnet|fqdn>].",
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Share ID.",
                    "type": "string"
                },
                "impersonate_guest": {
                    "description": "Specify the condition in which user access is done as the guest account.",
                    "enum": [
                        "always",
                        "bad user",
                        "never"
                    ],
                    "type": "string"
                },
                "impersonate_user": {
                    "description": "User account to be used as guest account.",
                    "type": "string"
                },
                "inheritable_path_acl": {
                    "description": "Set the inheritable ACL on the share path.",
                    "type": "boolean"
                },
                "mangle_byte_start": {
                    "description": "Specifies the wchar_t starting point for automatic byte mangling.",
                    "type": "integer"
                },
                "mangle_map": {
                    "description": "Character mangle map.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Share name.",
                    "type": "string"
                },
                "ntfs_acl_support": {
                    "description": "Support NTFS ACLs on files and directories.",
                    "type": "boolean"
                },
                "oplocks": {
                    "description": "Support oplocks.",
                    "type": "boolean"
                },
                "path": {
                    "description": "Path of share within /ifs.",
                    "type": "string"
                },
                "permissions": {
                    "description": "Ordered list of permission modifications.",
                    "items": {
                        "$ref": "#/definitions/SmbSharePermission",
                        "description": "Access Control Entry."
                    },
                    "type": "array"
                },
                "run_as_root": {
                    "description": "Allow account to run as root.",
                    "items": {
                        "$ref": "#/definitions/GroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "strict_flush": {
                    "description": "Handle SMB flush operations.",
                    "type": "boolean"
                },
                "strict_locking": {
                    "description": "Specifies whether byte range locks contend against SMB I/O.",
                    "type": "boolean"
                },
                "zid": {
                    "description": "Numeric ID of the access zone which contains this SMB share",
                    "type": "integer"
                }
            },
            "required": [
                "zid"
            ],
            "type": "object"
        },
        "SmbSharePermission": {
            "properties": {
                "permission": {
                    "description": "Filesystem rights governed.",
                    "enum": [
                        "full",
                        "change",
                        "read"
                    ],
                    "type": "string"
                },
                "permission_type": {
                    "description": "Filesystem rights modification.",
                    "enum": [
                        "allow",
                        "deny"
                    ],
                    "type": "string"
                },
                "trustee": {
                    "$ref": "#/definitions/GroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                }
            },
            "required": [
                "permission_type",
                "trustee",
                "permission"
            ],
            "type": "object"
        },
        "SmbShares": {
            "properties": {
                "shares": {
                    "items": {
                        "$ref": "#/definitions/SmbShareExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SmbSharesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SmbShares"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SmbSharesSummary": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/SmbSharesSummarySummary",
                    "description": ""
                }
            },
            "type": "object"
        },
        "SmbSharesSummarySummary": {
            "properties": {
                "count": {
                    "description": "Total number of shares.",
                    "type": "integer"
                }
            },
            "required": [
                "count"
            ],
            "type": "object"
        },
        "SnapshotAliase": {
            "properties": {
                "name": {
                    "description": "The user or system supplied snapshot alias name.",
                    "type": "string"
                },
                "target": {
                    "description": "Target snapshot for this snapshot alias.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SnapshotAliaseCreateParams": {
            "properties": {
                "name": {
                    "description": "The user or system supplied snapshot name.",
                    "type": "string"
                },
                "target": {
                    "description": "Snapshot name target for the alias.",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "target"
            ],
            "type": "object"
        },
        "SnapshotAliaseExtended": {
            "properties": {
                "created": {
                    "description": "The Unix Epoch time the snapshot alias was created.",
                    "type": "integer"
                },
                "id": {
                    "description": "The system ID given to the snapshot alias.",
                    "type": "integer"
                },
                "name": {
                    "description": "The user or system supplied snapshot alias name.",
                    "type": "string"
                },
                "target_id": {
                    "description": "The ID of the snapshot pointed to.",
                    "type": "integer"
                },
                "target_name": {
                    "description": "The name of the snapshot pointed to.",
                    "type": "string"
                }
            },
            "required": [
                "target_name",
                "target_id",
                "id",
                "name",
                "created"
            ],
            "type": "object"
        },
        "SnapshotAliases": {
            "properties": {
                "aliases": {
                    "items": {
                        "$ref": "#/definitions/SnapshotAliaseExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SnapshotAliasesExtended": {
            "properties": {
                "resume": {
                    "description": "Resume token value to use in subsequent calls for continuation.",
                    "type": "string"
                },
                "snapshots": {
                    "items": {
                        "$ref": "#/definitions/SnapshotAliaseExtended",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SnapshotChangelists": {
            "properties": {
                "id": {
                    "description": "The system ID given to the changelist.",
                    "type": "string"
                },
                "job_id": {
                    "description": "The ID of the job which created the changelist.",
                    "type": "integer"
                },
                "num_entries": {
                    "description": "Number of LIN entries in changelist.",
                    "type": "integer"
                },
                "root_path": {
                    "description": "Root path of all LINs in changelist.",
                    "type": "string"
                },
                "snap1": {
                    "description": "The lower snapid used to compute the changelist.",
                    "type": "integer"
                },
                "snap2": {
                    "description": "The higher snapid used to compute the changelist.",
                    "type": "integer"
                },
                "status": {
                    "description": "Status of changelist.",
                    "type": "string"
                }
            },
            "required": [
                "snap1",
                "status",
                "snap2",
                "job_id",
                "root_path",
                "id"
            ],
            "type": "object"
        },
        "SnapshotChangelistsExtended": {
            "properties": {
                "changelists": {
                    "items": {
                        "$ref": "#/definitions/SnapshotChangelists",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SnapshotLock": {
            "properties": {
                "expires": {
                    "description": "The Unix Epoch time the snapshot lock will expire and be eligible for automatic deletion.",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SnapshotLockCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotLock"
                },
                {
                    "properties": {
                        "comment": {
                            "description": "Free form comment.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SnapshotLockExtended": {
            "properties": {
                "comment": {
                    "description": "User supplied lock comment.",
                    "type": "string"
                },
                "count": {
                    "description": "Recursive lock count.",
                    "type": "integer"
                },
                "expires": {
                    "description": "The Unix Epoch time the snapshot lock will expire and be eligible for automatic deletion.",
                    "type": "integer"
                },
                "id": {
                    "description": "System generated lock ID.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SnapshotLocks": {
            "properties": {
                "locks": {
                    "items": {
                        "$ref": "#/definitions/SnapshotLockExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SnapshotLocksExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotLocks"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Resume token value to use in subsequent calls for continuation.",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SnapshotPending": {
            "properties": {
                "pending": {
                    "items": {
                        "$ref": "#/definitions/SnapshotPendingPendingItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Resume token value to use in subsequent calls for continuation.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SnapshotPendingPendingItem": {
            "properties": {
                "id": {
                    "description": "The system supplied unique ID used for sorting and paging.",
                    "type": "string"
                },
                "path": {
                    "description": "The /ifs path that will snapshotted.",
                    "type": "string"
                },
                "schedule": {
                    "description": "The name of the schedule used to create this snapshot.",
                    "type": "string"
                },
                "snapshot": {
                    "description": "The system snapshot name formed from the schedule formate.",
                    "type": "string"
                },
                "time": {
                    "description": "The Unix Epoch time the snapshot will be created.",
                    "type": "integer"
                }
            },
            "required": [
                "path",
                "time",
                "snapshot",
                "id",
                "schedule"
            ],
            "type": "object"
        },
        "SnapshotRepstates": {
            "properties": {
                "id": {
                    "description": "The system ID given to the repstate.",
                    "type": "string"
                },
                "snap1": {
                    "description": "The lower snapid used to compute the repstate.",
                    "type": "integer"
                },
                "snap2": {
                    "description": "The higher snapid used to compute the repstate.",
                    "type": "integer"
                }
            },
            "required": [
                "snap1",
                "snap2",
                "id"
            ],
            "type": "object"
        },
        "SnapshotRepstatesExtended": {
            "properties": {
                "repstates": {
                    "items": {
                        "$ref": "#/definitions/SnapshotRepstates",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SnapshotSchedule": {
            "properties": {
                "alias": {
                    "description": "Alias name to create for each snapshot.",
                    "type": "string"
                },
                "duration": {
                    "description": "Time in seconds added to creation time to construction expiration time.",
                    "minimum": 0,
                    "type": "integer"
                },
                "name": {
                    "description": "The schedule name.",
                    "type": "string"
                },
                "path": {
                    "description": "The /ifs path snapshotted.",
                    "type": "string"
                },
                "pattern": {
                    "description": "Pattern expanded with strftime to create snapshot names.",
                    "type": "string"
                },
                "schedule": {
                    "description": "The isidate compatible natural language description of the schedule.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SnapshotScheduleCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotSchedule"
                },
                {
                    "properties": {},
                    "required": [
                        "name",
                        "schedule",
                        "pattern",
                        "path"
                    ],
                    "type": "object"
                }
            ]
        },
        "SnapshotScheduleExtended": {
            "properties": {
                "alias": {
                    "description": "Alias name to create for each snapshot.",
                    "type": "string"
                },
                "duration": {
                    "description": "Time in seconds added to creation time to construction expiration time.",
                    "type": "integer"
                },
                "id": {
                    "description": "The system ID given to the schedule.",
                    "type": "integer"
                },
                "name": {
                    "description": "The schedule name.",
                    "type": "string"
                },
                "next_run": {
                    "description": "Unix Epoch time of next snapshot to be created.",
                    "type": "integer"
                },
                "next_snapshot": {
                    "description": "Formatted name (see pattern) of next snapshot to be created.",
                    "type": "string"
                },
                "path": {
                    "description": "The /ifs path snapshotted.",
                    "type": "string"
                },
                "pattern": {
                    "description": "Pattern expanded with strftime to create snapshot name.",
                    "type": "string"
                },
                "schedule": {
                    "description": "The isidate compatible natural language description of the schedule.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SnapshotScheduleExtendedExtended": {
            "properties": {
                "alias": {
                    "description": "Alias name to create for each snapshot.",
                    "type": "string"
                },
                "duration": {
                    "description": "Time in seconds added to creation time to construction expiration time.",
                    "type": "integer"
                },
                "id": {
                    "description": "The system ID given to the schedule.",
                    "type": "integer"
                },
                "name": {
                    "description": "The schedule name.",
                    "type": "string"
                },
                "next_run": {
                    "description": "Unix Epoch time of next snapshot to be created.",
                    "type": "integer"
                },
                "next_snapshot": {
                    "description": "Formatted name (see pattern) of next snapshot to be created.",
                    "type": "string"
                },
                "path": {
                    "description": "The /ifs path snapshotted.",
                    "type": "string"
                },
                "pattern": {
                    "description": "Pattern expanded with strftime to create snapshot names.",
                    "type": "string"
                },
                "schedule": {
                    "description": "The isidate compatible natural language description of the schedule.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SnapshotSchedules": {
            "properties": {
                "schedules": {
                    "items": {
                        "$ref": "#/definitions/SnapshotScheduleExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SnapshotSchedulesExtended": {
            "properties": {
                "resume": {
                    "description": "Resume token value to use in subsequent calls for continuation.",
                    "type": "string"
                },
                "schedules": {
                    "items": {
                        "$ref": "#/definitions/SnapshotScheduleExtendedExtended",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SnapshotSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/SnapshotSettingsSettings",
                    "description": ""
                }
            },
            "type": "object"
        },
        "SnapshotSettingsExtended": {
            "properties": {
                "autocreate": {
                    "description": "True if the scheduled snapshot creation services is on.",
                    "type": "boolean"
                },
                "autodelete": {
                    "description": "True if the scheduled snapshot deletion services is on.",
                    "type": "boolean"
                },
                "global_visible_accessible": {
                    "description": "Global switch for other accessible and visible settings.",
                    "type": "boolean"
                },
                "local_root_accessible": {
                    "description": "True if root .snapshot directory is accessible locally.",
                    "type": "boolean"
                },
                "local_root_visible": {
                    "description": "True if root .snapshot directory is visible locally.",
                    "type": "boolean"
                },
                "local_subdir_accessible": {
                    "description": "True if sub-directory .snapshot directory is accessible locally.",
                    "type": "boolean"
                },
                "nfs_root_accessible": {
                    "description": "True if root .snapshot directory is accessible over NFS.",
                    "type": "boolean"
                },
                "nfs_root_visible": {
                    "description": "True if root .snapshot directory is visible over NFS.",
                    "type": "boolean"
                },
                "nfs_subdir_accessible": {
                    "description": "True if sub-directory .snapshot directory is accessible over NFS.",
                    "type": "boolean"
                },
                "reserve": {
                    "description": "Percentage of space to reserve for snapshots.",
                    "type": "number"
                },
                "service": {
                    "description": "True if the system allows snapshot creation.",
                    "type": "boolean"
                },
                "smb_root_accessible": {
                    "description": "True if root .snapshot directory is accessible over SMB.",
                    "type": "boolean"
                },
                "smb_root_visible": {
                    "description": "True if root .snapshot directory is visible over SMB.",
                    "type": "boolean"
                },
                "smb_subdir_accessible": {
                    "description": "True if sub-directory .snapshot directory is accessible over SMB.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SnapshotSettingsSettings": {
            "properties": {
                "autocreate": {
                    "description": "True if the scheduled snapshot creation services is on.",
                    "type": "boolean"
                },
                "autodelete": {
                    "description": "True if the scheduled snapshot deletion services is on.",
                    "type": "boolean"
                },
                "global_visible_accessible": {
                    "description": "Global switch for other accessible and visible settings.",
                    "type": "boolean"
                },
                "local_root_accessible": {
                    "description": "True if root .snapshot directory is accessible locally.",
                    "type": "boolean"
                },
                "local_root_visible": {
                    "description": "True if root .snapshot directory is visible locally.",
                    "type": "boolean"
                },
                "local_subdir_accessible": {
                    "description": "True if sub-directory .snapshot directory is accessible locally.",
                    "type": "boolean"
                },
                "nfs_root_accessible": {
                    "description": "True if root .snapshot directory is accessible over NFS.",
                    "type": "boolean"
                },
                "nfs_root_visible": {
                    "description": "True if root .snapshot directory is visible over NFS.",
                    "type": "boolean"
                },
                "nfs_subdir_accessible": {
                    "description": "True if sub-directory .snapshot directory is accessible over NFS.",
                    "type": "boolean"
                },
                "reserve": {
                    "description": "Percentage of space to reserve for snapshots.",
                    "type": "number"
                },
                "service": {
                    "description": "True if the system allows snapshot creation.",
                    "type": "boolean"
                },
                "smb_root_accessible": {
                    "description": "True if root .snapshot directory is accessible over SMB.",
                    "type": "boolean"
                },
                "smb_root_visible": {
                    "description": "True if root .snapshot directory is visible over SMB.",
                    "type": "boolean"
                },
                "smb_subdir_accessible": {
                    "description": "True if sub-directory .snapshot directory is accessible over SMB.",
                    "type": "boolean"
                }
            },
            "required": [
                "nfs_root_visible",
                "smb_root_visible",
                "local_root_visible",
                "autodelete",
                "reserve",
                "smb_subdir_accessible",
                "local_root_accessible",
                "autocreate",
                "service",
                "nfs_root_accessible",
                "nfs_subdir_accessible",
                "smb_root_accessible",
                "global_visible_accessible",
                "local_subdir_accessible"
            ],
            "type": "object"
        },
        "SnapshotSnapshot": {
            "properties": {
                "alias": {
                    "description": "Alias name to create for this snapshot. If null, remove any alias.",
                    "type": "string"
                },
                "expires": {
                    "description": "The Unix Epoch time the snapshot will expire and be eligible for automatic deletion.",
                    "type": "integer"
                },
                "name": {
                    "description": "The user or system supplied snapshot name. This will be null for snapshots pending delete.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SnapshotSnapshotCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotSnapshot"
                },
                {
                    "properties": {
                        "path": {
                            "description": "The /ifs path snapshotted.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "path"
                    ],
                    "type": "object"
                }
            ]
        },
        "SnapshotSnapshotExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotSnapshot"
                },
                {
                    "properties": {
                        "created": {
                            "description": "The Unix Epoch time the snapshot was created.",
                            "type": "integer"
                        },
                        "has_locks": {
                            "description": "True if the snapshot has one or more locks present see, see the locks subresource of a snapshot for a list of locks.",
                            "type": "boolean"
                        },
                        "id": {
                            "description": "The system ID given to the snapshot. This is useful for tracking the status of delete pending snapshots.",
                            "type": "integer"
                        },
                        "path": {
                            "description": "The /ifs path snapshotted.",
                            "type": "string"
                        },
                        "pct_filesystem": {
                            "description": "Percentage of /ifs used for storing this snapshot.",
                            "type": "number"
                        },
                        "pct_reserve": {
                            "description": "Percentage of configured snapshot reserved used for storing this snapshot.",
                            "type": "number"
                        },
                        "schedule": {
                            "description": "The name of the schedule used to create this snapshot, if applicable.",
                            "type": "string"
                        },
                        "shadow_bytes": {
                            "description": "The amount of shadow bytes referred to by this snapshot.",
                            "type": "integer"
                        },
                        "size": {
                            "description": "The amount of storage in bytes used to store this snapshot.",
                            "type": "integer"
                        },
                        "state": {
                            "description": "Snapshot state.",
                            "enum": [
                                "active",
                                "deleting"
                            ],
                            "type": "string"
                        },
                        "target_id": {
                            "description": "The ID of the snapshot pointed to if this is an alias.",
                            "type": "integer"
                        },
                        "target_name": {
                            "description": "The name of the snapshot pointed to if this is an alias.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "pct_reserve",
                        "shadow_bytes",
                        "created",
                        "state",
                        "has_locks",
                        "pct_filesystem",
                        "id",
                        "size"
                    ],
                    "type": "object"
                }
            ]
        },
        "SnapshotSnapshots": {
            "properties": {
                "snapshots": {
                    "items": {
                        "$ref": "#/definitions/SnapshotSnapshotExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SnapshotSnapshotsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotSnapshots"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SnapshotSnapshotsSummary": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/SnapshotSnapshotsSummarySummary",
                    "description": ""
                }
            },
            "type": "object"
        },
        "SnapshotSnapshotsSummarySummary": {
            "properties": {
                "active_count": {
                    "description": "Total number of active snapshots.",
                    "type": "integer"
                },
                "active_size": {
                    "description": "Sum of sizes of active snapshots.",
                    "type": "integer"
                },
                "aliases_count": {
                    "description": "Total number of snapshot aliases.",
                    "type": "integer"
                },
                "count": {
                    "description": "Total number of snapshots.",
                    "type": "integer"
                },
                "deleting_count": {
                    "description": "Total number of delete-pending snapshots.",
                    "type": "integer"
                },
                "deleting_size": {
                    "description": "Sum of sizes of delete-pending snapshots.",
                    "type": "integer"
                },
                "shadow_bytes": {
                    "description": "Sum of shadow bytes of all snapshots.",
                    "type": "integer"
                },
                "size": {
                    "description": "Sum of sizes in bytes of all snapshots.",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "aliases_count",
                "shadow_bytes",
                "deleting_size",
                "active_size",
                "deleting_count",
                "active_count",
                "size"
            ],
            "type": "object"
        },
        "StatisticsCurrent": {
            "properties": {
                "stats": {
                    "items": {
                        "$ref": "#/definitions/StatisticsCurrentStat",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StatisticsCurrentStat": {
            "properties": {
                "devid": {
                    "description": "Devid of node of statistic or 0 for cluster scoped statistics.",
                    "type": "integer"
                },
                "error": {
                    "description": "Key specific error string, if applicable.",
                    "type": "string"
                },
                "error_code": {
                    "description": "Key specific error number, if applicable.",
                    "type": "integer"
                },
                "key": {
                    "description": "Key name of statistic.",
                    "type": "string"
                },
                "time": {
                    "description": "Unix Epoch time in seconds that statistic was collected.",
                    "type": "integer"
                },
                "value": {
                    "description": "Key dependent value.",
                    "type": "string"
                }
            },
            "required": [
                "devid",
                "value",
                "key",
                "time"
            ],
            "type": "object"
        },
        "StatisticsHistory": {
            "properties": {
                "stats": {
                    "items": {
                        "$ref": "#/definitions/StatisticsHistoryStat",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StatisticsHistoryStat": {
            "properties": {
                "devid": {
                    "description": "Devid of node of statistic or 0 for cluster scoped statistics.",
                    "type": "integer"
                },
                "error": {
                    "description": "Key specific error string, if applicable.",
                    "type": "string"
                },
                "error_code": {
                    "description": "Key specific error number, if applicable.",
                    "type": "integer"
                },
                "key": {
                    "description": "Key name of statistic.",
                    "type": "string"
                },
                "values": {
                    "description": "Time-series values.",
                    "items": {
                        "$ref": "#/definitions/StatisticsHistoryStatValue",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "devid",
                "key"
            ],
            "type": "object"
        },
        "StatisticsHistoryStatValue": {
            "properties": {
                "time": {
                    "description": "Unix Epoch time in seconds that statistic was collected.",
                    "type": "integer"
                },
                "value": {
                    "description": "Key dependent value.",
                    "type": "string"
                }
            },
            "required": [
                "value",
                "time"
            ],
            "type": "object"
        },
        "StatisticsKey": {
            "properties": {
                "aggregation_type": {
                    "description": "Type of aggregation used in down-sampling.",
                    "enum": [
                        "last",
                        "min",
                        "max",
                        "avg",
                        "sum",
                        "custom"
                    ],
                    "type": "string"
                },
                "base_name": {
                    "description": "Name of key this keys is derived from, if any.",
                    "type": "string"
                },
                "default_cache_time": {
                    "description": "Default time in seconds system will used cached values.",
                    "type": "integer"
                },
                "description": {
                    "description": "Description of statistics key.",
                    "type": "string"
                },
                "key": {
                    "description": "Key name.",
                    "type": "string"
                },
                "policies": {
                    "description": "List of effective history policies for key.",
                    "items": {
                        "$ref": "#/definitions/StatisticsKeyPolicy",
                        "description": ""
                    },
                    "type": "array"
                },
                "policy_cache_time": {
                    "description": "Configured time in seconds system will used cached values.",
                    "type": "integer"
                },
                "real_name": {
                    "description": "Name of real key if this is an alias.",
                    "type": "string"
                },
                "scope": {
                    "description": "Scope of key.",
                    "enum": [
                        "cluster",
                        "node"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Data type of key values.",
                    "type": "string"
                },
                "units": {
                    "description": "Units of key values.",
                    "type": "string"
                }
            },
            "required": [
                "default_cache_time",
                "description",
                "key",
                "units",
                "scope",
                "type",
                "aggregation_type"
            ],
            "type": "object"
        },
        "StatisticsKeyPolicy": {
            "properties": {
                "interval": {
                    "description": "Time between samples in seconds.",
                    "type": "integer"
                },
                "persistent": {
                    "description": "If true, history is persisted.",
                    "type": "boolean"
                },
                "retention": {
                    "description": "Time in seconds to keep data.",
                    "type": "integer"
                }
            },
            "required": [
                "interval",
                "persistent",
                "retention"
            ],
            "type": "object"
        },
        "StatisticsKeys": {
            "properties": {
                "keys": {
                    "items": {
                        "$ref": "#/definitions/StatisticsKey",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StatisticsKeysExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/StatisticsKeys"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "StatisticsProtocol": {
            "properties": {
                "name": {
                    "description": "Abbreviated name of protocol.",
                    "type": "string"
                },
                "type": {
                    "description": "External protocols are customer facing, internal protocols expose metrics for internal OneFS systems.",
                    "enum": [
                        "external",
                        "internal"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type",
                "name"
            ],
            "type": "object"
        },
        "StatisticsProtocols": {
            "properties": {
                "protocols": {
                    "items": {
                        "$ref": "#/definitions/StatisticsProtocol",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "protocols"
            ],
            "type": "object"
        },
        "StoragepoolNodepool": {
            "properties": {
                "l3": {
                    "description": "Use SSDs in this node pool for L3 cache.",
                    "type": "boolean"
                },
                "lnns": {
                    "description": "The nodes that are part of this node pool.",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The node pool name.",
                    "type": "string"
                },
                "protection_policy": {
                    "description": "The node pool protection policy.",
                    "type": "string"
                },
                "tier": {
                    "description": "The name or ID of the node pool's tier, if it is in a tier.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StoragepoolNodepoolCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/StoragepoolNodepool"
                },
                {
                    "properties": {},
                    "required": [
                        "name",
                        "lnns"
                    ],
                    "type": "object"
                }
            ]
        },
        "StoragepoolNodepoolExtended": {
            "properties": {
                "can_enable_l3": {
                    "description": "Indicates if enabling L3 is possible. L3 cannot be enabled if there are unprovisioned drives.",
                    "type": "boolean"
                },
                "id": {
                    "description": "The system ID given to the node pool.",
                    "type": "integer"
                },
                "l3": {
                    "description": "Use SSDs in this node pool for L3 cache.",
                    "type": "boolean"
                },
                "l3_status": {
                    "description": "'storage' if the 'l3' option is disabled. If the l3 option is enabled, 'migrating' if any SSDs in this node pool have not yet been migrated to L3. If all SSDs have been migrated, 'l3'.",
                    "enum": [
                        "l3",
                        "storage",
                        "migrating"
                    ],
                    "type": "string"
                },
                "lnns": {
                    "description": "The nodes that are part of this node pool.",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "manual": {
                    "description": "Whether or not the node pool is manually managed.",
                    "type": "boolean"
                },
                "name": {
                    "description": "The node pool name.",
                    "type": "string"
                },
                "protection_policy": {
                    "description": "The underlying protection policy.",
                    "type": "string"
                },
                "tier": {
                    "description": "The name (if named) or system ID of the node pool's tier, if it is in a tier. Otherwise null.",
                    "type": "string"
                },
                "usage": {
                    "$ref": "#/definitions/StoragepoolNodepoolUsage",
                    "description": "Total pool usage."
                }
            },
            "required": [
                "name",
                "lnns",
                "l3_status",
                "manual",
                "id",
                "usage",
                "l3",
                "can_enable_l3"
            ],
            "type": "object"
        },
        "StoragepoolNodepoolUsage": {
            "properties": {
                "avail_bytes": {
                    "description": "Available free bytes remaining in the pool when virtual hot spare is taken into account.",
                    "type": "string"
                },
                "avail_ssd_bytes": {
                    "description": "Available free bytes remaining in the pool on SSD drives when virtual hot spare is taken into account.",
                    "type": "string"
                },
                "balanced": {
                    "description": "Whether or not the pool usage is currently balanced.",
                    "type": "boolean"
                },
                "free_bytes": {
                    "description": "Free bytes remaining in the pool.",
                    "type": "string"
                },
                "free_ssd_bytes": {
                    "description": "Free bytes remaining in the pool on SSD drives.",
                    "type": "string"
                },
                "total_bytes": {
                    "description": "Total bytes used in the pool.",
                    "type": "string"
                },
                "total_ssd_bytes": {
                    "description": "Total bytes used in the pool on SSD drives.",
                    "type": "string"
                },
                "virtual_hot_spare_bytes": {
                    "description": "Bytes reserved for virtual hot spare in the pool.",
                    "type": "string"
                }
            },
            "required": [
                "virtual_hot_spare_bytes",
                "avail_bytes",
                "avail_ssd_bytes",
                "free_ssd_bytes",
                "free_bytes",
                "total_ssd_bytes",
                "total_bytes",
                "balanced"
            ],
            "type": "object"
        },
        "StoragepoolNodepools": {
            "properties": {
                "nodepools": {
                    "items": {
                        "$ref": "#/definitions/StoragepoolNodepoolExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StoragepoolNodepoolsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/StoragepoolNodepools"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "StoragepoolSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/StoragepoolSettingsSettings",
                    "description": ""
                }
            },
            "type": "object"
        },
        "StoragepoolSettingsExtended": {
            "properties": {
                "automatically_manage_io_optimization": {
                    "description": "Automatically manage IO optimization settings on files.",
                    "enum": [
                        "all",
                        "files_at_default",
                        "none"
                    ],
                    "type": "string"
                },
                "automatically_manage_protection": {
                    "description": "Automatically manage protection settings on files.",
                    "enum": [
                        "all",
                        "files_at_default",
                        "none"
                    ],
                    "type": "string"
                },
                "global_namespace_acceleration_enabled": {
                    "description": "Optimize namespace operations by storing metadata on SSDs.",
                    "type": "boolean"
                },
                "protect_directories_one_level_higher": {
                    "description": "Automatically add additional protection level to all directories.",
                    "type": "boolean"
                },
                "spillover_enabled": {
                    "description": "Spill writes into other pools as needed.",
                    "type": "boolean"
                },
                "spillover_target": {
                    "$ref": "#/definitions/StoragepoolSettingsSpilloverTarget",
                    "description": "Target pool for spilled writes."
                },
                "ssd_l3_cache_default_enabled": {
                    "description": "The L3 Cache default enabled state. This specifies whether L3 Cache should be enabled on new node pools",
                    "type": "boolean"
                },
                "virtual_hot_spare_deny_writes": {
                    "description": "Deny writes into reserved virtual hot spare space.",
                    "type": "boolean"
                },
                "virtual_hot_spare_hide_spare": {
                    "description": "Hide reserved virtual hot spare space from free space counts.",
                    "type": "boolean"
                },
                "virtual_hot_spare_limit_drives": {
                    "description": "The number of drives to reserve for the virtual hot spare, from 0-4.",
                    "maximum": 4,
                    "minimum": 0,
                    "type": "integer"
                },
                "virtual_hot_spare_limit_percent": {
                    "description": "The percent space to reserve for the virtual hot spare, from 0-20.",
                    "maximum": 20,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "StoragepoolSettingsSettings": {
            "properties": {
                "automatically_manage_io_optimization": {
                    "description": "Automatically manage IO optimization settings on files.",
                    "enum": [
                        "all",
                        "files_at_default",
                        "none"
                    ],
                    "type": "string"
                },
                "automatically_manage_protection": {
                    "description": "Automatically manage protection settings on files.",
                    "enum": [
                        "all",
                        "files_at_default",
                        "none"
                    ],
                    "type": "string"
                },
                "global_namespace_acceleration_enabled": {
                    "description": "Optimize namespace operations by storing metadata on SSDs.",
                    "type": "boolean"
                },
                "global_namespace_acceleration_state": {
                    "description": "Whether or not namespace operation optimizations are currently in effect.",
                    "enum": [
                        "honored",
                        "inactive"
                    ],
                    "type": "string"
                },
                "protect_directories_one_level_higher": {
                    "description": "Automatically add additional protection level to all directories.",
                    "type": "boolean"
                },
                "spillover_enabled": {
                    "description": "Spill writes into other pools as needed.",
                    "type": "boolean"
                },
                "spillover_target": {
                    "$ref": "#/definitions/StoragepoolSettingsSettingsSpilloverTarget",
                    "description": "Target pool for spilled writes."
                },
                "ssd_l3_cache_default_enabled": {
                    "description": "The L3 Cache default enabled state. This specifies whether L3 Cache should be enabled on new node pools.",
                    "type": "boolean"
                },
                "virtual_hot_spare_deny_writes": {
                    "description": "Deny writes into reserved virtual hot spare space.",
                    "type": "boolean"
                },
                "virtual_hot_spare_hide_spare": {
                    "description": "Hide reserved virtual hot spare space from free space counts.",
                    "type": "boolean"
                },
                "virtual_hot_spare_limit_drives": {
                    "description": "The number of drives to reserve for the virtual hot spare, from 0-4.",
                    "maximum": 4,
                    "minimum": 0,
                    "type": "integer"
                },
                "virtual_hot_spare_limit_percent": {
                    "description": "The percent space to reserve for the virtual hot spare, from 0-20.",
                    "maximum": 20,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "virtual_hot_spare_deny_writes",
                "virtual_hot_spare_hide_spare",
                "spillover_target",
                "global_namespace_acceleration_enabled",
                "virtual_hot_spare_limit_percent",
                "virtual_hot_spare_limit_drives",
                "automatically_manage_io_optimization",
                "spillover_enabled",
                "ssd_l3_cache_default_enabled",
                "automatically_manage_protection",
                "global_namespace_acceleration_state",
                "protect_directories_one_level_higher"
            ],
            "type": "object"
        },
        "StoragepoolSettingsSettingsSpilloverTarget": {
            "properties": {
                "id": {
                    "description": "Target pool ID if target specified, otherwise null.",
                    "type": "integer"
                },
                "name": {
                    "description": "Target pool name if target specified, otherwise null.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of target pool.",
                    "enum": [
                        "tier",
                        "nodepool",
                        "anywhere",
                        "invalid"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "StoragepoolSettingsSpilloverTarget": {
            "properties": {
                "name_or_id": {
                    "description": "Target pool ID if target specified, otherwise null.",
                    "type": "integer"
                },
                "type": {
                    "description": "Type of target pool.",
                    "enum": [
                        "storagepool",
                        "anywhere"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "StoragepoolStatus": {
            "properties": {
                "unhealthy": {
                    "description": "Disk pools which are currently unhealthy.",
                    "items": {
                        "$ref": "#/definitions/StoragepoolStatusUnhealthyItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "unprovisioned": {
                    "description": "Drives which are not currently provisioned into a disk pool.",
                    "items": {
                        "$ref": "#/definitions/StoragepoolStatusUnprovisionedItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "unprovisioned",
                "unhealthy"
            ],
            "type": "object"
        },
        "StoragepoolStatusUnhealthyItem": {
            "properties": {
                "affected": {
                    "description": "The affected nodes and/or drives.",
                    "items": {
                        "$ref": "#/definitions/StoragepoolStatusUnhealthyItemAffectedItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "diskpool": {
                    "$ref": "#/definitions/StoragepoolStatusUnhealthyItemDiskpool",
                    "description": ""
                },
                "health_flags": {
                    "description": "The disk pool health status.",
                    "items": {
                        "enum": [
                            "underprovisioned",
                            "missing_drives",
                            "devices_down",
                            "devices_smartfailed",
                            "waiting_repair"
                        ],
                        "required": true,
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "affected"
            ],
            "type": "object"
        },
        "StoragepoolStatusUnhealthyItemAffectedItem": {
            "properties": {
                "device": {
                    "description": "The logical node number or drive identifier.",
                    "type": "integer"
                },
                "down": {
                    "description": "Whether or not the device is currently down.",
                    "type": "boolean"
                },
                "restriping": {
                    "description": "Whether or not the device is currently being repaired.",
                    "type": "boolean"
                },
                "smartfailed": {
                    "description": "Whether or not the device is currently smartfailed.",
                    "type": "boolean"
                },
                "type": {
                    "description": "The type of affected device.",
                    "enum": [
                        "node",
                        "drive"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "down",
                "restriping",
                "type",
                "smartfailed"
            ],
            "type": "object"
        },
        "StoragepoolStatusUnhealthyItemDiskpool": {
            "properties": {
                "drives": {
                    "description": "The drives that are part of this disk pool.",
                    "items": {
                        "$ref": "#/definitions/StoragepoolStatusUnprovisionedItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "id": {
                    "description": "The system ID given to the disk pool.",
                    "type": "integer"
                },
                "name": {
                    "description": "The disk pool name.",
                    "type": "string"
                },
                "nodepool_id": {
                    "description": "The system ID of the disk pool's node pool, if it is in a node pool.",
                    "type": "integer"
                },
                "protection_policy": {
                    "description": "The protection policy for the disk pool.",
                    "type": "string"
                },
                "ssd_drives": {
                    "description": "The SSDs that are part of this disk pool.",
                    "items": {
                        "$ref": "#/definitions/StoragepoolStatusUnprovisionedItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "ssd_drives",
                "name",
                "drives",
                "protection_policy",
                "id"
            ],
            "type": "object"
        },
        "StoragepoolStatusUnprovisionedItem": {
            "properties": {
                "bay": {
                    "description": "The drive bay number.",
                    "type": "integer"
                },
                "lnn": {
                    "description": "The node the drive is on.",
                    "type": "integer"
                }
            },
            "required": [
                "lnn",
                "bay"
            ],
            "type": "object"
        },
        "StoragepoolStoragepool": {
            "properties": {
                "can_enable_l3": {
                    "description": "Indicates if enabling L3 is possible. L3 cannot be enabled if there are unprovisioned drives.",
                    "type": "boolean"
                },
                "children": {
                    "description": "The names or IDs of the pool's children.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "The system ID given to the pool.",
                    "type": "integer"
                },
                "l3": {
                    "description": "Use SSDs in this node pool for L3 cache.",
                    "type": "boolean"
                },
                "l3_status": {
                    "description": "'storage' if the 'l3' option is disabled. If the l3 option is enabled, 'migrating' if any SSDs in this node pool have not yet been migrated to L3. If all SSDs have been migrated, 'l3'.",
                    "enum": [
                        "l3",
                        "storage",
                        "migrating"
                    ],
                    "type": "string"
                },
                "lnns": {
                    "description": "The nodes that are part of this pool.",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "manual": {
                    "description": "Whether or not the node pool is manually managed.",
                    "type": "boolean"
                },
                "name": {
                    "description": "The pool name.",
                    "type": "string"
                },
                "protection_policy": {
                    "description": "The underlying protection policy.",
                    "type": "string"
                },
                "type": {
                    "description": "The pool type.",
                    "enum": [
                        "tier",
                        "nodepool"
                    ],
                    "type": "string"
                },
                "usage": {
                    "$ref": "#/definitions/StoragepoolNodepoolUsage",
                    "description": "Total pool usage."
                }
            },
            "required": [
                "name",
                "lnns",
                "l3_status",
                "can_enable_l3",
                "l3",
                "usage",
                "type",
                "id"
            ],
            "type": "object"
        },
        "StoragepoolStoragepools": {
            "properties": {
                "storagepools": {
                    "items": {
                        "$ref": "#/definitions/StoragepoolStoragepool",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "StoragepoolSuggestedProtection": {
            "properties": {
                "suggested_protection": {
                    "items": {
                        "$ref": "#/definitions/StoragepoolSuggestedProtectionSuggestedProtectionItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StoragepoolSuggestedProtectionSuggestedProtectionItem": {
            "properties": {
                "suggested_protection": {
                    "description": "The suggested protection policy.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StoragepoolTier": {
            "properties": {
                "children": {
                    "description": "The names or IDs of the tier's children.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The tier name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StoragepoolTierCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/StoragepoolTier"
                },
                {
                    "properties": {},
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "StoragepoolTierExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/StoragepoolTier"
                },
                {
                    "properties": {
                        "id": {
                            "description": "The system ID given to the tier.",
                            "type": "integer"
                        },
                        "lnns": {
                            "description": "The nodes that are part of this tier.",
                            "items": {
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "usage": {
                            "$ref": "#/definitions/StoragepoolNodepoolUsage",
                            "description": "Total pool usage."
                        }
                    },
                    "required": [
                        "usage",
                        "lnns",
                        "name",
                        "id"
                    ],
                    "type": "object"
                }
            ]
        },
        "StoragepoolTiers": {
            "properties": {
                "tiers": {
                    "items": {
                        "$ref": "#/definitions/StoragepoolTierExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StoragepoolTiersExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/StoragepoolTiers"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "StoragepoolUnprovisioned": {
            "properties": {
                "unprovisioned": {
                    "items": {
                        "$ref": "#/definitions/StoragepoolUnprovisionedUnprovisionedItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StoragepoolUnprovisionedUnprovisionedItem": {
            "properties": {
                "drives": {
                    "description": "A list of unprovisioned drives that do not belong to an unprovisioned node.",
                    "items": {
                        "$ref": "#/definitions/StoragepoolStatusUnprovisionedItem"
                    },
                    "type": "array"
                },
                "lnns": {
                    "description": "A list of lnns whose drives are all unprovisioned",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "drives",
                "lnns"
            ],
            "type": "object"
        },
        "SyncJob": {
            "properties": {
                "state": {
                    "description": "The state of the job.",
                    "enum": [
                        "canceled",
                        "running",
                        "paused"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "state"
            ],
            "type": "object"
        },
        "SyncJobCreateParams": {
            "properties": {
                "action": {
                    "description": "The action to be taken by this job.",
                    "enum": [
                        "resync_prep",
                        "allow_write",
                        "allow_write_revert",
                        "test"
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "The ID or Name of the policy",
                    "type": "string"
                },
                "log_level": {
                    "description": "Only valid for allow_write, and allow_write_revert; specify the desired logging level, will be stored in the logs for isi_migrate, defaults to 'info'.",
                    "enum": [
                        "fatal",
                        "error",
                        "notice",
                        "info",
                        "copy",
                        "debug",
                        "trace"
                    ],
                    "type": "string"
                },
                "source_snapshot": {
                    "description": "An optional snapshot to copy/sync from.",
                    "type": "string"
                },
                "workers_per_node": {
                    "description": "Only valid for allow_write, and allow_write_revert; specify the desired workers per node, defaults to 3.",
                    "type": "integer"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "SyncJobExtended": {
            "properties": {
                "action": {
                    "description": "The action to be taken by this job.",
                    "enum": [
                        "resync_prep",
                        "allow_write",
                        "allow_write_revert",
                        "test",
                        "run"
                    ],
                    "type": "string"
                },
                "ads_streams_replicated": {
                    "description": "The number of ads streams replicated by this job.",
                    "type": "integer"
                },
                "block_specs_replicated": {
                    "description": "The number of block specs replicated by this job.",
                    "type": "integer"
                },
                "bytes_recoverable": {
                    "description": "The number of bytes recoverable by this job.",
                    "type": "integer"
                },
                "bytes_transferred": {
                    "description": "The number of bytes that have been transferred by this job.",
                    "type": "integer"
                },
                "char_specs_replicated": {
                    "description": "The number of char specs replicated by this job.",
                    "type": "integer"
                },
                "corrected_lins": {
                    "description": "The number of LINs corrected by this job.",
                    "type": "integer"
                },
                "dead_node": {
                    "description": "This field is true if the node running this job is dead.",
                    "type": "boolean"
                },
                "directories_replicated": {
                    "description": "The number of directories replicated.",
                    "type": "integer"
                },
                "dirs_changed": {
                    "description": "The number of directories changed by this job.",
                    "type": "integer"
                },
                "dirs_deleted": {
                    "description": "The number of directories deleted by this job.",
                    "type": "integer"
                },
                "dirs_moved": {
                    "description": "The number of directories moved by this job.",
                    "type": "integer"
                },
                "dirs_new": {
                    "description": "The number of directories created by this job.",
                    "type": "integer"
                },
                "duration": {
                    "description": "The amount of time in seconds between when the job was started and when it ended.  If the job has not yet ended, this is the amount of time since the job started.  This field is null if the job has not yet started.",
                    "type": "integer"
                },
                "end_time": {
                    "description": "The time the job ended in unix epoch seconds. The field is null if the job hasn't ended.",
                    "type": "integer"
                },
                "error": {
                    "description": "The primary error message for this job.",
                    "type": "string"
                },
                "error_checksum_files_skipped": {
                    "description": "The number of files with checksum errors skipped by this job.",
                    "type": "integer"
                },
                "error_io_files_skipped": {
                    "description": "The number of files with io errors skipped by this job.",
                    "type": "integer"
                },
                "error_net_files_skipped": {
                    "description": "The number of files with network errors skipped by this job.",
                    "type": "integer"
                },
                "errors": {
                    "description": "A list of error messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "failed_chunks": {
                    "description": "Tyhe number of data chunks that failed transmission.",
                    "type": "integer"
                },
                "fifos_replicated": {
                    "description": "The number of fifos replicated by this job.",
                    "type": "integer"
                },
                "file_data_bytes": {
                    "description": "The number of bytes tranferred that belong to files.",
                    "type": "integer"
                },
                "files_changed": {
                    "description": "The number of files changed by this job.",
                    "type": "integer"
                },
                "files_linked": {
                    "description": "The number of files linked by this job.",
                    "type": "integer"
                },
                "files_new": {
                    "description": "The number of files created by this job.",
                    "type": "integer"
                },
                "files_selected": {
                    "description": "The number of files selected by this job.",
                    "type": "integer"
                },
                "files_transferred": {
                    "description": "The number of files transfered by this job.",
                    "type": "integer"
                },
                "files_unlinked": {
                    "description": "The number of files unlinked by this job.",
                    "type": "integer"
                },
                "files_with_ads_replicated": {
                    "description": "The number of files with ads replicated by this job.",
                    "type": "integer"
                },
                "flipped_lins": {
                    "description": "The number of LINs flipped by this job.",
                    "type": "integer"
                },
                "hard_links_replicated": {
                    "description": "The number of hard links replicated by this job.",
                    "type": "integer"
                },
                "hash_exceptions_fixed": {
                    "description": "The number of hash exceptions fixed by this job.",
                    "type": "integer"
                },
                "hash_exceptions_found": {
                    "description": "The number of hash exceptions found by this job.",
                    "type": "integer"
                },
                "id": {
                    "description": "A unique identifier for this object.",
                    "type": "string"
                },
                "job_id": {
                    "description": "The ID of the job.",
                    "type": "integer"
                },
                "lins_total": {
                    "description": "The number of LINs tranferred by this job.",
                    "type": "integer"
                },
                "network_bytes_to_source": {
                    "description": "The total number of bytes sent to the source by this job.",
                    "type": "integer"
                },
                "network_bytes_to_target": {
                    "description": "The total number of bytes sent to the target by this job.",
                    "type": "integer"
                },
                "new_files_replicated": {
                    "description": "The number of new files replicated by this job.",
                    "type": "integer"
                },
                "num_retransmitted_files": {
                    "description": "The number of files that have been retransmitted by this job.",
                    "type": "integer"
                },
                "phases": {
                    "description": "Data for each phase of this job.",
                    "items": {
                        "$ref": "#/definitions/SyncJobPhase",
                        "description": ""
                    },
                    "type": "array"
                },
                "policy": {
                    "$ref": "#/definitions/SyncJobPolicy",
                    "description": "The policy associated with this job, or null if there is currently no policy associated with this job (this can happen if the job is newly created and not yet fully populated in the underlying database)."
                },
                "policy_action": {
                    "description": "This is the action the policy is configured to perform.",
                    "enum": [
                        "copy",
                        "sync"
                    ],
                    "type": "string"
                },
                "policy_id": {
                    "description": "The ID of the policy.",
                    "type": "string"
                },
                "policy_name": {
                    "description": "The name of the policy.",
                    "type": "string"
                },
                "regular_files_replicated": {
                    "description": "The number of regular files replicated by this job.",
                    "type": "integer"
                },
                "resynced_lins": {
                    "description": "The number of LINs resynched by this job.",
                    "type": "integer"
                },
                "retransmitted_files": {
                    "description": "The files that have been retransmitted by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "retry": {
                    "description": "The number of times the job has been retried.",
                    "type": "integer"
                },
                "running_chunks": {
                    "description": "The number of data chunks currently being transmitted.",
                    "type": "integer"
                },
                "sockets_replicated": {
                    "description": "The number of sockets replicated by this job.",
                    "type": "integer"
                },
                "source_bytes_recovered": {
                    "description": "The number of bytes recovered on the source.",
                    "type": "integer"
                },
                "source_directories_created": {
                    "description": "The number of directories created on the source.",
                    "type": "integer"
                },
                "source_directories_deleted": {
                    "description": "The number of directories deleted on the source.",
                    "type": "integer"
                },
                "source_directories_linked": {
                    "description": "The number of directories linked on the source.",
                    "type": "integer"
                },
                "source_directories_unlinked": {
                    "description": "The number of directories unlinked on the source.",
                    "type": "integer"
                },
                "source_directories_visited": {
                    "description": "The number of directories visited on the source.",
                    "type": "integer"
                },
                "source_files_deleted": {
                    "description": "The number of files deleted on the source.",
                    "type": "integer"
                },
                "source_files_linked": {
                    "description": "The number of files linked on the source.",
                    "type": "integer"
                },
                "source_files_unlinked": {
                    "description": "The number of files unlinked on the source.",
                    "type": "integer"
                },
                "sparse_data_bytes": {
                    "description": "The number of sparse data bytes transferred by this job.",
                    "type": "integer"
                },
                "start_time": {
                    "description": "The time the job started in unix epoch seconds. The field is null if the job hasn't started.",
                    "type": "integer"
                },
                "state": {
                    "description": "The state of the job.",
                    "enum": [
                        "scheduled",
                        "running",
                        "paused",
                        "finished",
                        "failed",
                        "canceled",
                        "needs_attention",
                        "unknown"
                    ],
                    "type": "string"
                },
                "succeeded_chunks": {
                    "description": "The number of data chunks that have been transmitted successfully.",
                    "type": "integer"
                },
                "symlinks_replicated": {
                    "description": "The number of symlinks replicated by this job.",
                    "type": "integer"
                },
                "sync_type": {
                    "description": "The type of sync being performed by this job.",
                    "enum": [
                        "invalid",
                        "legacy",
                        "initial",
                        "incremental",
                        "upgrade",
                        "fofb",
                        "domainmark"
                    ],
                    "type": "string"
                },
                "target_bytes_recovered": {
                    "description": "The number of bytes recovered on the target.",
                    "type": "integer"
                },
                "target_directories_created": {
                    "description": "The number of directories created on the target.",
                    "type": "integer"
                },
                "target_directories_deleted": {
                    "description": "The number of directories deleted on the target.",
                    "type": "integer"
                },
                "target_directories_linked": {
                    "description": "The number of directories linked on the target.",
                    "type": "integer"
                },
                "target_directories_unlinked": {
                    "description": "The number of directories unlinked on the target.",
                    "type": "integer"
                },
                "target_files_deleted": {
                    "description": "The number of files deleted on the target.",
                    "type": "integer"
                },
                "target_files_linked": {
                    "description": "The number of files linked on the target.",
                    "type": "integer"
                },
                "target_files_unlinked": {
                    "description": "The number of files unlinked on the target.",
                    "type": "integer"
                },
                "target_snapshots": {
                    "description": "The target snapshots created by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "total_chunks": {
                    "description": "The total number of data chunks transmitted by this job.",
                    "type": "integer"
                },
                "total_data_bytes": {
                    "description": "The total number of bytes transferred by this job.",
                    "type": "integer"
                },
                "total_files": {
                    "description": "The number of files affected by this job.",
                    "type": "integer"
                },
                "total_network_bytes": {
                    "description": "The total number of bytes sent over the network by this job.",
                    "type": "integer"
                },
                "total_phases": {
                    "description": "The total number of phases for this job.",
                    "type": "integer"
                },
                "unchanged_data_bytes": {
                    "description": "The number of bytes unchanged by this job.",
                    "type": "integer"
                },
                "up_to_date_files_skipped": {
                    "description": "The number of up-to-date files skipped by this job.",
                    "type": "integer"
                },
                "updated_files_replicated": {
                    "description": "The number of updated files replicated by this job.",
                    "type": "integer"
                },
                "user_conflict_files_skipped": {
                    "description": "The number of files with user conflicts skipped by this job.",
                    "type": "integer"
                },
                "warnings": {
                    "description": "A list of warning messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "workers": {
                    "description": "A list of workers for this job.",
                    "items": {
                        "$ref": "#/definitions/SyncJobWorker",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "files_new",
                "error_io_files_skipped",
                "policy_name",
                "target_directories_unlinked",
                "network_bytes_to_source",
                "workers",
                "hash_exceptions_fixed",
                "failed_chunks",
                "dirs_moved",
                "fifos_replicated",
                "source_directories_linked",
                "target_directories_linked",
                "dead_node",
                "source_bytes_recovered",
                "retransmitted_files",
                "lins_total",
                "new_files_replicated",
                "dirs_changed",
                "total_phases",
                "files_unlinked",
                "sockets_replicated",
                "source_directories_visited",
                "bytes_transferred",
                "regular_files_replicated",
                "file_data_bytes",
                "target_directories_deleted",
                "hash_exceptions_found",
                "sparse_data_bytes",
                "phases",
                "errors",
                "resynced_lins",
                "bytes_recoverable",
                "state",
                "block_specs_replicated",
                "sync_type",
                "corrected_lins",
                "action",
                "target_files_unlinked",
                "total_data_bytes",
                "symlinks_replicated",
                "source_files_unlinked",
                "total_chunks",
                "files_with_ads_replicated",
                "target_files_deleted",
                "dirs_new",
                "files_selected",
                "num_retransmitted_files",
                "target_snapshots",
                "error_net_files_skipped",
                "unchanged_data_bytes",
                "target_bytes_recovered",
                "user_conflict_files_skipped",
                "target_files_linked",
                "files_transferred",
                "policy_action",
                "running_chunks",
                "network_bytes_to_target",
                "error",
                "directories_replicated",
                "total_network_bytes",
                "source_directories_deleted",
                "target_directories_created",
                "id",
                "flipped_lins",
                "char_specs_replicated",
                "updated_files_replicated",
                "source_directories_unlinked",
                "ads_streams_replicated",
                "total_files",
                "source_files_linked",
                "warnings",
                "source_directories_created",
                "hard_links_replicated",
                "succeeded_chunks",
                "files_changed",
                "retry",
                "error_checksum_files_skipped",
                "dirs_deleted",
                "files_linked",
                "up_to_date_files_skipped",
                "source_files_deleted",
                "policy_id"
            ],
            "type": "object"
        },
        "SyncJobPhase": {
            "properties": {
                "end_time": {
                    "description": "The time the job ended this phase.",
                    "type": "integer"
                },
                "phase": {
                    "description": "The phase that the job was in.",
                    "type": "string"
                },
                "start_time": {
                    "description": "The time the job began this phase.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SyncJobPolicy": {
            "properties": {
                "action": {
                    "description": "If 'copy', source files will be copied to the target cluster.  If 'sync', the target directory will be made an image of the source directory:  Files and directories that have been deleted on the source, have been moved within the target directory, or no longer match the selection criteria will be deleted from the target directory.",
                    "enum": [
                        "copy",
                        "sync"
                    ],
                    "type": "string"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/SyncJobPolicyFileMatchingPattern",
                    "description": "A file matching pattern, organized as an OR'ed set of AND'ed file criteria, for example ((a AND b) OR (x AND y)) used to define a set of files with specific properties.  Policies of type 'sync' cannot use 'path' or time criteria in their matching patterns, but policies of type 'copy' can use all listed criteria."
                },
                "name": {
                    "description": "User-assigned name of this sync policy.",
                    "type": "string"
                },
                "source_exclude_directories": {
                    "description": "Directories that will be excluded from the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_include_directories": {
                    "description": "Directories that will be included in the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_root_path": {
                    "description": "The root directory on the source cluster the files will be synced from.  Modifying this field will result in a full synchronization of all data.",
                    "type": "string"
                },
                "target_host": {
                    "description": "Hostname or IP address of sync target cluster.  Modifying the target cluster host can result in the policy being unrunnable if the new target does not match the current target association.",
                    "type": "string"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SyncJobPolicyFileMatchingPattern": {
            "properties": {
                "or_criteria": {
                    "description": "An array containing objects with \"and_criteria\" properties, each set of and_criteria will be logically OR'ed together to create the full file matching pattern.",
                    "items": {
                        "$ref": "#/definitions/SyncJobPolicyFileMatchingPatternOrCriteriaItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SyncJobPolicyFileMatchingPatternOrCriteriaItem": {
            "properties": {
                "and_criteria": {
                    "description": "An array containing individual file criterion objects each describing one criterion.  These are logically AND'ed together to form a set of criteria.",
                    "items": {
                        "$ref": "#/definitions/SyncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem",
                        "description": "An object describing one criterion for finding a matching file, for example \"size is greater than or equal to 10KB\". Note: For time types (accessed_*, birth_*, and changed_*), operator is not required (it is implicitly ==).  For the value, you can use a relative date and time, such as \"two weeks ago\", or specific date and time, such as \"January 1, 2012.\"  Time settings are based on a 24-hour clock."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SyncJobPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem": {
            "properties": {
                "attribute_exists": {
                    "description": "For \"custom_attribute\" type criteria.  The file will match as long as the attribute named by \"field\" exists.  Default is true.",
                    "type": "boolean"
                },
                "case_sensitive": {
                    "description": "If true, the value comparison will be case sensitive.  Default is true.",
                    "type": "boolean"
                },
                "field": {
                    "description": "The name of the file attribute to match on (only required if this is a custom_attribute type criterion).  Default is an empty string \"\".",
                    "type": "string"
                },
                "operator": {
                    "description": "How to compare the specified attribute of each file to the specified value.",
                    "enum": [
                        "==",
                        "!=",
                        ">",
                        ">=",
                        "<",
                        "<=",
                        "!"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "The type of this criterion, that is, which file attribute to match on.",
                    "enum": [
                        "name",
                        "path",
                        "accessed_time",
                        "accessed_before",
                        "accessed_after",
                        "birth_time",
                        "birth_before",
                        "birth_after",
                        "changed_time",
                        "changed_before",
                        "changed_after",
                        "size",
                        "file_type",
                        "posix_regex_name",
                        "user_name",
                        "user_id",
                        "group_name",
                        "group_id",
                        "no_user",
                        "no_group"
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "The value to compare the specified attribute of each file to.",
                    "type": "string"
                },
                "whole_word": {
                    "description": "If true, the attribute must match the entire word.  Default is true.",
                    "type": "boolean"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "SyncJobWorker": {
            "properties": {
                "connected": {
                    "description": "Whether there is a connection between the source and target.",
                    "type": "boolean"
                },
                "last_split": {
                    "description": "The last time a network split occurred.",
                    "type": "integer"
                },
                "last_work": {
                    "description": "The last time the worker performed work.",
                    "type": "integer"
                },
                "lin": {
                    "description": "The LIN being worked on.",
                    "type": "integer"
                },
                "process_id": {
                    "description": "The process ID of the worker.",
                    "type": "integer"
                },
                "source_host": {
                    "description": "The source host for this worker.",
                    "type": "string"
                },
                "target_host": {
                    "description": "The target host for this worker.",
                    "type": "string"
                },
                "worker_id": {
                    "description": "The ID of the worker.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SyncJobs": {
            "properties": {
                "jobs": {
                    "items": {
                        "$ref": "#/definitions/SyncJobExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SyncJobsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncJobs"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SyncPolicies": {
            "properties": {
                "policies": {
                    "items": {
                        "$ref": "#/definitions/SyncPolicyExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SyncPoliciesExtended": {
            "properties": {
                "policies": {
                    "items": {
                        "$ref": "#/definitions/SyncPolicyExtendedExtended",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SyncPolicy": {
            "properties": {
                "action": {
                    "description": "If 'copy', source files will be copied to the target cluster.  If 'sync', the target directory will be made an image of the source directory:  Files and directories that have been deleted on the source, have been moved within the target directory, or no longer match the selection criteria will be deleted from the target directory.",
                    "enum": [
                        "copy",
                        "sync"
                    ],
                    "type": "string"
                },
                "burst_mode": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable UDP-based data transfer.",
                    "type": "boolean"
                },
                "changelist": {
                    "description": "If true, retain previous source snapshot and incremental repstate, both of which are required for changelist creation.",
                    "type": "boolean"
                },
                "check_integrity": {
                    "description": "If true, the sync target performs cyclic redundancy checks (CRC) on the data as it is received.",
                    "type": "boolean"
                },
                "conflicted": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  If true, the most recent run of this policy encountered an error and this policy will not start any more scheduled jobs until this field is manually set back to 'false'.",
                    "enum": [
                        false
                    ],
                    "type": "boolean"
                },
                "description": {
                    "description": "User-assigned description of this sync policy.",
                    "type": "string"
                },
                "disable_file_split": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  If true, the 7.2+ file splitting capability will be disabled.",
                    "type": "boolean"
                },
                "disable_fofb": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable sync failover/failback.",
                    "type": "boolean"
                },
                "disable_stf": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable the 6.5+ STF based data transfer and uses only treewalk.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "If true, jobs will be automatically run based on this policy, according to its schedule.",
                    "type": "boolean"
                },
                "expected_dataloss": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Continue sending files even with the corrupted filesystem.",
                    "type": "boolean"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/SyncJobPolicyFileMatchingPattern",
                    "description": "A file matching pattern, organized as an OR'ed set of AND'ed file criteria, for example ((a AND b) OR (x AND y)) used to define a set of files with specific properties.  Policies of type 'sync' cannot use 'path' or time criteria in their matching patterns, but policies of type 'copy' can use all listed criteria."
                },
                "force_interface": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Determines whether data is sent only through the subnet and pool specified in the \"source_network\" field. This option can be useful if there are multiple interfaces for the given source subnet.  If you enable this option, the net.inet.ip.choose_ifa_by_ipsrc sysctl should be set.",
                    "type": "boolean"
                },
                "log_level": {
                    "description": "Severity an event must reach before it is logged.",
                    "enum": [
                        "fatal",
                        "error",
                        "notice",
                        "info",
                        "copy",
                        "debug",
                        "trace"
                    ],
                    "type": "string"
                },
                "log_removed_files": {
                    "description": "If true, the system will log any files or directories that are deleted due to a sync.",
                    "type": "boolean"
                },
                "name": {
                    "description": "User-assigned name of this sync policy.",
                    "type": "string"
                },
                "password": {
                    "description": "The password for the target cluster.  This field is not readable.",
                    "type": "string"
                },
                "report_max_age": {
                    "description": "Length of time (in seconds) a policy report will be stored.",
                    "minimum": 0,
                    "type": "integer"
                },
                "report_max_count": {
                    "description": "Maximum number of policy reports that will be stored on the system.",
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer"
                },
                "restrict_target_network": {
                    "description": "If you specify true, and you specify a SmartConnect zone in the \"target_host\" field, replication policies will connect only to nodes in the specified SmartConnect zone.  If you specify false, replication policies are not restricted to specific nodes on the target cluster.",
                    "type": "boolean"
                },
                "schedule": {
                    "description": "The schedule on which new jobs will be run for this policy.",
                    "type": "string"
                },
                "skip_lookup": {
                    "description": "Skip DNS lookup of target IPs.",
                    "type": "boolean"
                },
                "source_exclude_directories": {
                    "description": "Directories that will be excluded from the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_include_directories": {
                    "description": "Directories that will be included in the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_network": {
                    "$ref": "#/definitions/SyncPolicySourceNetwork",
                    "description": "Restricts replication policies on the local cluster to running on the specified subnet and pool."
                },
                "source_root_path": {
                    "description": "The root directory on the source cluster the files will be synced from.  Modifying this field will result in a full synchronization of all data.",
                    "type": "string"
                },
                "source_snapshot_archive": {
                    "description": "If true, archival snapshots of the source data will be taken on the source cluster before a sync.",
                    "type": "boolean"
                },
                "source_snapshot_expiration": {
                    "description": "The length of time in seconds to keep snapshots on the source cluster.",
                    "minimum": 0,
                    "type": "integer"
                },
                "source_snapshot_pattern": {
                    "description": "The name pattern for snapshots taken on the source cluster before a sync.",
                    "type": "string"
                },
                "target_compare_initial_sync": {
                    "description": "If true, the target creates diffs against the original sync.",
                    "type": "boolean"
                },
                "target_detect_modifications": {
                    "description": "If true, target cluster will detect if files have been changed on the target by legacy tree walk syncs.",
                    "type": "boolean"
                },
                "target_host": {
                    "description": "Hostname or IP address of sync target cluster.  Modifying the target cluster host can result in the policy being unrunnable if the new target does not match the current target association.",
                    "type": "string"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                },
                "target_snapshot_alias": {
                    "description": "The alias of the snapshot taken on the target cluster after the sync completes. A value of @DEFAULT will reset this field to the default creation value.",
                    "type": "string"
                },
                "target_snapshot_archive": {
                    "description": "If true, archival snapshots of the target data will be taken on the target cluster after successful sync completions.",
                    "type": "boolean"
                },
                "target_snapshot_expiration": {
                    "description": "The length of time in seconds to keep snapshots on the target cluster.",
                    "minimum": 0,
                    "type": "integer"
                },
                "target_snapshot_pattern": {
                    "description": "The name pattern for snapshots taken on the target cluster after the sync completes.  A value of @DEFAULT will reset this field to the default creation value.",
                    "type": "string"
                },
                "workers_per_node": {
                    "description": "The number of worker threads on a node performing a sync.",
                    "maximum": 20,
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SyncPolicyCreateParams": {
            "properties": {
                "action": {
                    "description": "If 'copy', source files will be copied to the target cluster.  If 'sync', the target directory will be made an image of the source directory:  Files and directories that have been deleted on the source, have been moved within the target directory, or no longer match the selection criteria will be deleted from the target directory.",
                    "enum": [
                        "copy",
                        "sync"
                    ],
                    "type": "string"
                },
                "burst_mode": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable UDP-based data transfer.",
                    "type": "boolean"
                },
                "changelist": {
                    "description": "If true, retain previous source snapshot and incremental repstate, both of which are required for changelist creation.",
                    "type": "boolean"
                },
                "check_integrity": {
                    "description": "If true, the sync target performs cyclic redundancy checks (CRC) on the data as it is received.",
                    "type": "boolean"
                },
                "description": {
                    "description": "User-assigned description of this sync policy.",
                    "type": "string"
                },
                "disable_file_split": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  If true, the 7.2+ file splitting capability will be disabled.",
                    "type": "boolean"
                },
                "disable_fofb": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable sync failover/failback.",
                    "type": "boolean"
                },
                "disable_stf": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable the 6.5+ STF based data transfer and uses only treewalk.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "If true, jobs will be automatically run based on this policy, according to its schedule.",
                    "type": "boolean"
                },
                "expected_dataloss": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Continue sending files even with the corrupted filesystem.",
                    "type": "boolean"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/SyncJobPolicyFileMatchingPattern",
                    "description": "A file matching pattern, organized as an OR'ed set of AND'ed file criteria, for example ((a AND b) OR (x AND y)) used to define a set of files with specific properties.  Policies of type 'sync' cannot use 'path' or time criteria in their matching patterns, but policies of type 'copy' can use all listed criteria."
                },
                "force_interface": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Determines whether data is sent only through the subnet and pool specified in the \"source_network\" field. This option can be useful if there are multiple interfaces for the given source subnet.  If you enable this option, the net.inet.ip.choose_ifa_by_ipsrc sysctl should be set.",
                    "type": "boolean"
                },
                "log_level": {
                    "description": "Severity an event must reach before it is logged.",
                    "enum": [
                        "fatal",
                        "error",
                        "notice",
                        "info",
                        "copy",
                        "debug",
                        "trace"
                    ],
                    "type": "string"
                },
                "log_removed_files": {
                    "description": "If true, the system will log any files or directories that are deleted due to a sync.",
                    "type": "boolean"
                },
                "name": {
                    "description": "User-assigned name of this sync policy.",
                    "type": "string"
                },
                "password": {
                    "description": "The password for the target cluster.  This field is not readable.",
                    "type": "string"
                },
                "report_max_age": {
                    "description": "Length of time (in seconds) a policy report will be stored.",
                    "minimum": 0,
                    "type": "integer"
                },
                "report_max_count": {
                    "description": "Maximum number of policy reports that will be stored on the system.",
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer"
                },
                "restrict_target_network": {
                    "description": "If you specify true, and you specify a SmartConnect zone in the \"target_host\" field, replication policies will connect only to nodes in the specified SmartConnect zone.  If you specify false, replication policies are not restricted to specific nodes on the target cluster.",
                    "type": "boolean"
                },
                "schedule": {
                    "description": "The schedule on which new jobs will be run for this policy.",
                    "type": "string"
                },
                "skip_lookup": {
                    "description": "Skip DNS lookup of target IPs.",
                    "type": "boolean"
                },
                "source_exclude_directories": {
                    "description": "Directories that will be excluded from the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_include_directories": {
                    "description": "Directories that will be included in the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_network": {
                    "$ref": "#/definitions/SyncPolicySourceNetwork",
                    "description": "Restricts replication policies on the local cluster to running on the specified subnet and pool."
                },
                "source_root_path": {
                    "description": "The root directory on the source cluster the files will be synced from.  Modifying this field will result in a full synchronization of all data.",
                    "type": "string"
                },
                "source_snapshot_archive": {
                    "description": "If true, archival snapshots of the source data will be taken on the source cluster before a sync.",
                    "type": "boolean"
                },
                "source_snapshot_expiration": {
                    "description": "The length of time in seconds to keep snapshots on the source cluster.",
                    "minimum": 0,
                    "type": "integer"
                },
                "source_snapshot_pattern": {
                    "description": "The name pattern for snapshots taken on the source cluster before a sync.",
                    "type": "string"
                },
                "target_compare_initial_sync": {
                    "description": "If true, the target creates diffs against the original sync.",
                    "type": "boolean"
                },
                "target_detect_modifications": {
                    "description": "If true, target cluster will detect if files have been changed on the target by legacy tree walk syncs.",
                    "type": "boolean"
                },
                "target_host": {
                    "description": "Hostname or IP address of sync target cluster.  Modifying the target cluster host can result in the policy being unrunnable if the new target does not match the current target association.",
                    "type": "string"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                },
                "target_snapshot_alias": {
                    "description": "The alias of the snapshot taken on the target cluster after the sync completes. A value of @DEFAULT will reset this field to the default creation value.",
                    "type": "string"
                },
                "target_snapshot_archive": {
                    "description": "If true, archival snapshots of the target data will be taken on the target cluster after successful sync completions.",
                    "type": "boolean"
                },
                "target_snapshot_expiration": {
                    "description": "The length of time in seconds to keep snapshots on the target cluster.",
                    "minimum": 0,
                    "type": "integer"
                },
                "target_snapshot_pattern": {
                    "description": "The name pattern for snapshots taken on the target cluster after the sync completes.  A value of @DEFAULT will reset this field to the default creation value.",
                    "type": "string"
                },
                "workers_per_node": {
                    "description": "The number of worker threads on a node performing a sync.",
                    "maximum": 20,
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "required": [
                "source_root_path",
                "target_host",
                "name",
                "target_path",
                "action"
            ],
            "type": "object"
        },
        "SyncPolicyExtended": {
            "properties": {
                "action": {
                    "description": "If 'copy', source files will be copied to the target cluster.  If 'sync', the target directory will be made an image of the source directory:  Files and directories that have been deleted on the source, have been moved within the target directory, or no longer match the selection criteria will be deleted from the target directory.",
                    "enum": [
                        "copy",
                        "sync"
                    ],
                    "type": "string"
                },
                "burst_mode": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable UDP-based data transfer.",
                    "type": "boolean"
                },
                "changelist": {
                    "description": "If true, retain previous source snapshot and incremental repstate, both of which are required for changelist creation.",
                    "type": "boolean"
                },
                "check_integrity": {
                    "description": "If true, the sync target performs cyclic redundancy checks (CRC) on the data as it is received.",
                    "type": "boolean"
                },
                "conflicted": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  If true, the most recent run of this policy encountered an error and this policy will not start any more scheduled jobs until this field is manually set back to 'false'.",
                    "type": "boolean"
                },
                "description": {
                    "description": "User-assigned description of this sync policy.",
                    "type": "string"
                },
                "disable_file_split": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  If true, the 7.2+ file splitting capability will be disabled.",
                    "type": "boolean"
                },
                "disable_fofb": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable sync failover/failback.",
                    "type": "boolean"
                },
                "disable_stf": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable the 6.5+ STF based data transfer and uses only treewalk.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "If true, jobs will be automatically run based on this policy, according to its schedule.",
                    "type": "boolean"
                },
                "expected_dataloss": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Continue sending files even with the corrupted filesystem.",
                    "type": "boolean"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/SyncJobPolicyFileMatchingPattern",
                    "description": "A file matching pattern, organized as an OR'ed set of AND'ed file criteria, for example ((a AND b) OR (x AND y)) used to define a set of files with specific properties.  Policies of type 'sync' cannot use 'path' or time criteria in their matching patterns, but policies of type 'copy' can use all listed criteria."
                },
                "force_interface": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Determines whether data is sent only through the subnet and pool specified in the \"source_network\" field. This option can be useful if there are multiple interfaces for the given source subnet.  If you enable this option, the net.inet.ip.choose_ifa_by_ipsrc sysctl should be set.",
                    "type": "boolean"
                },
                "has_sync_state": {
                    "description": "This field is false if the policy is in its initial sync state and true otherwise.  Setting this field to false will reset the policy's sync state.",
                    "type": "boolean"
                },
                "id": {
                    "description": "The system ID given to this sync policy.",
                    "type": "string"
                },
                "last_job_state": {
                    "description": "This is the state of the most recent job for this policy.",
                    "type": "string"
                },
                "last_started": {
                    "description": "The most recent time a job was started for this policy.  Value is null if the policy has never been run.",
                    "minimum": 0,
                    "type": "integer"
                },
                "last_success": {
                    "description": "Timestamp of last known successfully completed syncronization.  Value is null if the policy has never completed successfully.",
                    "minimum": 0,
                    "type": "integer"
                },
                "log_level": {
                    "description": "Severity an event must reach before it is logged.",
                    "enum": [
                        "fatal",
                        "error",
                        "notice",
                        "info",
                        "copy",
                        "debug",
                        "trace"
                    ],
                    "type": "string"
                },
                "log_removed_files": {
                    "description": "If true, the system will log any files or directories that are deleted due to a sync.",
                    "type": "boolean"
                },
                "name": {
                    "description": "User-assigned name of this sync policy.",
                    "type": "string"
                },
                "next_run": {
                    "description": "This is the next time a job is scheduled to run for this policy in Unix epoch seconds.  This field is null if the job is not scheduled.",
                    "type": "integer"
                },
                "password_set": {
                    "description": "Indicates if a password is set for accessing the target cluster. Password value is not shown with GET.",
                    "type": "boolean"
                },
                "report_max_age": {
                    "description": "Length of time (in seconds) a policy report will be stored.",
                    "minimum": 0,
                    "type": "integer"
                },
                "report_max_count": {
                    "description": "Maximum number of policy reports that will be stored on the system.",
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer"
                },
                "restrict_target_network": {
                    "description": "If you specify true, and you specify a SmartConnect zone in the \"target_host\" field, replication policies will connect only to nodes in the specified SmartConnect zone.  If you specify false, replication policies are not restricted to specific nodes on the target cluster.",
                    "type": "boolean"
                },
                "schedule": {
                    "description": "The schedule on which new jobs will be run for this policy.",
                    "type": "string"
                },
                "source_exclude_directories": {
                    "description": "Directories that will be excluded from the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_include_directories": {
                    "description": "Directories that will be included in the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_network": {
                    "$ref": "#/definitions/SyncPolicySourceNetwork",
                    "description": "Restricts replication policies on the local cluster to running on the specified subnet and pool."
                },
                "source_root_path": {
                    "description": "The root directory on the source cluster the files will be synced from.  Modifying this field will result in a full synchronization of all data.",
                    "type": "string"
                },
                "source_snapshot_archive": {
                    "description": "If true, archival snapshots of the source data will be taken on the source cluster before a sync.",
                    "type": "boolean"
                },
                "source_snapshot_expiration": {
                    "description": "The length of time in seconds to keep snapshots on the source cluster.",
                    "minimum": 0,
                    "type": "integer"
                },
                "source_snapshot_pattern": {
                    "description": "The name pattern for snapshots taken on the source cluster before a sync.",
                    "type": "string"
                },
                "target_compare_initial_sync": {
                    "description": "If true, the target creates diffs against the original sync.",
                    "type": "boolean"
                },
                "target_detect_modifications": {
                    "description": "If true, target cluster will detect if files have been changed on the target by legacy tree walk syncs.",
                    "type": "boolean"
                },
                "target_host": {
                    "description": "Hostname or IP address of sync target cluster.  Modifying the target cluster host can result in the policy being unrunnable if the new target does not match the current target association.",
                    "type": "string"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                },
                "target_snapshot_alias": {
                    "description": "The alias of the snapshot taken on the target cluster after the sync completes. A value of @DEFAULT will reset this field to the default creation value.",
                    "type": "string"
                },
                "target_snapshot_archive": {
                    "description": "If true, archival snapshots of the target data will be taken on the target cluster after successful sync completions.",
                    "type": "boolean"
                },
                "target_snapshot_expiration": {
                    "description": "The length of time in seconds to keep snapshots on the target cluster.",
                    "minimum": 0,
                    "type": "integer"
                },
                "target_snapshot_pattern": {
                    "description": "The name pattern for snapshots taken on the target cluster after the sync completes.  A value of @DEFAULT will reset this field to the default creation value.",
                    "type": "string"
                },
                "workers_per_node": {
                    "description": "The number of worker threads on a node performing a sync.",
                    "maximum": 20,
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "required": [
                "disable_stf",
                "source_root_path",
                "changelist",
                "disable_fofb",
                "restrict_target_network",
                "disable_file_split",
                "id",
                "source_snapshot_archive",
                "target_host",
                "log_removed_files",
                "log_level",
                "report_max_count",
                "force_interface",
                "workers_per_node",
                "target_detect_modifications",
                "target_compare_initial_sync",
                "target_snapshot_archive",
                "report_max_age",
                "description",
                "schedule",
                "password_set",
                "source_snapshot_expiration",
                "has_sync_state",
                "target_snapshot_alias",
                "target_snapshot_expiration",
                "name",
                "expected_dataloss",
                "last_job_state",
                "check_integrity",
                "enabled",
                "target_path",
                "file_matching_pattern",
                "target_snapshot_pattern",
                "burst_mode",
                "action",
                "source_snapshot_pattern",
                "conflicted",
                "source_include_directories",
                "source_exclude_directories"
            ],
            "type": "object"
        },
        "SyncPolicyExtendedExtended": {
            "properties": {
                "action": {
                    "description": "If 'copy', source files will be copied to the target cluster.  If 'sync', the target directory will be made an image of the source directory:  Files and directories that have been deleted on the source, have been moved within the target directory, or no longer match the selection criteria will be deleted from the target directory.",
                    "enum": [
                        "copy",
                        "sync"
                    ],
                    "type": "string"
                },
                "burst_mode": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable UDP-based data transfer.",
                    "type": "boolean"
                },
                "changelist": {
                    "description": "If true, retain previous source snapshot and incremental repstate, both of which are required for changelist creation.",
                    "type": "boolean"
                },
                "check_integrity": {
                    "description": "If true, the sync target performs cyclic redundancy checks (CRC) on the data as it is received.",
                    "type": "boolean"
                },
                "conflicted": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  If true, the most recent run of this policy encountered an error and this policy will not start any more scheduled jobs until this field is manually set back to 'false'.",
                    "type": "boolean"
                },
                "description": {
                    "description": "User-assigned description of this sync policy.",
                    "type": "string"
                },
                "disable_file_split": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  If true, the 7.2+ file splitting capability will be disabled.",
                    "type": "boolean"
                },
                "disable_fofb": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable sync failover/failback.",
                    "type": "boolean"
                },
                "disable_stf": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable the 6.5+ STF based data transfer and uses only treewalk.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "If true, jobs will be automatically run based on this policy, according to its schedule.",
                    "type": "boolean"
                },
                "expected_dataloss": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Continue sending files even with the corrupted filesystem.",
                    "type": "boolean"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/SyncJobPolicyFileMatchingPattern",
                    "description": "A file matching pattern, organized as an OR'ed set of AND'ed file criteria, for example ((a AND b) OR (x AND y)) used to define a set of files with specific properties.  Policies of type 'sync' cannot use 'path' or time criteria in their matching patterns, but policies of type 'copy' can use all listed criteria."
                },
                "force_interface": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Determines whether data is sent only through the subnet and pool specified in the \"source_network\" field. This option can be useful if there are multiple interfaces for the given source subnet.  If you enable this option, the net.inet.ip.choose_ifa_by_ipsrc sysctl should be set.",
                    "type": "boolean"
                },
                "has_sync_state": {
                    "description": "This field is false if the policy is in its initial sync state and true otherwise.  Setting this field to false will reset the policy's sync state.",
                    "type": "boolean"
                },
                "id": {
                    "description": "The system ID given to this sync policy.",
                    "type": "string"
                },
                "last_job_state": {
                    "description": "This is the state of the most recent job for this policy.",
                    "type": "string"
                },
                "last_started": {
                    "description": "The most recent time a job was started for this policy.  Value is null if the policy has never been run.",
                    "minimum": 0,
                    "type": "integer"
                },
                "last_success": {
                    "description": "Timestamp of last known successfully completed syncronization.  Value is null if the policy has never completed successfully.",
                    "minimum": 0,
                    "type": "integer"
                },
                "log_level": {
                    "description": "Severity an event must reach before it is logged.",
                    "enum": [
                        "fatal",
                        "error",
                        "notice",
                        "info",
                        "copy",
                        "debug",
                        "trace"
                    ],
                    "type": "string"
                },
                "log_removed_files": {
                    "description": "If true, the system will log any files or directories that are deleted due to a sync.",
                    "type": "boolean"
                },
                "name": {
                    "description": "User-assigned name of this sync policy.",
                    "type": "string"
                },
                "next_run": {
                    "description": "This is the next time a job is scheduled to run for this policy in Unix epoch seconds.  This field is null if the job is not scheduled.",
                    "type": "integer"
                },
                "password_set": {
                    "description": "Indicates if a password is set for accessing the target cluster. Password value is not shown with GET.",
                    "type": "boolean"
                },
                "report_max_age": {
                    "description": "Length of time (in seconds) a policy report will be stored.",
                    "minimum": 0,
                    "type": "integer"
                },
                "report_max_count": {
                    "description": "Maximum number of policy reports that will be stored on the system.",
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer"
                },
                "restrict_target_network": {
                    "description": "If you specify true, and you specify a SmartConnect zone in the \"target_host\" field, replication policies will connect only to nodes in the specified SmartConnect zone.  If you specify false, replication policies are not restricted to specific nodes on the target cluster.",
                    "type": "boolean"
                },
                "schedule": {
                    "description": "The schedule on which new jobs will be run for this policy.",
                    "type": "string"
                },
                "source_exclude_directories": {
                    "description": "Directories that will be excluded from the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_include_directories": {
                    "description": "Directories that will be included in the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_network": {
                    "$ref": "#/definitions/SyncPolicySourceNetwork",
                    "description": "Restricts replication policies on the local cluster to running on the specified subnet and pool."
                },
                "source_root_path": {
                    "description": "The root directory on the source cluster the files will be synced from.  Modifying this field will result in a full synchronization of all data.",
                    "type": "string"
                },
                "source_snapshot_archive": {
                    "description": "If true, archival snapshots of the source data will be taken on the source cluster before a sync.",
                    "type": "boolean"
                },
                "source_snapshot_expiration": {
                    "description": "The length of time in seconds to keep snapshots on the source cluster.",
                    "minimum": 0,
                    "type": "integer"
                },
                "source_snapshot_pattern": {
                    "description": "The name pattern for snapshots taken on the source cluster before a sync.",
                    "type": "string"
                },
                "target_compare_initial_sync": {
                    "description": "If true, the target creates diffs against the original sync.",
                    "type": "boolean"
                },
                "target_detect_modifications": {
                    "description": "If true, target cluster will detect if files have been changed on the target by legacy tree walk syncs.",
                    "type": "boolean"
                },
                "target_host": {
                    "description": "Hostname or IP address of sync target cluster.  Modifying the target cluster host can result in the policy being unrunnable if the new target does not match the current target association.",
                    "type": "string"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                },
                "target_snapshot_alias": {
                    "description": "The alias of the snapshot taken on the target cluster after the sync completes. A value of @DEFAULT will reset this field to the default creation value.",
                    "type": "string"
                },
                "target_snapshot_archive": {
                    "description": "If true, archival snapshots of the target data will be taken on the target cluster after successful sync completions.",
                    "type": "boolean"
                },
                "target_snapshot_expiration": {
                    "description": "The length of time in seconds to keep snapshots on the target cluster.",
                    "minimum": 0,
                    "type": "integer"
                },
                "target_snapshot_pattern": {
                    "description": "The name pattern for snapshots taken on the target cluster after the sync completes.  A value of @DEFAULT will reset this field to the default creation value.",
                    "type": "string"
                },
                "workers_per_node": {
                    "description": "The number of worker threads on a node performing a sync.",
                    "maximum": 20,
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "required": [
                "source_root_path",
                "id",
                "target_host",
                "schedule",
                "name",
                "enabled",
                "target_path"
            ],
            "type": "object"
        },
        "SyncPolicySourceNetwork": {
            "properties": {
                "pool": {
                    "description": "The pool to restrict replication policies to.",
                    "type": "string"
                },
                "subnet": {
                    "description": "The subnet to restrict replication policies to.",
                    "type": "string"
                }
            },
            "required": [
                "subnet",
                "pool"
            ],
            "type": "object"
        },
        "SyncReport": {
            "properties": {
                "action": {
                    "description": "The action to be taken by this job.",
                    "type": "string"
                },
                "ads_streams_replicated": {
                    "description": "The number of ads streams replicated by this job.",
                    "type": "integer"
                },
                "block_specs_replicated": {
                    "description": "The number of block specs replicated by this job.",
                    "type": "integer"
                },
                "bytes_recoverable": {
                    "description": "The number of bytes recoverable by this job.",
                    "type": "integer"
                },
                "bytes_transferred": {
                    "description": "The number of bytes that have been transferred by this job.",
                    "type": "integer"
                },
                "char_specs_replicated": {
                    "description": "The number of char specs replicated by this job.",
                    "type": "integer"
                },
                "corrected_lins": {
                    "description": "The number of LINs corrected by this job.",
                    "type": "integer"
                },
                "dead_node": {
                    "description": "This field is true if the node running this job is dead.",
                    "type": "boolean"
                },
                "directories_replicated": {
                    "description": "The number of directories replicated.",
                    "type": "integer"
                },
                "dirs_changed": {
                    "description": "The number of directories changed by this job.",
                    "type": "integer"
                },
                "dirs_deleted": {
                    "description": "The number of directories deleted by this job.",
                    "type": "integer"
                },
                "dirs_moved": {
                    "description": "The number of directories moved by this job.",
                    "type": "integer"
                },
                "dirs_new": {
                    "description": "The number of directories created by this job.",
                    "type": "integer"
                },
                "duration": {
                    "description": "The amount of time in seconds between when the job was started and when it ended.  If the job has not yet ended, this is the amount of time since the job started.  This field is null if the job has not yet started.",
                    "type": "integer"
                },
                "end_time": {
                    "description": "The time the job ended in unix epoch seconds. The field is null if the job hasn't ended.",
                    "type": "integer"
                },
                "error": {
                    "description": "The primary error message for this job.",
                    "type": "string"
                },
                "error_checksum_files_skipped": {
                    "description": "The number of files with checksum errors skipped by this job.",
                    "type": "integer"
                },
                "error_io_files_skipped": {
                    "description": "The number of files with io errors skipped by this job.",
                    "type": "integer"
                },
                "error_net_files_skipped": {
                    "description": "The number of files with network errors skipped by this job.",
                    "type": "integer"
                },
                "errors": {
                    "description": "A list of error messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "failed_chunks": {
                    "description": "Tyhe number of data chunks that failed transmission.",
                    "type": "integer"
                },
                "fifos_replicated": {
                    "description": "The number of fifos replicated by this job.",
                    "type": "integer"
                },
                "file_data_bytes": {
                    "description": "The number of bytes tranferred that belong to files.",
                    "type": "integer"
                },
                "files_changed": {
                    "description": "The number of files changed by this job.",
                    "type": "integer"
                },
                "files_linked": {
                    "description": "The number of files linked by this job.",
                    "type": "integer"
                },
                "files_new": {
                    "description": "The number of files created by this job.",
                    "type": "integer"
                },
                "files_selected": {
                    "description": "The number of files selected by this job.",
                    "type": "integer"
                },
                "files_transferred": {
                    "description": "The number of files transfered by this job.",
                    "type": "integer"
                },
                "files_unlinked": {
                    "description": "The number of files unlinked by this job.",
                    "type": "integer"
                },
                "files_with_ads_replicated": {
                    "description": "The number of files with ads replicated by this job.",
                    "type": "integer"
                },
                "flipped_lins": {
                    "description": "The number of LINs flipped by this job.",
                    "type": "integer"
                },
                "hard_links_replicated": {
                    "description": "The number of hard links replicated by this job.",
                    "type": "integer"
                },
                "hash_exceptions_fixed": {
                    "description": "The number of hash exceptions fixed by this job.",
                    "type": "integer"
                },
                "hash_exceptions_found": {
                    "description": "The number of hash exceptions found by this job.",
                    "type": "integer"
                },
                "id": {
                    "description": "A unique identifier for this object.",
                    "type": "string"
                },
                "job_id": {
                    "description": "The ID of the job.",
                    "type": "integer"
                },
                "lins_total": {
                    "description": "The number of LINs tranferred by this job.",
                    "type": "integer"
                },
                "network_bytes_to_source": {
                    "description": "The total number of bytes sent to the source by this job.",
                    "type": "integer"
                },
                "network_bytes_to_target": {
                    "description": "The total number of bytes sent to the target by this job.",
                    "type": "integer"
                },
                "new_files_replicated": {
                    "description": "The number of new files replicated by this job.",
                    "type": "integer"
                },
                "num_retransmitted_files": {
                    "description": "The number of files that have been retransmitted by this job.",
                    "type": "integer"
                },
                "phases": {
                    "description": "Data for each phase of this job.",
                    "items": {
                        "$ref": "#/definitions/SyncJobPhase",
                        "description": ""
                    },
                    "type": "array"
                },
                "policy": {
                    "$ref": "#/definitions/SyncReportPolicy",
                    "description": ""
                },
                "policy_action": {
                    "description": "This is the action the policy is configured to perform.",
                    "enum": [
                        "copy",
                        "sync"
                    ],
                    "type": "string"
                },
                "policy_id": {
                    "description": "The ID of the policy.",
                    "type": "string"
                },
                "policy_name": {
                    "description": "The name of the policy.",
                    "type": "string"
                },
                "regular_files_replicated": {
                    "description": "The number of regular files replicated by this job.",
                    "type": "integer"
                },
                "resynced_lins": {
                    "description": "The number of LINs resynched by this job.",
                    "type": "integer"
                },
                "retransmitted_files": {
                    "description": "The files that have been retransmitted by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "retry": {
                    "description": "The number of times the job has been retried.",
                    "type": "integer"
                },
                "running_chunks": {
                    "description": "The number of data chunks currently being transmitted.",
                    "type": "integer"
                },
                "sockets_replicated": {
                    "description": "The number of sockets replicated by this job.",
                    "type": "integer"
                },
                "source_bytes_recovered": {
                    "description": "The number of bytes recovered on the source.",
                    "type": "integer"
                },
                "source_directories_created": {
                    "description": "The number of directories created on the source.",
                    "type": "integer"
                },
                "source_directories_deleted": {
                    "description": "The number of directories deleted on the source.",
                    "type": "integer"
                },
                "source_directories_linked": {
                    "description": "The number of directories linked on the source.",
                    "type": "integer"
                },
                "source_directories_unlinked": {
                    "description": "The number of directories unlinked on the source.",
                    "type": "integer"
                },
                "source_directories_visited": {
                    "description": "The number of directories visited on the source.",
                    "type": "integer"
                },
                "source_files_deleted": {
                    "description": "The number of files deleted on the source.",
                    "type": "integer"
                },
                "source_files_linked": {
                    "description": "The number of files linked on the source.",
                    "type": "integer"
                },
                "source_files_unlinked": {
                    "description": "The number of files unlinked on the source.",
                    "type": "integer"
                },
                "sparse_data_bytes": {
                    "description": "The number of sparse data bytes transferred by this job.",
                    "type": "integer"
                },
                "start_time": {
                    "description": "The time the job started in unix epoch seconds. The field is null if the job hasn't started.",
                    "type": "integer"
                },
                "state": {
                    "description": "The state of the job.",
                    "enum": [
                        "scheduled",
                        "running",
                        "paused",
                        "finished",
                        "failed",
                        "canceled",
                        "needs_attention",
                        "unknown"
                    ],
                    "type": "string"
                },
                "subreport_count": {
                    "description": "The number of subreports that are available for this job report.",
                    "type": "integer"
                },
                "succeeded_chunks": {
                    "description": "The number of data chunks that have been transmitted successfully.",
                    "type": "integer"
                },
                "symlinks_replicated": {
                    "description": "The number of symlinks replicated by this job.",
                    "type": "integer"
                },
                "sync_type": {
                    "description": "The type of sync being performed by this job.",
                    "enum": [
                        "invalid",
                        "legacy",
                        "initial",
                        "incremental",
                        "upgrade",
                        "fofb",
                        "domainmark"
                    ],
                    "type": "string"
                },
                "target_bytes_recovered": {
                    "description": "The number of bytes recovered on the target.",
                    "type": "integer"
                },
                "target_directories_created": {
                    "description": "The number of directories created on the target.",
                    "type": "integer"
                },
                "target_directories_deleted": {
                    "description": "The number of directories deleted on the target.",
                    "type": "integer"
                },
                "target_directories_linked": {
                    "description": "The number of directories linked on the target.",
                    "type": "integer"
                },
                "target_directories_unlinked": {
                    "description": "The number of directories unlinked on the target.",
                    "type": "integer"
                },
                "target_files_deleted": {
                    "description": "The number of files deleted on the target.",
                    "type": "integer"
                },
                "target_files_linked": {
                    "description": "The number of files linked on the target.",
                    "type": "integer"
                },
                "target_files_unlinked": {
                    "description": "The number of files unlinked on the target.",
                    "type": "integer"
                },
                "target_snapshots": {
                    "description": "The target snapshots created by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "total_chunks": {
                    "description": "The total number of data chunks transmitted by this job.",
                    "type": "integer"
                },
                "total_data_bytes": {
                    "description": "The total number of bytes transferred by this job.",
                    "type": "integer"
                },
                "total_files": {
                    "description": "The number of files affected by this job.",
                    "type": "integer"
                },
                "total_network_bytes": {
                    "description": "The total number of bytes sent over the network by this job.",
                    "type": "integer"
                },
                "total_phases": {
                    "description": "The total number of phases for this job.",
                    "type": "integer"
                },
                "unchanged_data_bytes": {
                    "description": "The number of bytes unchanged by this job.",
                    "type": "integer"
                },
                "up_to_date_files_skipped": {
                    "description": "The number of up-to-date files skipped by this job.",
                    "type": "integer"
                },
                "updated_files_replicated": {
                    "description": "The number of updated files replicated by this job.",
                    "type": "integer"
                },
                "user_conflict_files_skipped": {
                    "description": "The number of files with user conflicts skipped by this job.",
                    "type": "integer"
                },
                "warnings": {
                    "description": "A list of warning messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "files_new",
                "error_io_files_skipped",
                "policy_name",
                "target_directories_unlinked",
                "network_bytes_to_source",
                "hash_exceptions_fixed",
                "failed_chunks",
                "dirs_moved",
                "policy",
                "fifos_replicated",
                "source_directories_linked",
                "target_directories_linked",
                "dead_node",
                "source_bytes_recovered",
                "retransmitted_files",
                "lins_total",
                "new_files_replicated",
                "dirs_changed",
                "total_phases",
                "files_unlinked",
                "sockets_replicated",
                "source_directories_visited",
                "bytes_transferred",
                "regular_files_replicated",
                "file_data_bytes",
                "target_directories_deleted",
                "hash_exceptions_found",
                "sparse_data_bytes",
                "phases",
                "errors",
                "resynced_lins",
                "bytes_recoverable",
                "state",
                "block_specs_replicated",
                "sync_type",
                "corrected_lins",
                "action",
                "target_files_unlinked",
                "total_data_bytes",
                "symlinks_replicated",
                "source_files_unlinked",
                "total_chunks",
                "files_with_ads_replicated",
                "target_files_deleted",
                "dirs_new",
                "files_selected",
                "num_retransmitted_files",
                "target_snapshots",
                "error_net_files_skipped",
                "unchanged_data_bytes",
                "target_bytes_recovered",
                "user_conflict_files_skipped",
                "target_files_linked",
                "files_transferred",
                "policy_action",
                "running_chunks",
                "network_bytes_to_target",
                "error",
                "directories_replicated",
                "total_network_bytes",
                "source_directories_deleted",
                "target_directories_created",
                "id",
                "flipped_lins",
                "char_specs_replicated",
                "updated_files_replicated",
                "source_directories_unlinked",
                "ads_streams_replicated",
                "total_files",
                "source_files_linked",
                "warnings",
                "source_directories_created",
                "hard_links_replicated",
                "succeeded_chunks",
                "files_changed",
                "retry",
                "error_checksum_files_skipped",
                "subreport_count",
                "dirs_deleted",
                "files_linked",
                "up_to_date_files_skipped",
                "source_files_deleted",
                "policy_id"
            ],
            "type": "object"
        },
        "SyncReportPolicy": {
            "properties": {
                "action": {
                    "description": "If 'copy', source files will be copied to the target cluster.  If 'sync', the target directory will be made an image of the source directory:  Files and directories that have been deleted on the source, have been moved within the target directory, or no longer match the selection criteria will be deleted from the target directory.",
                    "type": "string"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/SyncJobPolicyFileMatchingPattern",
                    "description": "A file matching pattern, organized as an OR'ed set of AND'ed file criteria, for example ((a AND b) OR (x AND y)) used to define a set of files with specific properties.  Policies of type 'sync' cannot use 'path' or time criteria in their matching patterns, but policies of type 'copy' can use all listed criteria."
                },
                "name": {
                    "description": "User-assigned name of this sync policy.",
                    "type": "string"
                },
                "source_exclude_directories": {
                    "description": "Directories that will be excluded from the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_include_directories": {
                    "description": "Directories that will be included in the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_root_path": {
                    "description": "The root directory on the source cluster the files will be synced from.  Modifying this field will result in a full synchronization of all data.",
                    "type": "string"
                },
                "target_host": {
                    "description": "Hostname or IP address of sync target cluster.  Modifying the target cluster host can result in the policy being unrunnable if the new target does not match the current target association.",
                    "type": "string"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SyncReports": {
            "properties": {
                "reports": {
                    "items": {
                        "$ref": "#/definitions/SyncReport",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SyncReportsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncReports"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SyncReportsRotate": {
            "description": "Force rotation of reports.",
            "properties": {
                "message": {
                    "description": "A message about the status of the task.",
                    "type": "string"
                },
                "running": {
                    "description": "Whether this task is running or not.",
                    "type": "boolean"
                }
            },
            "required": [
                "message",
                "running"
            ],
            "type": "object"
        },
        "SyncRule": {
            "description": "A rule limiting the bandwidth, file operations, or cpu usage for all sync jobs on this cluster.",
            "properties": {
                "description": {
                    "description": "User-entered description of this performance rule.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Whether this performance rule is currently in effect during its specified intervals.",
                    "type": "boolean"
                },
                "limit": {
                    "description": "Amount the specified system resource type is limited by this rule.  Units are kb/s for bandwidth, files/s for file-count, or processing percentage used for cpu.",
                    "type": "integer"
                },
                "schedule": {
                    "$ref": "#/definitions/SyncRuleSchedule",
                    "description": "A schedule defining when during a week this performance rule is in effect.  If unspecified or null, the schedule will always be in effect."
                }
            },
            "type": "object"
        },
        "SyncRuleCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncRule"
                },
                {
                    "description": "A rule limiting the bandwidth, file operations, or cpu usage for all sync jobs on this cluster.",
                    "properties": {
                        "type": {
                            "description": "The type of system resource this rule limits.",
                            "enum": [
                                "bandwidth",
                                "file_count",
                                "cpu"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "limit",
                        "type"
                    ],
                    "type": "object"
                }
            ]
        },
        "SyncRuleExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncRule"
                },
                {
                    "properties": {
                        "id": {
                            "description": "The system ID given to this performance rule.",
                            "type": "string"
                        },
                        "type": {
                            "description": "The type of system resource this rule limits.",
                            "enum": [
                                "bandwidth",
                                "file_count",
                                "cpu"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "description",
                        "enabled",
                        "limit",
                        "type",
                        "id"
                    ],
                    "type": "object"
                }
            ]
        },
        "SyncRuleExtendedExtended": {
            "properties": {
                "description": {
                    "description": "User-entered description of this performance rule.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Whether this performance rule is currently in effect during its specified intervals.",
                    "type": "boolean"
                },
                "id": {
                    "description": "The system ID given to this performance rule.",
                    "type": "string"
                },
                "limit": {
                    "description": "Amount the specified system resource type is limited by this rule.  Units are kb/s for bandwidth, files/s for file-count, or processing percentage used for cpu.",
                    "type": "integer"
                },
                "schedule": {
                    "$ref": "#/definitions/SyncRuleSchedule",
                    "description": "A schedule defining when during a week this performance rule is in effect.  If unspecified or null, the schedule will always be in effect."
                },
                "type": {
                    "description": "The type of system resource this rule limits.",
                    "enum": [
                        "bandwidth",
                        "file_count",
                        "cpu"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SyncRuleSchedule": {
            "properties": {
                "begin": {
                    "description": "Start time (inclusive) for this schedule, during its specified days.  Format is \"hh:mm\" (24h format hour, and minute).  A null value indicates the beginning of the day (\"00:00\").",
                    "type": "string"
                },
                "end": {
                    "description": "End time (inclusive) for this schedule, during its specified days.  Format is \"hh:mm\" (three-letter weekday name abbreviation, 24h format hour, and minute).  A null value indicates the end of the day (\"23:59\").",
                    "type": "string"
                },
                "friday": {
                    "description": "If true, this rule is in effect on Friday.  If false, or unspecified, it is not.",
                    "type": "boolean"
                },
                "monday": {
                    "description": "If true, this rule is in effect on Monday.  If false, or unspecified, it is not.",
                    "type": "boolean"
                },
                "saturday": {
                    "description": "If true, this rule is in effect on Saturday.  If false, or unspecified, it is not.",
                    "type": "boolean"
                },
                "sunday": {
                    "description": "If true, this rule is in effect on Sunday.  If false, or unspecified, it is not.",
                    "type": "boolean"
                },
                "thursday": {
                    "description": "If true, this rule is in effect on Thursday.  If false, or unspecified, it is not.",
                    "type": "boolean"
                },
                "tuesday": {
                    "description": "If true, this rule is in effect on Tuesday.  If false, or unspecified, it is not.",
                    "type": "boolean"
                },
                "wednesday": {
                    "description": "If true, this rule is in effect on Wednesday.  If false, or unspecified, it is not.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SyncRules": {
            "properties": {
                "rules": {
                    "items": {
                        "$ref": "#/definitions/SyncRuleExtended",
                        "description": "A rule limiting the bandwidth, file operations, or cpu usage for all sync jobs on this cluster."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SyncRulesExtended": {
            "properties": {
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "rules": {
                    "items": {
                        "$ref": "#/definitions/SyncRuleExtendedExtended",
                        "description": "A rule limiting the bandwidth, file operations, or cpu usage for all sync jobs on this cluster."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "required": [
                "rules",
                "total"
            ],
            "type": "object"
        },
        "SyncSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/SyncSettingsSettings",
                    "description": "Global SyncIQ settings."
                }
            },
            "type": "object"
        },
        "SyncSettingsSettings": {
            "properties": {
                "burst_memory_constraint": {
                    "description": "The per-worker burst socket memory constraint, in bytes.",
                    "type": "integer"
                },
                "burst_socket_buffer_size": {
                    "description": "The per-worker burst socket buffer coalesced data, in bytes.",
                    "type": "integer"
                },
                "force_interface": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Default for the \"force_interface\" property that will be applied to each new sync policy unless otherwise specified at the time of policy creation.  Determines whether data is sent only through the subnet and pool specified in the \"source_network\" field. This option can be useful if there are multiple interfaces for the given source subnet.",
                    "type": "boolean"
                },
                "report_email": {
                    "description": "Email sync reports to these addresses.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "report_max_age": {
                    "description": "The default length of time (in seconds) a policy report will be stored.",
                    "type": "integer"
                },
                "report_max_count": {
                    "description": "The default maximum number of reports to retain for a policy.",
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer"
                },
                "restrict_target_network": {
                    "description": "Default for the \"restrict_target_network\" property that will be applied to each new sync policy unless otherwise specified at the time of policy creation.  If you specify true, and you specify a SmartConnect zone in the \"target_host\" field, replication policies will connect only to nodes in the specified SmartConnect zone.  If you specify false, replication policies are not restricted to specific nodes on the target cluster.",
                    "type": "boolean"
                },
                "service": {
                    "description": "Specifies if the SyncIQ service currently on, paused, or off.  If paused, all sync jobs will be paused.  If turned off, all jobs will be canceled.",
                    "enum": [
                        "on",
                        "off",
                        "paused"
                    ],
                    "type": "string"
                },
                "source_network": {
                    "$ref": "#/definitions/SyncPolicySourceNetwork",
                    "description": "Restricts replication policies on the local cluster to running on the specified subnet and pool."
                }
            },
            "type": "object"
        },
        "TargetPolicies": {
            "properties": {
                "policies": {
                    "items": {
                        "$ref": "#/definitions/TargetPolicy",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TargetPoliciesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/TargetPolicies"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "TargetPolicy": {
            "properties": {
                "failover_failback_state": {
                    "description": "The condition of this policy with respect to sync failover/failback.",
                    "enum": [
                        "writes_disabled",
                        "enabling_writes",
                        "writes_enabled",
                        "disabling_writes",
                        "creating_resync_policy",
                        "resync_policy_created"
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "The system ID given to this sync policy.",
                    "type": "string"
                },
                "last_job_state": {
                    "description": "The state of the last job run for this policy.",
                    "enum": [
                        "scheduled",
                        "running",
                        "paused",
                        "finished",
                        "failed",
                        "canceled",
                        "needs_attention",
                        "unknown"
                    ],
                    "type": "string"
                },
                "last_source_coordinator_ip": {
                    "description": "The IP address from which a SyncIQ coordinator daemon most recently connected to this cluster to update it about the progress of a job for this policy.",
                    "type": "string"
                },
                "last_update_from_source": {
                    "description": "The last time this cluster was updated with sync information from the source cluster for this policy, in unix epoch seconds.  Null if no such update has occurred yet.",
                    "type": "integer"
                },
                "legacy_policy": {
                    "description": "Was this policy defined by a OneFS version earlier than 6.0? (Pre-6.0 policies did not have the target policy concept and canceling from the target side will not be available.)",
                    "type": "boolean"
                },
                "name": {
                    "description": "User-assigned name of this sync policy.",
                    "type": "string"
                },
                "source_cluster_guid": {
                    "description": "Unique identifier for the source cluster.",
                    "type": "string"
                },
                "source_host": {
                    "description": "Hostname or IP address of sync source cluster.",
                    "type": "string"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "source_cluster_guid",
                "last_job_state",
                "id",
                "target_path",
                "legacy_policy",
                "source_host",
                "last_source_coordinator_ip",
                "failover_failback_state"
            ],
            "type": "object"
        },
        "TargetReport": {
            "properties": {
                "action": {
                    "description": "The action to be taken by this job.",
                    "enum": [
                        "resync_prep",
                        "allow_write",
                        "allow_write_revert",
                        "test",
                        "run"
                    ],
                    "type": "string"
                },
                "ads_streams_replicated": {
                    "description": "The number of ads streams replicated by this job.",
                    "type": "integer"
                },
                "block_specs_replicated": {
                    "description": "The number of block specs replicated by this job.",
                    "type": "integer"
                },
                "bytes_recoverable": {
                    "description": "The number of bytes recoverable by this job.",
                    "type": "integer"
                },
                "bytes_transferred": {
                    "description": "The number of bytes that have been transferred by this job.",
                    "type": "integer"
                },
                "char_specs_replicated": {
                    "description": "The number of char specs replicated by this job.",
                    "type": "integer"
                },
                "corrected_lins": {
                    "description": "The number of LINs corrected by this job.",
                    "type": "integer"
                },
                "dead_node": {
                    "description": "This field is true if the node running this job is dead.",
                    "type": "boolean"
                },
                "directories_replicated": {
                    "description": "The number of directories replicated.",
                    "type": "integer"
                },
                "dirs_changed": {
                    "description": "The number of directories changed by this job.",
                    "type": "integer"
                },
                "dirs_deleted": {
                    "description": "The number of directories deleted by this job.",
                    "type": "integer"
                },
                "dirs_moved": {
                    "description": "The number of directories moved by this job.",
                    "type": "integer"
                },
                "dirs_new": {
                    "description": "The number of directories created by this job.",
                    "type": "integer"
                },
                "duration": {
                    "description": "The amount of time in seconds between when the job was started and when it ended.  If the job has not yet ended, this is the amount of time since the job started.  This field is null if the job has not yet started.",
                    "type": "integer"
                },
                "end_time": {
                    "description": "The time the job ended in unix epoch seconds. The field is null if the job hasn't ended.",
                    "type": "integer"
                },
                "error": {
                    "description": "The primary error message for this job.",
                    "type": "string"
                },
                "error_checksum_files_skipped": {
                    "description": "The number of files with checksum errors skipped by this job.",
                    "type": "integer"
                },
                "error_io_files_skipped": {
                    "description": "The number of files with io errors skipped by this job.",
                    "type": "integer"
                },
                "error_net_files_skipped": {
                    "description": "The number of files with network errors skipped by this job.",
                    "type": "integer"
                },
                "errors": {
                    "description": "A list of error messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "failed_chunks": {
                    "description": "Tyhe number of data chunks that failed transmission.",
                    "type": "integer"
                },
                "fifos_replicated": {
                    "description": "The number of fifos replicated by this job.",
                    "type": "integer"
                },
                "file_data_bytes": {
                    "description": "The number of bytes tranferred that belong to files.",
                    "type": "integer"
                },
                "files_changed": {
                    "description": "The number of files changed by this job.",
                    "type": "integer"
                },
                "files_linked": {
                    "description": "The number of files linked by this job.",
                    "type": "integer"
                },
                "files_new": {
                    "description": "The number of files created by this job.",
                    "type": "integer"
                },
                "files_selected": {
                    "description": "The number of files selected by this job.",
                    "type": "integer"
                },
                "files_transferred": {
                    "description": "The number of files transfered by this job.",
                    "type": "integer"
                },
                "files_unlinked": {
                    "description": "The number of files unlinked by this job.",
                    "type": "integer"
                },
                "files_with_ads_replicated": {
                    "description": "The number of files with ads replicated by this job.",
                    "type": "integer"
                },
                "flipped_lins": {
                    "description": "The number of LINs flipped by this job.",
                    "type": "integer"
                },
                "hard_links_replicated": {
                    "description": "The number of hard links replicated by this job.",
                    "type": "integer"
                },
                "hash_exceptions_fixed": {
                    "description": "The number of hash exceptions fixed by this job.",
                    "type": "integer"
                },
                "hash_exceptions_found": {
                    "description": "The number of hash exceptions found by this job.",
                    "type": "integer"
                },
                "id": {
                    "description": "A unique identifier for this object.",
                    "type": "string"
                },
                "job_id": {
                    "description": "The ID of the job.",
                    "type": "integer"
                },
                "lins_total": {
                    "description": "The number of LINs tranferred by this job.",
                    "type": "integer"
                },
                "network_bytes_to_source": {
                    "description": "The total number of bytes sent to the source by this job.",
                    "type": "integer"
                },
                "network_bytes_to_target": {
                    "description": "The total number of bytes sent to the target by this job.",
                    "type": "integer"
                },
                "new_files_replicated": {
                    "description": "The number of new files replicated by this job.",
                    "type": "integer"
                },
                "num_retransmitted_files": {
                    "description": "The number of files that have been retransmitted by this job.",
                    "type": "integer"
                },
                "phases": {
                    "description": "Data for each phase of this job.",
                    "items": {
                        "$ref": "#/definitions/SyncJobPhase",
                        "description": ""
                    },
                    "type": "array"
                },
                "policy_id": {
                    "description": "The ID of the policy.",
                    "type": "string"
                },
                "policy_name": {
                    "description": "The name of the policy.",
                    "type": "string"
                },
                "regular_files_replicated": {
                    "description": "The number of regular files replicated by this job.",
                    "type": "integer"
                },
                "resynced_lins": {
                    "description": "The number of LINs resynched by this job.",
                    "type": "integer"
                },
                "retransmitted_files": {
                    "description": "The files that have been retransmitted by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "retry": {
                    "description": "The number of times the job has been retried.",
                    "type": "integer"
                },
                "running_chunks": {
                    "description": "The number of data chunks currently being transmitted.",
                    "type": "integer"
                },
                "sockets_replicated": {
                    "description": "The number of sockets replicated by this job.",
                    "type": "integer"
                },
                "source_bytes_recovered": {
                    "description": "The number of bytes recovered on the source.",
                    "type": "integer"
                },
                "source_directories_created": {
                    "description": "The number of directories created on the source.",
                    "type": "integer"
                },
                "source_directories_deleted": {
                    "description": "The number of directories deleted on the source.",
                    "type": "integer"
                },
                "source_directories_linked": {
                    "description": "The number of directories linked on the source.",
                    "type": "integer"
                },
                "source_directories_unlinked": {
                    "description": "The number of directories unlinked on the source.",
                    "type": "integer"
                },
                "source_directories_visited": {
                    "description": "The number of directories visited on the source.",
                    "type": "integer"
                },
                "source_files_deleted": {
                    "description": "The number of files deleted on the source.",
                    "type": "integer"
                },
                "source_files_linked": {
                    "description": "The number of files linked on the source.",
                    "type": "integer"
                },
                "source_files_unlinked": {
                    "description": "The number of files unlinked on the source.",
                    "type": "integer"
                },
                "source_host": {
                    "description": "Hostname or IP address of sync source cluster.",
                    "type": "string"
                },
                "sparse_data_bytes": {
                    "description": "The number of sparse data bytes transferred by this job.",
                    "type": "integer"
                },
                "start_time": {
                    "description": "The time the job started in unix epoch seconds. The field is null if the job hasn't started.",
                    "type": "integer"
                },
                "state": {
                    "description": "The state of the job.",
                    "enum": [
                        "scheduled",
                        "running",
                        "paused",
                        "finished",
                        "failed",
                        "canceled",
                        "needs_attention",
                        "unknown"
                    ],
                    "type": "string"
                },
                "subreport_count": {
                    "description": "The number of subreports that are available for this job report.",
                    "type": "integer"
                },
                "succeeded_chunks": {
                    "description": "The number of data chunks that have been transmitted successfully.",
                    "type": "integer"
                },
                "symlinks_replicated": {
                    "description": "The number of symlinks replicated by this job.",
                    "type": "integer"
                },
                "sync_type": {
                    "description": "The type of sync being performed by this job.",
                    "enum": [
                        "invalid",
                        "legacy",
                        "initial",
                        "incremental",
                        "upgrade",
                        "fofb",
                        "domainmark"
                    ],
                    "type": "string"
                },
                "target_bytes_recovered": {
                    "description": "The number of bytes recovered on the target.",
                    "type": "integer"
                },
                "target_directories_created": {
                    "description": "The number of directories created on the target.",
                    "type": "integer"
                },
                "target_directories_deleted": {
                    "description": "The number of directories deleted on the target.",
                    "type": "integer"
                },
                "target_directories_linked": {
                    "description": "The number of directories linked on the target.",
                    "type": "integer"
                },
                "target_directories_unlinked": {
                    "description": "The number of directories unlinked on the target.",
                    "type": "integer"
                },
                "target_files_deleted": {
                    "description": "The number of files deleted on the target.",
                    "type": "integer"
                },
                "target_files_linked": {
                    "description": "The number of files linked on the target.",
                    "type": "integer"
                },
                "target_files_unlinked": {
                    "description": "The number of files unlinked on the target.",
                    "type": "integer"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                },
                "target_snapshots": {
                    "description": "The target snapshots created by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "total_chunks": {
                    "description": "The total number of data chunks transmitted by this job.",
                    "type": "integer"
                },
                "total_data_bytes": {
                    "description": "The total number of bytes transferred by this job.",
                    "type": "integer"
                },
                "total_files": {
                    "description": "The number of files affected by this job.",
                    "type": "integer"
                },
                "total_network_bytes": {
                    "description": "The total number of bytes sent over the network by this job.",
                    "type": "integer"
                },
                "total_phases": {
                    "description": "The total number of phases for this job.",
                    "type": "integer"
                },
                "unchanged_data_bytes": {
                    "description": "The number of bytes unchanged by this job.",
                    "type": "integer"
                },
                "up_to_date_files_skipped": {
                    "description": "The number of up-to-date files skipped by this job.",
                    "type": "integer"
                },
                "updated_files_replicated": {
                    "description": "The number of updated files replicated by this job.",
                    "type": "integer"
                },
                "user_conflict_files_skipped": {
                    "description": "The number of files with user conflicts skipped by this job.",
                    "type": "integer"
                },
                "warnings": {
                    "description": "A list of warning messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "files_new",
                "error_io_files_skipped",
                "policy_name",
                "target_directories_unlinked",
                "network_bytes_to_source",
                "hash_exceptions_fixed",
                "failed_chunks",
                "dirs_moved",
                "error_net_files_skipped",
                "fifos_replicated",
                "source_directories_linked",
                "target_directories_linked",
                "dead_node",
                "source_bytes_recovered",
                "retransmitted_files",
                "lins_total",
                "new_files_replicated",
                "dirs_changed",
                "total_phases",
                "files_unlinked",
                "sockets_replicated",
                "bytes_transferred",
                "regular_files_replicated",
                "file_data_bytes",
                "target_directories_deleted",
                "hash_exceptions_found",
                "sparse_data_bytes",
                "running_chunks",
                "phases",
                "errors",
                "resynced_lins",
                "bytes_recoverable",
                "state",
                "block_specs_replicated",
                "sync_type",
                "source_host",
                "corrected_lins",
                "action",
                "target_files_unlinked",
                "total_data_bytes",
                "symlinks_replicated",
                "source_files_unlinked",
                "total_chunks",
                "files_with_ads_replicated",
                "target_files_deleted",
                "dirs_new",
                "files_selected",
                "num_retransmitted_files",
                "target_snapshots",
                "unchanged_data_bytes",
                "target_bytes_recovered",
                "user_conflict_files_skipped",
                "target_files_linked",
                "files_transferred",
                "source_directories_visited",
                "target_path",
                "network_bytes_to_target",
                "error",
                "directories_replicated",
                "total_network_bytes",
                "source_directories_deleted",
                "target_directories_created",
                "id",
                "flipped_lins",
                "char_specs_replicated",
                "updated_files_replicated",
                "source_directories_unlinked",
                "ads_streams_replicated",
                "total_files",
                "source_files_linked",
                "warnings",
                "source_directories_created",
                "hard_links_replicated",
                "succeeded_chunks",
                "files_changed",
                "retry",
                "error_checksum_files_skipped",
                "subreport_count",
                "dirs_deleted",
                "files_linked",
                "up_to_date_files_skipped",
                "source_files_deleted",
                "policy_id"
            ],
            "type": "object"
        },
        "TargetReports": {
            "properties": {
                "reports": {
                    "items": {
                        "$ref": "#/definitions/TargetReport",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TargetReportsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/TargetReports"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "UserChangePassword": {
            "description": "Change Password Request",
            "properties": {
                "new_password": {
                    "description": "Specifies user's new password",
                    "type": "string"
                },
                "old_password": {
                    "description": "User's expired password",
                    "type": "string"
                }
            },
            "required": [
                "new_password",
                "old_password"
            ],
            "type": "object"
        },
        "UserMemberOf": {
            "properties": {
                "member_of": {
                    "items": {
                        "$ref": "#/definitions/GroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WormDomain": {
            "properties": {
                "autocommit_offset": {
                    "description": "The autocommit time period in seconds for the domain.  After a file exists in this domain without being modified for the specified time period, the file is automatically committed the next time the file is accessed.  If null, there is no autocommit time so files must be manually committed.",
                    "minimum": 0,
                    "type": "integer"
                },
                "default_retention": {
                    "description": "The default amount of time, in seconds, that a file in this domain will be protected for.  This default is applied to a file if it is committed to the domain before being assigned its own expiration date.  Value can also be null (expire right away), 'forever', 'use_min' (use the 'min_retention' value), or 'use_max' (use the 'max_retention' value).",
                    "minimum": 0,
                    "type": "integer"
                },
                "max_retention": {
                    "description": "The maximum amount of time, in seconds, that a file in this domain will be protected for.  This will override the retention period of any file committed with a longer retention period.  Value can also be null (allow an infinite length retention period).",
                    "minimum": 0,
                    "type": "integer"
                },
                "min_retention": {
                    "description": "The minimum amount of time, in seconds, that a file in this domain will be protected for.  This will override the retention period of any file committed with a shorter retention period.  Value can also be null (expire right away), or 'forever'.",
                    "minimum": 0,
                    "type": "integer"
                },
                "override_date": {
                    "description": "Override retention date for the domain.  If this date is later than any committed file's own retention date, that file will remain protected beyond its own retention date until this date.",
                    "minimum": 0,
                    "type": "integer"
                },
                "privileged_delete": {
                    "description": "If 'on', files in this domain can be deleted using the privileged delete feature.  Otherwise, they can't be deleted even with privileged delete.  If 'disabled', privileged file deletes are permanently disabled and cannot be turned back on again.",
                    "enum": [
                        "on",
                        "off",
                        "disabled"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Whether this is an enterprise domain or this is a compliance domain. Compliance domains may not be created on enterprise clusters. Enterprise and compliance domains may be created on compliance clusters.",
                    "enum": [
                        "enterprise",
                        "compliance"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WormDomainCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/WormDomain"
                },
                {
                    "properties": {
                        "path": {
                            "description": "Root path of this domain.  Files in this directory and all sub-directories will be protected.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "path"
                    ],
                    "type": "object"
                }
            ]
        },
        "WormDomainExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/WormDomain"
                },
                {
                    "properties": {
                        "id": {
                            "description": "System-assigned ID of this protection domain.",
                            "type": "integer"
                        },
                        "incomplete": {
                            "description": "If true, OneFS is still in the process of creating this domain and it is not yet preventing files from being modified or deleted.  If false, the domain is fully created and operational.",
                            "type": "boolean"
                        },
                        "lin": {
                            "description": "Logical inode number (LIN) for the root of this domain.",
                            "type": "integer"
                        },
                        "max_modifies": {
                            "description": "Maximum number of times a WORM domain can be modified over its lifetime.",
                            "type": "integer"
                        },
                        "path": {
                            "description": "Root path of this domain.  Files in this directory and all sub-directories will be protected.",
                            "type": "string"
                        },
                        "total_modifies": {
                            "description": "The number of times this domain has been modified (had its domain attributes changed) so far.  A WORM domain can be modified a fixed number of times over its lifetime defined by max_modifies.",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "lin",
                        "max_modifies",
                        "total_modifies",
                        "privileged_delete",
                        "path",
                        "type",
                        "id",
                        "incomplete"
                    ],
                    "type": "object"
                }
            ]
        },
        "WormDomains": {
            "properties": {
                "domains": {
                    "items": {
                        "$ref": "#/definitions/WormDomainExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WormDomainsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/WormDomains"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "WormSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/WormSettingsSettings",
                    "description": "Global WORM settings."
                }
            },
            "type": "object"
        },
        "WormSettingsExtended": {
            "description": "Global WORM settings.",
            "properties": {
                "cdate": {
                    "$ref": "#/definitions/Empty",
                    "description": "To set the compliance clock to the current system time, PUT to this resource with an empty JSON object {} for the cdate value.  This cluster must be in compliance mode to set the compliance clock."
                }
            },
            "type": "object"
        },
        "WormSettingsSettings": {
            "properties": {
                "cdate": {
                    "description": "The current time of the SmartLock compliance clock in Unix epoch seconds, or null if the compliance clock is not set.  To set the compliance clock to the current system time, PUT to this resource with an empty JSON object {} for the cdate value.  This cluster must be in compliance mode to set the compliance clock.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Zone": {
            "description": "Access zone.",
            "properties": {
                "all_auth_providers": {
                    "description": "Use all authentication providers available.",
                    "type": "boolean"
                },
                "alternate_system_provider": {
                    "description": "Alternate system provider.",
                    "type": "string"
                },
                "audit_failure": {
                    "description": "List of failed operations to audit.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "audit_success": {
                    "description": "List of successful operations to audit.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "auth_providers": {
                    "description": "List of authentication providers used on this zone.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cache_size": {
                    "description": "Specifies the maximum size of zone in-memory cache.",
                    "type": "integer"
                },
                "create_path": {
                    "description": "Create path if it does not exist.",
                    "type": "boolean"
                },
                "hdfs_ambari_namenode": {
                    "description": "The SmartConnect name of this cluster that will be used for the HDFS service.",
                    "type": "string"
                },
                "hdfs_ambari_server": {
                    "description": "A valid hostname, FQDN, IPv4, or IPv6 string of the Ambari server.",
                    "type": "string"
                },
                "hdfs_authentication": {
                    "description": "Authentication type for HDFS protocol.",
                    "enum": [
                        "all",
                        "simple_only",
                        "kerberos_only"
                    ],
                    "type": "string"
                },
                "hdfs_odp_version": {
                    "description": "ODP stack repository version number.",
                    "type": "string"
                },
                "hdfs_root_directory": {
                    "description": "Root directory for HDFS protocol.",
                    "type": "string"
                },
                "home_directory_umask": {
                    "description": "Permissions set on auto-created user home directories.",
                    "type": "integer"
                },
                "ifs_restricted": {
                    "description": "User restrictions for this zone.",
                    "items": {
                        "$ref": "#/definitions/GroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "map_untrusted": {
                    "description": "Maps untrusted domains to this NetBIOS domain during authentication.",
                    "type": "string"
                },
                "name": {
                    "description": "Zone name.",
                    "type": "string"
                },
                "netbios_name": {
                    "description": "NetBIOS name.",
                    "type": "string"
                },
                "path": {
                    "description": "zone path.",
                    "type": "string"
                },
                "protocol_audit_enabled": {
                    "description": "Indicates whether I/O auditing is set on this zone.",
                    "type": "boolean"
                },
                "skeleton_directory": {
                    "description": "Skeleton directory for user home directories.",
                    "type": "string"
                },
                "syslog_audit_events": {
                    "description": "List of audit operations to forward to syslog.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "syslog_forwarding_enabled": {
                    "description": "Enable syslog forwarding of zone audit events.",
                    "type": "boolean"
                },
                "system_provider": {
                    "description": "System provider.",
                    "type": "string"
                },
                "user_mapping_rules": {
                    "description": "Current ID mapping rules.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "webhdfs_enabled": {
                    "description": "Indicates whether WebHDFS is enabled on this zone.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ZoneCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/Zone"
                },
                {
                    "description": "Access zone.",
                    "properties": {},
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "ZoneExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/Zone"
                },
                {
                    "properties": {
                        "hdfs_keytab": {
                            "description": "Kerberos keytab to use for HDFS authentication.",
                            "type": "string"
                        },
                        "id": {
                            "description": "ID.",
                            "type": "string"
                        },
                        "system": {
                            "description": "Zone is built-in.",
                            "type": "boolean"
                        },
                        "zone_id": {
                            "description": "Zone ID.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "Zones": {
            "properties": {
                "zones": {
                    "items": {
                        "$ref": "#/definitions/ZoneExtended",
                        "description": "Access zone."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ZonesSummary": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/ZonesSummarySummary",
                    "description": "The summary of a collection of objects."
                }
            },
            "type": "object"
        },
        "ZonesSummaryExtended": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/ZonesSummarySummaryExtended",
                    "description": "The summary of a collection of objects."
                }
            },
            "type": "object"
        },
        "ZonesSummarySummary": {
            "properties": {
                "path": {
                    "description": "The zone base path",
                    "type": "string"
                }
            },
            "required": [
                "path"
            ],
            "type": "object"
        },
        "ZonesSummarySummaryExtended": {
            "properties": {
                "count": {
                    "description": "The count of objects in the collection",
                    "type": "integer"
                },
                "list": {
                    "description": "List of zone names",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "count"
            ],
            "type": "object"
        }
    },
    "info": {
        "contact": {
            "email": "sdk@isilon.com",
            "name": "Isilon SDK Team",
            "url": "http://www.emc.com"
        },
        "description": "Isilon SDK - Swagger Open API Specification for OneFS API",
        "license": {
            "name": "MIT",
            "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
        },
        "termsOfService": "http://www.emc.com",
        "title": "Isilon SDK",
        "version": "1.0.0"
    },
    "paths": {
        "/platform/1/audit/settings": {
            "get": {
                "description": "Retrieves the auditing global settings.",
                "operationId": "getAuditSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieves the auditing global settings.",
                        "schema": {
                            "$ref": "#/definitions/AuditSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            },
            "put": {
                "description": "Modify the auditing global settings.  All input fields are optional, but one or more must be supplied.",
                "operationId": "updateAuditSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AuditSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuditSettingsSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            }
        },
        "/platform/1/audit/topics": {
            "get": {
                "description": "Retrieve a list of audit topics.",
                "operationId": "listAuditTopics",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve a list of audit topics.",
                        "schema": {
                            "$ref": "#/definitions/AuditTopicsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            },
            "post": {
                "description": "Create a new audit topic.",
                "operationId": "createAuditTopic",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AuditTopic",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuditTopicCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new audit topic.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            }
        },
        "/platform/1/audit/topics/{AuditTopicId}": {
            "delete": {
                "description": "Delete the audit topic.",
                "operationId": "deleteAuditTopic",
                "parameters": [
                    {
                        "description": "Delete the audit topic.",
                        "in": "path",
                        "name": "AuditTopicId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            },
            "get": {
                "description": "Retrieve the audit topic information.",
                "operationId": "getAuditTopic",
                "parameters": [
                    {
                        "description": "Retrieve the audit topic information.",
                        "in": "path",
                        "name": "AuditTopicId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the audit topic information.",
                        "schema": {
                            "$ref": "#/definitions/AuditTopics"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            },
            "put": {
                "description": "Modify the audit topic.",
                "operationId": "updateAuditTopic",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AuditTopic",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuditTopic"
                        }
                    },
                    {
                        "description": "Modify the audit topic.",
                        "in": "path",
                        "name": "AuditTopicId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            }
        },
        "/platform/1/auth/access/{AuthAccessUser}": {
            "get": {
                "description": "Determine user's access rights to a file",
                "operationId": "getAuthAccessUser",
                "parameters": [
                    {
                        "description": "Path to the file. Must be within /ifs.",
                        "in": "query",
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "description": "Access zone the user is in.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Show the user's numeric identifier.",
                        "in": "query",
                        "name": "numeric",
                        "type": "boolean"
                    },
                    {
                        "description": "Determine user's access rights to a file",
                        "in": "path",
                        "name": "AuthAccessUser",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Determine user's access rights to a file",
                        "schema": {
                            "$ref": "#/definitions/AuthAccess"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/groups": {
            "delete": {
                "description": "Flush the groups cache.",
                "operationId": "deleteAuthGroups",
                "parameters": [
                    {
                        "description": "If true, only flush cached objects.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "List all groups.",
                "operationId": "listAuthGroups",
                "parameters": [
                    {
                        "description": "Filter groups by domain.",
                        "in": "query",
                        "name": "domain",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If true, only return cached objects.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter groups by name prefix.",
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Enumerate all groups that a group is a member of.",
                        "in": "query",
                        "name": "query_member_of",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all groups.",
                        "schema": {
                            "$ref": "#/definitions/AuthGroupsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new group.",
                "operationId": "createAuthGroup",
                "parameters": [
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Optional provider type.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "AuthGroup",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthGroupCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new group.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/groups/{AuthGroupId}": {
            "delete": {
                "description": "Delete the group.",
                "operationId": "deleteAuthGroup",
                "parameters": [
                    {
                        "description": "If true, flush the group from the cache.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Delete the group.",
                        "in": "path",
                        "name": "AuthGroupId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the group information.",
                "operationId": "getAuthGroup",
                "parameters": [
                    {
                        "description": "If true, only return cached objects.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the group information.",
                        "in": "path",
                        "name": "AuthGroupId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the group information.",
                        "schema": {
                            "$ref": "#/definitions/AuthGroups"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the group.",
                "operationId": "updateAuthGroup",
                "parameters": [
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Optional provider type.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "AuthGroup",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthGroup"
                        }
                    },
                    {
                        "description": "Modify the group.",
                        "in": "path",
                        "name": "AuthGroupId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/groups/{Group}/members": {
            "get": {
                "description": "List all the members of the group.",
                "operationId": "listGroupMembers",
                "parameters": [
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Filter group members by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter group members by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all the members of the group.",
                        "schema": {
                            "$ref": "#/definitions/GroupMembers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthGroups"
                ]
            },
            "post": {
                "description": "Add a member to the group.",
                "operationId": "createGroupMember",
                "parameters": [
                    {
                        "description": "Filter group members by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter group members by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "GroupMember",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupMember"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add a member to the group.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthGroups"
                ]
            }
        },
        "/platform/1/auth/groups/{Group}/members/{GroupMemberId}": {
            "delete": {
                "description": "Remove the member from the group.",
                "operationId": "deleteGroupMember",
                "parameters": [
                    {
                        "description": "Filter group members by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter group members by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Remove the member from the group.",
                        "in": "path",
                        "name": "GroupMemberId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthGroups"
                ]
            }
        },
        "/platform/1/auth/id": {
            "get": {
                "description": "Retrieve the current security token.",
                "operationId": "getAuthId",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the current security token.",
                        "schema": {
                            "$ref": "#/definitions/AuthId"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/mapping/identities": {
            "delete": {
                "description": "Flush the entire idmap cache.",
                "operationId": "deleteMappingIdentities",
                "parameters": [
                    {
                        "description": "Filter to apply when deleting identity mappings.",
                        "enum": [
                            "auto",
                            "external"
                        ],
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Delete mapping instead of flush mapping cache.",
                        "in": "query",
                        "name": "remove",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Manually set or modify a mapping between two personae.",
                "operationId": "createMappingIdentity",
                "parameters": [
                    {
                        "description": "Create a bi-directional mapping from source to target and target to source.",
                        "in": "query",
                        "name": "2way",
                        "type": "boolean"
                    },
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Replace existing mappings.",
                        "in": "query",
                        "name": "replace",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "MappingIdentity",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MappingIdentityCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manually set or modify a mapping between two personae.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/mapping/identities/{MappingIdentityId}": {
            "delete": {
                "description": "Flush the entire idmap cache.",
                "operationId": "deleteMappingIdentity",
                "parameters": [
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Delete the bi-directional mapping from source to target and target to source.",
                        "in": "query",
                        "name": "2way",
                        "type": "boolean"
                    },
                    {
                        "description": "Target identity persona.",
                        "in": "query",
                        "name": "target",
                        "type": "string"
                    },
                    {
                        "description": "Delete mapping instead of flush mapping from cache.",
                        "in": "query",
                        "name": "remove",
                        "type": "boolean"
                    },
                    {
                        "description": "Flush the entire idmap cache.",
                        "in": "path",
                        "name": "MappingIdentityId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve all identity mappings (uid, gid, sid, and on-disk) for the supplied source persona.",
                "operationId": "getMappingIdentity",
                "parameters": [
                    {
                        "description": "Idmap should attempt to create missing identity mappings.",
                        "in": "query",
                        "name": "nocreate",
                        "type": "boolean"
                    },
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve all identity mappings (uid, gid, sid, and on-disk) for the supplied source persona.",
                        "in": "path",
                        "name": "MappingIdentityId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve all identity mappings (uid, gid, sid, and on-disk) for the supplied source persona.",
                        "schema": {
                            "$ref": "#/definitions/MappingIdentities"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Manually set or modify a mapping between two personae.",
                "operationId": "createMappingIdentity",
                "parameters": [
                    {
                        "description": "Desired mapping target to fetch/generate.",
                        "enum": [
                            "uid",
                            "gid",
                            "sid"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "MappingIdentity",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manually set or modify a mapping between two personae.",
                        "schema": {
                            "$ref": "#/definitions/MappingIdentities"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/mapping/users/lookup": {
            "get": {
                "description": "Retrieve the user information.",
                "operationId": "getMappingUsersLookup",
                "parameters": [
                    {
                        "description": "The user's primary group ID.",
                        "in": "query",
                        "name": "primary_gid",
                        "type": "integer"
                    },
                    {
                        "description": "The IDs of the groups that the user belongs to.",
                        "in": "query",
                        "items": {
                            "type": "integer"
                        },
                        "name": "gid",
                        "type": "array"
                    },
                    {
                        "description": "The user ID.",
                        "in": "query",
                        "name": "uid",
                        "type": "integer"
                    },
                    {
                        "description": "The zone the user bolongs to.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "The user name.",
                        "in": "query",
                        "name": "user",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the user information.",
                        "schema": {
                            "$ref": "#/definitions/MappingUsersLookup"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/mapping/users/rules": {
            "get": {
                "description": "Retrieve the user mapping rules.",
                "operationId": "getMappingUsersRules",
                "parameters": [
                    {
                        "description": "The zone to which the user mapping applies.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the user mapping rules.",
                        "schema": {
                            "$ref": "#/definitions/MappingUsersRules"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the user mapping rules.",
                "operationId": "updateMappingUsersRules",
                "parameters": [
                    {
                        "in": "body",
                        "name": "MappingUsersRules",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MappingUsersRulesExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/netgroups/{AuthNetgroupId}": {
            "get": {
                "description": "Retrieve the user information.",
                "operationId": "getAuthNetgroup",
                "parameters": [
                    {
                        "description": "Ignore netgroup errors.",
                        "in": "query",
                        "name": "ignore_errors",
                        "type": "boolean"
                    },
                    {
                        "description": "Perform recursive search.",
                        "in": "query",
                        "name": "recursive",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter users by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter users by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the user information.",
                        "in": "path",
                        "name": "AuthNetgroupId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the user information.",
                        "schema": {
                            "$ref": "#/definitions/AuthNetgroups"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/privileges": {
            "get": {
                "description": "List all privileges.",
                "operationId": "getAuthPrivileges",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all privileges.",
                        "schema": {
                            "$ref": "#/definitions/AuthPrivileges"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/ads": {
            "get": {
                "description": "List all ADS providers.",
                "operationId": "listProvidersAds",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all ADS providers.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersAds"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new ADS provider.",
                "operationId": "createProvidersAdsItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersAdsItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersAdsItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new ADS provider.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/ads/{Id}/controllers": {
            "get": {
                "description": "List all ADS controllers.",
                "operationId": "getAdsProviderControllers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all ADS controllers.",
                        "schema": {
                            "$ref": "#/definitions/AdsProviderControllers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthProviders"
                ]
            }
        },
        "/platform/1/auth/providers/ads/{Id}/domains": {
            "get": {
                "description": "List all ADS domains.",
                "operationId": "getAdsProviderDomains",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all ADS domains.",
                        "schema": {
                            "$ref": "#/definitions/AdsProviderDomains"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthProviders"
                ]
            }
        },
        "/platform/1/auth/providers/ads/{Id}/domains/{AdsProviderDomainId}": {
            "get": {
                "description": "Retrieve the ADS domain information.",
                "operationId": "getAdsProviderDomain",
                "parameters": [
                    {
                        "description": "Retrieve the ADS domain information.",
                        "in": "path",
                        "name": "AdsProviderDomainId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the ADS domain information.",
                        "schema": {
                            "$ref": "#/definitions/AdsProviderDomains"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthProviders"
                ]
            }
        },
        "/platform/1/auth/providers/ads/{Id}/search": {
            "get": {
                "description": "Retrieve search results.",
                "operationId": "getAdsProviderSearch",
                "parameters": [
                    {
                        "description": "The domain to search in.",
                        "in": "query",
                        "name": "domain",
                        "type": "string"
                    },
                    {
                        "description": "The user or group description to search for.",
                        "in": "query",
                        "name": "description",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If true, search for users.",
                        "in": "query",
                        "name": "search_users",
                        "type": "boolean"
                    },
                    {
                        "description": "The LDAP filter to apply to the search.",
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The user name for the domain if untrusted.",
                        "in": "query",
                        "name": "user",
                        "type": "string"
                    },
                    {
                        "description": "The password for the domain if untrusted.",
                        "in": "query",
                        "name": "password",
                        "type": "string"
                    },
                    {
                        "description": "If true, search for groups.",
                        "in": "query",
                        "name": "search_groups",
                        "type": "boolean"
                    },
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve search results.",
                        "schema": {
                            "$ref": "#/definitions/AdsProviderSearch"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthProviders"
                ]
            }
        },
        "/platform/1/auth/providers/ads/{ProvidersAdsId}": {
            "delete": {
                "description": "Delete the ADS provider.",
                "operationId": "deleteProvidersAdsById",
                "parameters": [
                    {
                        "description": "Delete the ADS provider.",
                        "in": "path",
                        "name": "ProvidersAdsId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the ADS provider.",
                "operationId": "getProvidersAdsById",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the ADS provider.",
                        "in": "path",
                        "name": "ProvidersAdsId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the ADS provider.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersAds"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the ADS provider.",
                "operationId": "updateProvidersAdsById",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersAdsIdParams",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersAdsIdParams"
                        }
                    },
                    {
                        "description": "Modify the ADS provider.",
                        "in": "path",
                        "name": "ProvidersAdsId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/file": {
            "get": {
                "description": "List all file providers.",
                "operationId": "listProvidersFile",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all file providers.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersFile"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new file provider.",
                "operationId": "createProvidersFileItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersFileItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersFileItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new file provider.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/file/{ProvidersFileId}": {
            "delete": {
                "description": "Delete the file provider.",
                "operationId": "deleteProvidersFileById",
                "parameters": [
                    {
                        "description": "Delete the file provider.",
                        "in": "path",
                        "name": "ProvidersFileId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the file provider.",
                "operationId": "getProvidersFileById",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the file provider.",
                        "in": "path",
                        "name": "ProvidersFileId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the file provider.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersFile"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the file provider.",
                "operationId": "updateProvidersFileById",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersFileIdParams",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersFileIdParams"
                        }
                    },
                    {
                        "description": "Modify the file provider.",
                        "in": "path",
                        "name": "ProvidersFileId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/krb5": {
            "get": {
                "description": "List all KRB5 providers.",
                "operationId": "listProvidersKrb5",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all KRB5 providers.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersKrb5Extended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new KRB5 provider.",
                "operationId": "createProvidersKrb5Item",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersKrb5Item",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersKrb5Item"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new KRB5 provider.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/krb5/{ProvidersKrb5Id}": {
            "delete": {
                "description": "Delete the KRB5 provider.",
                "operationId": "deleteProvidersKrb5ById",
                "parameters": [
                    {
                        "description": "Delete the KRB5 provider.",
                        "in": "path",
                        "name": "ProvidersKrb5Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the KRB5 provider.",
                "operationId": "getProvidersKrb5ById",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the KRB5 provider.",
                        "in": "path",
                        "name": "ProvidersKrb5Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the KRB5 provider.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersKrb5"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the KRB5 provider.",
                "operationId": "updateProvidersKrb5ById",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersKrb5IdParams",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersKrb5IdParams"
                        }
                    },
                    {
                        "description": "Modify the KRB5 provider.",
                        "in": "path",
                        "name": "ProvidersKrb5Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/ldap": {
            "get": {
                "description": "List all LDAP providers.",
                "operationId": "listProvidersLdap",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all LDAP providers.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersLdap"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new LDAP provider.",
                "operationId": "createProvidersLdapItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersLdapItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersLdapItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new LDAP provider.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/ldap/{ProvidersLdapId}": {
            "delete": {
                "description": "Delete the LDAP provider.",
                "operationId": "deleteProvidersLdapById",
                "parameters": [
                    {
                        "description": "Delete the LDAP provider.",
                        "in": "path",
                        "name": "ProvidersLdapId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the LDAP provider.",
                "operationId": "getProvidersLdapById",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the LDAP provider.",
                        "in": "path",
                        "name": "ProvidersLdapId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the LDAP provider.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersLdap"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the LDAP provider.",
                "operationId": "updateProvidersLdapById",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersLdapIdParams",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersLdapIdParams"
                        }
                    },
                    {
                        "description": "Modify the LDAP provider.",
                        "in": "path",
                        "name": "ProvidersLdapId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/local": {
            "get": {
                "description": "List all local providers.",
                "operationId": "getProvidersLocal",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all local providers.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersLocal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/local/{ProvidersLocalId}": {
            "delete": {
                "description": "Delete the local provider.",
                "operationId": "deleteProvidersLocalById",
                "parameters": [
                    {
                        "description": "Delete the local provider.",
                        "in": "path",
                        "name": "ProvidersLocalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the local provider.",
                "operationId": "getProvidersLocalById",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the local provider.",
                        "in": "path",
                        "name": "ProvidersLocalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the local provider.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersLocal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the local provider.",
                "operationId": "updateProvidersLocalById",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersLocalIdParams",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersLocalIdParams"
                        }
                    },
                    {
                        "description": "Modify the local provider.",
                        "in": "path",
                        "name": "ProvidersLocalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/nis": {
            "get": {
                "description": "List all NIS providers.",
                "operationId": "listProvidersNis",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all NIS providers.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersNis"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new NIS provider.",
                "operationId": "createProvidersNisItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersNisItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersNisItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new NIS provider.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/nis/{ProvidersNisId}": {
            "delete": {
                "description": "Delete the NIS provider.",
                "operationId": "deleteProvidersNisById",
                "parameters": [
                    {
                        "description": "Delete the NIS provider.",
                        "in": "path",
                        "name": "ProvidersNisId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the NIS provider.",
                "operationId": "getProvidersNisById",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the NIS provider.",
                        "in": "path",
                        "name": "ProvidersNisId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the NIS provider.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersNis"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the NIS provider.",
                "operationId": "updateProvidersNisById",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersNisIdParams",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersNisIdParams"
                        }
                    },
                    {
                        "description": "Modify the NIS provider.",
                        "in": "path",
                        "name": "ProvidersNisId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/summary": {
            "get": {
                "description": "Retrieve the summary information.",
                "operationId": "getProvidersSummary",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the summary information.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/roles": {
            "get": {
                "description": "List all roles.",
                "operationId": "listAuthRoles",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Filter users by zone.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all roles.",
                        "schema": {
                            "$ref": "#/definitions/AuthRolesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new role.",
                "operationId": "createAuthRole",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AuthRole",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthRoleCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new role.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/roles/{AuthRoleId}": {
            "delete": {
                "description": "Delete the role.",
                "operationId": "deleteAuthRole",
                "parameters": [
                    {
                        "description": "Delete the role.",
                        "in": "path",
                        "name": "AuthRoleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the role information.",
                "operationId": "getAuthRole",
                "parameters": [
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Retrieve the role information.",
                        "in": "path",
                        "name": "AuthRoleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the role information.",
                        "schema": {
                            "$ref": "#/definitions/AuthRoles"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the role.",
                "operationId": "updateAuthRole",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AuthRole",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthRole"
                        }
                    },
                    {
                        "description": "Modify the role.",
                        "in": "path",
                        "name": "AuthRoleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/roles/{Role}/members": {
            "get": {
                "description": "List all the members of the role.",
                "operationId": "listRoleMembers",
                "parameters": [
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "in": "path",
                        "name": "Role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all the members of the role.",
                        "schema": {
                            "$ref": "#/definitions/GroupMembers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthRoles"
                ]
            },
            "post": {
                "description": "Add a member to the role.",
                "operationId": "createRoleMember",
                "parameters": [
                    {
                        "in": "body",
                        "name": "RoleMember",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupMember"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add a member to the role.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthRoles"
                ]
            }
        },
        "/platform/1/auth/roles/{Role}/members/{RoleMemberId}": {
            "delete": {
                "description": "Remove a member from the role.",
                "operationId": "deleteRoleMember",
                "parameters": [
                    {
                        "description": "Remove a member from the role.",
                        "in": "path",
                        "name": "RoleMemberId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthRoles"
                ]
            }
        },
        "/platform/1/auth/roles/{Role}/privileges": {
            "get": {
                "description": "List all privileges in the role.",
                "operationId": "listRolePrivileges",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all privileges in the role.",
                        "schema": {
                            "$ref": "#/definitions/RolePrivileges"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthRoles"
                ]
            },
            "post": {
                "description": "Add a privilege to the role.",
                "operationId": "createRolePrivilege",
                "parameters": [
                    {
                        "in": "body",
                        "name": "RolePrivilege",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthIdNtokenPrivilegeItem"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add a privilege to the role.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthRoles"
                ]
            }
        },
        "/platform/1/auth/roles/{Role}/privileges/{RolePrivilegeId}": {
            "delete": {
                "description": "Remove a privilege from a role.",
                "operationId": "deleteRolePrivilege",
                "parameters": [
                    {
                        "description": "Remove a privilege from a role.",
                        "in": "path",
                        "name": "RolePrivilegeId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthRoles"
                ]
            }
        },
        "/platform/1/auth/settings/global": {
            "get": {
                "description": "Retrieve the global settings.",
                "operationId": "getSettingsGlobal",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Zone which contains any per-zone settings.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the global settings.",
                        "schema": {
                            "$ref": "#/definitions/SettingsGlobal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the global settings.",
                "operationId": "updateSettingsGlobal",
                "parameters": [
                    {
                        "description": "Zone which contains any per-zone settings.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "SettingsGlobal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsGlobalGlobalSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/settings/krb5/defaults": {
            "get": {
                "description": "Retrieve the krb5 settings.",
                "operationId": "getSettingsKrb5Defaults",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the krb5 settings.",
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5Defaults"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the krb5 settings.",
                "operationId": "updateSettingsKrb5Defaults",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsKrb5Defaults",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5DefaultsKrb5Settings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/settings/krb5/domains": {
            "get": {
                "description": "Retrieve the krb5 settings for domains.",
                "operationId": "listSettingsKrb5Domains",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the krb5 settings for domains.",
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5DomainsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new krb5 domain.",
                "operationId": "createSettingsKrb5Domain",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsKrb5Domain",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5DomainCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new krb5 domain.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/settings/krb5/domains/{SettingsKrb5DomainId}": {
            "delete": {
                "description": "Remove a krb5 domain.",
                "operationId": "deleteSettingsKrb5Domain",
                "parameters": [
                    {
                        "description": "Remove a krb5 domain.",
                        "in": "path",
                        "name": "SettingsKrb5DomainId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "View the krb5 domain settings.",
                "operationId": "getSettingsKrb5Domain",
                "parameters": [
                    {
                        "description": "View the krb5 domain settings.",
                        "in": "path",
                        "name": "SettingsKrb5DomainId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View the krb5 domain settings.",
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5Domains"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the krb5 domain settings.",
                "operationId": "updateSettingsKrb5Domain",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsKrb5Domain",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5Domain"
                        }
                    },
                    {
                        "description": "Modify the krb5 domain settings.",
                        "in": "path",
                        "name": "SettingsKrb5DomainId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/settings/krb5/realms": {
            "get": {
                "description": "Retrieve the krb5 settings for realms.",
                "operationId": "listSettingsKrb5Realms",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the krb5 settings for realms.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new krb5 realm.",
                "operationId": "createSettingsKrb5Realm",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsKrb5Realm",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5RealmCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new krb5 realm.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/settings/krb5/realms/{SettingsKrb5RealmId}": {
            "delete": {
                "description": "Remove a realm.",
                "operationId": "deleteSettingsKrb5Realm",
                "parameters": [
                    {
                        "description": "Remove a realm.",
                        "in": "path",
                        "name": "SettingsKrb5RealmId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the krb5 settings for realms.",
                "operationId": "getSettingsKrb5Realm",
                "parameters": [
                    {
                        "description": "Retrieve the krb5 settings for realms.",
                        "in": "path",
                        "name": "SettingsKrb5RealmId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the krb5 settings for realms.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the krb5 realm settings.",
                "operationId": "updateSettingsKrb5Realm",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsKrb5Realm",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5Realm"
                        }
                    },
                    {
                        "description": "Modify the krb5 realm settings.",
                        "in": "path",
                        "name": "SettingsKrb5RealmId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/settings/mapping": {
            "get": {
                "description": "Retrieve the mapping settings.",
                "operationId": "getSettingsMapping",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Access zone which contains mapping settings.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the mapping settings.",
                        "schema": {
                            "$ref": "#/definitions/SettingsMapping"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the mapping settings.",
                "operationId": "updateSettingsMapping",
                "parameters": [
                    {
                        "description": "Access zone which contains mapping settings.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "SettingsMapping",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsMappingMappingSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/shells": {
            "get": {
                "description": "List all shells.",
                "operationId": "getAuthShells",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all shells.",
                        "schema": {
                            "$ref": "#/definitions/AuthShells"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/users": {
            "delete": {
                "description": "Flush the users cache.",
                "operationId": "deleteAuthUsers",
                "parameters": [
                    {
                        "description": "If true, only flush cached objects.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter users by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter users by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "List all users.",
                "operationId": "listAuthUsers",
                "parameters": [
                    {
                        "description": "Filter users by domain.",
                        "in": "query",
                        "name": "domain",
                        "type": "string"
                    },
                    {
                        "description": "Filter users by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If true, only return cached objects.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter users by name prefix.",
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Filter users by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Enumerate all users that a group is a member of.",
                        "in": "query",
                        "name": "query_member_of",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all users.",
                        "schema": {
                            "$ref": "#/definitions/AuthUsersExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new user.",
                "operationId": "createAuthUser",
                "parameters": [
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Optional provider type.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "AuthUser",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthUserCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new user.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/users/{AuthUserId}": {
            "delete": {
                "description": "Delete the user.",
                "operationId": "deleteAuthUser",
                "parameters": [
                    {
                        "description": "If true, flush the user from the cache.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter users by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter users by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Delete the user.",
                        "in": "path",
                        "name": "AuthUserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the user information.",
                "operationId": "getAuthUser",
                "parameters": [
                    {
                        "description": "If true, only return cached objects.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter users by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter users by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the user information.",
                        "in": "path",
                        "name": "AuthUserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the user information.",
                        "schema": {
                            "$ref": "#/definitions/AuthUsers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the user.",
                "operationId": "updateAuthUser",
                "parameters": [
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Optional provider type.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "AuthUser",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthUser"
                        }
                    },
                    {
                        "description": "Modify the user.",
                        "in": "path",
                        "name": "AuthUserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/users/{User}/change_password": {
            "put": {
                "description": "Change the user's password.",
                "operationId": "updateUserChangePassword",
                "parameters": [
                    {
                        "in": "body",
                        "name": "UserChangePassword",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserChangePassword"
                        }
                    },
                    {
                        "in": "path",
                        "name": "User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthUsers"
                ]
            }
        },
        "/platform/1/auth/users/{User}/member_of": {
            "get": {
                "description": "List all groups the user is a member of.",
                "operationId": "listUserMemberOf",
                "parameters": [
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all groups the user is a member of.",
                        "schema": {
                            "$ref": "#/definitions/UserMemberOf"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthUsers"
                ]
            },
            "post": {
                "description": "Add the user to a group.",
                "operationId": "createUserMemberOfItem",
                "parameters": [
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "UserMemberOfItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupMember"
                        }
                    },
                    {
                        "in": "path",
                        "name": "User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add the user to a group.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthUsers"
                ]
            }
        },
        "/platform/1/auth/users/{User}/member_of/{UserMemberOfMemberOf}": {
            "delete": {
                "description": "Remove the user from the group.",
                "operationId": "deleteUserMemberOfMemberOf",
                "parameters": [
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Remove the user from the group.",
                        "in": "path",
                        "name": "UserMemberOfMemberOf",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "AuthUsers"
                ]
            }
        },
        "/platform/1/auth/wellknowns": {
            "get": {
                "description": "List all wellknown personas.",
                "operationId": "getAuthWellknowns",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all wellknown personas.",
                        "schema": {
                            "$ref": "#/definitions/AuthWellknowns"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/wellknowns/{AuthWellknownId}": {
            "get": {
                "description": "Retrieve the wellknown persona.",
                "operationId": "getAuthWellknown",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the wellknown persona.",
                        "in": "path",
                        "name": "AuthWellknownId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the wellknown persona.",
                        "schema": {
                            "$ref": "#/definitions/AuthWellknowns"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/cloud/accounts": {
            "get": {
                "description": "List all accounts.",
                "operationId": "listCloudAccounts",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all accounts.",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "post": {
                "description": "Create a new account.",
                "operationId": "createCloudAccount",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CloudAccount",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccountCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new account.",
                        "schema": {
                            "$ref": "#/definitions/CreateCloudAccountResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/1/cloud/accounts/{CloudAccountId}": {
            "delete": {
                "description": "Delete cloud account.",
                "operationId": "deleteCloudAccount",
                "parameters": [
                    {
                        "description": "Delete cloud account.",
                        "in": "path",
                        "name": "CloudAccountId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "get": {
                "description": "Retrieve cloud account information.",
                "operationId": "getCloudAccount",
                "parameters": [
                    {
                        "description": "Retrieve cloud account information.",
                        "in": "path",
                        "name": "CloudAccountId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve cloud account information.",
                        "schema": {
                            "$ref": "#/definitions/CloudAccounts"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "put": {
                "description": "Modify cloud account.  All fields are optional, but one or more must be supplied.",
                "operationId": "updateCloudAccount",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CloudAccount",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccount"
                        }
                    },
                    {
                        "description": "Modify cloud account.  All fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "CloudAccountId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/1/cloud/jobs": {
            "get": {
                "description": "List all cloudpools jobs.",
                "operationId": "listCloudJobs",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all cloudpools jobs.",
                        "schema": {
                            "$ref": "#/definitions/CloudJobsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "post": {
                "description": "Create a new job.",
                "operationId": "createCloudJob",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CloudJob",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudJobCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new job.",
                        "schema": {
                            "$ref": "#/definitions/CreateCloudJobResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/1/cloud/jobs-files/{CloudJobsFileId}": {
            "get": {
                "description": "Retrieve files associated with a cloudpool job.",
                "operationId": "getCloudJobsFile",
                "parameters": [
                    {
                        "description": "Retrieve files associated with a cloudpool job.",
                        "in": "path",
                        "name": "CloudJobsFileId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve files associated with a cloudpool job.",
                        "schema": {
                            "$ref": "#/definitions/CloudJobsFiles"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/1/cloud/jobs/{CloudJobId}": {
            "get": {
                "description": "Retrieve cloudpool job information.",
                "operationId": "getCloudJob",
                "parameters": [
                    {
                        "description": "Retrieve cloudpool job information.",
                        "in": "path",
                        "name": "CloudJobId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve cloudpool job information.",
                        "schema": {
                            "$ref": "#/definitions/CloudJobs"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "put": {
                "description": "Modify a running cloudpool job.",
                "operationId": "updateCloudJob",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CloudJob",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudJob"
                        }
                    },
                    {
                        "description": "Modify a running cloudpool job.",
                        "in": "path",
                        "name": "CloudJobId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/1/cloud/pools": {
            "get": {
                "description": "List all pools.",
                "operationId": "listCloudPools",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all pools.",
                        "schema": {
                            "$ref": "#/definitions/CloudPoolsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "post": {
                "description": "Create a new pool.",
                "operationId": "createCloudPool",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CloudPool",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudPoolCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new pool.",
                        "schema": {
                            "$ref": "#/definitions/CreateCloudPoolResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/1/cloud/pools/{CloudPoolId}": {
            "delete": {
                "description": "Delete a cloud pool.",
                "operationId": "deleteCloudPool",
                "parameters": [
                    {
                        "description": "Delete a cloud pool.",
                        "in": "path",
                        "name": "CloudPoolId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "get": {
                "description": "Retrieve cloud pool information",
                "operationId": "getCloudPool",
                "parameters": [
                    {
                        "description": "Retrieve cloud pool information",
                        "in": "path",
                        "name": "CloudPoolId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve cloud pool information",
                        "schema": {
                            "$ref": "#/definitions/CloudPools"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "put": {
                "description": "Modify a cloud pool.  All fields are optional, but one or more must be supplied.",
                "operationId": "updateCloudPool",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CloudPool",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudPool"
                        }
                    },
                    {
                        "description": "Modify a cloud pool.  All fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "CloudPoolId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/1/cloud/settings": {
            "get": {
                "description": "List all cloud settings.",
                "operationId": "getCloudSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all cloud settings.",
                        "schema": {
                            "$ref": "#/definitions/CloudSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateCloudSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CloudSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudSettingsSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/1/cloud/settings/encryption_key": {
            "post": {
                "description": "Regenerate master encryption key.",
                "operationId": "createSettingsEncryptionKeyItem",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Regenerate master encryption key.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/1/cluster/config": {
            "get": {
                "description": "Retrieve the cluster information.",
                "operationId": "getClusterConfig",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the cluster information.",
                        "schema": {
                            "$ref": "#/definitions/ClusterConfig"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/1/cluster/identity": {
            "get": {
                "description": "Retrieve the login information.",
                "operationId": "getClusterIdentity",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the login information.",
                        "schema": {
                            "$ref": "#/definitions/ClusterIdentity"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/1/cluster/statfs": {
            "get": {
                "description": "Retrieve the filesystem statistics.",
                "operationId": "getClusterStatfs",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the filesystem statistics.",
                        "schema": {
                            "$ref": "#/definitions/ClusterStatfs"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/1/cluster/time": {
            "get": {
                "description": "Retrieve the current cluster time.",
                "operationId": "getClusterTime",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the current cluster time.",
                        "schema": {
                            "$ref": "#/definitions/ClusterTime"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/1/debug/stats": {
            "delete": {
                "description": "Clear per-resource statistics counters.",
                "operationId": "deleteDebugStats",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Debug"
                ]
            },
            "get": {
                "description": "List cumulative call statistics for each resource.",
                "operationId": "getDebugStats",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List cumulative call statistics for each resource.",
                        "schema": {
                            "$ref": "#/definitions/DebugStats"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Debug"
                ]
            }
        },
        "/platform/1/dedupe/dedupe-summary": {
            "get": {
                "description": "Return summary information about dedupe.",
                "operationId": "getDedupeDedupeSummary",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return summary information about dedupe.",
                        "schema": {
                            "$ref": "#/definitions/DedupeDedupeSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Dedupe"
                ]
            }
        },
        "/platform/1/dedupe/reports": {
            "get": {
                "description": "List dedupe reports.",
                "operationId": "getDedupeReports",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "enum": [
                            "id",
                            "start_time",
                            "end_time"
                        ],
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Restrict the query to reports at or after the given time, in seconds since the Epoch.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "Restrict the query to reports at or before the given time, in seconds since the Epoch.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    },
                    {
                        "description": "Restrict the query to the given job ID.",
                        "in": "query",
                        "name": "job_id",
                        "type": "integer"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Restrict the query to the given job type.",
                        "enum": [
                            "Dedupe",
                            "DedupeAssessment"
                        ],
                        "in": "query",
                        "name": "job_type",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List dedupe reports.",
                        "schema": {
                            "$ref": "#/definitions/DedupeReportsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Dedupe"
                ]
            }
        },
        "/platform/1/dedupe/reports/{DedupeReportId}": {
            "get": {
                "description": "Retrieve a report for a single dedupe job.",
                "operationId": "getDedupeReport",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve a report for a single dedupe job.",
                        "in": "path",
                        "name": "DedupeReportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve a report for a single dedupe job.",
                        "schema": {
                            "$ref": "#/definitions/DedupeReports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Dedupe"
                ]
            }
        },
        "/platform/1/dedupe/settings": {
            "get": {
                "description": "Retrieve the dedupe settings.",
                "operationId": "getDedupeSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the dedupe settings.",
                        "schema": {
                            "$ref": "#/definitions/DedupeSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Dedupe"
                ]
            },
            "put": {
                "description": "Modify the dedupe settings. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateDedupeSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "DedupeSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DedupeSettingsExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Dedupe"
                ]
            }
        },
        "/platform/1/filepool/default-policy": {
            "get": {
                "description": "List default file pool policy.",
                "operationId": "getFilepoolDefaultPolicy",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List default file pool policy.",
                        "schema": {
                            "$ref": "#/definitions/FilepoolDefaultPolicy"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            },
            "put": {
                "description": "Set default file pool policy.",
                "operationId": "updateFilepoolDefaultPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FilepoolDefaultPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilepoolDefaultPolicyExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            }
        },
        "/platform/1/filepool/policies": {
            "get": {
                "description": "List all policies.",
                "operationId": "listFilepoolPolicies",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all policies.",
                        "schema": {
                            "$ref": "#/definitions/FilepoolPolicies"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            },
            "post": {
                "description": "Create a new policy.",
                "operationId": "createFilepoolPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FilepoolPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilepoolPolicyCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new policy.",
                        "schema": {
                            "$ref": "#/definitions/CreateFilepoolPolicyResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            }
        },
        "/platform/1/filepool/policies/{FilepoolPolicyId}": {
            "delete": {
                "description": "Delete file pool policy.",
                "operationId": "deleteFilepoolPolicy",
                "parameters": [
                    {
                        "description": "Delete file pool policy.",
                        "in": "path",
                        "name": "FilepoolPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            },
            "get": {
                "description": "Retrieve file pool policy information.",
                "operationId": "getFilepoolPolicy",
                "parameters": [
                    {
                        "description": "Retrieve file pool policy information.",
                        "in": "path",
                        "name": "FilepoolPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve file pool policy information.",
                        "schema": {
                            "$ref": "#/definitions/FilepoolPolicies"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            },
            "put": {
                "description": "Modify file pool policy. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateFilepoolPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FilepoolPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilepoolPolicy"
                        }
                    },
                    {
                        "description": "Modify file pool policy. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "FilepoolPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            }
        },
        "/platform/1/filepool/templates": {
            "get": {
                "description": "List all templates.",
                "operationId": "getFilepoolTemplates",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all templates.",
                        "schema": {
                            "$ref": "#/definitions/FilepoolTemplates"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            }
        },
        "/platform/1/filepool/templates/{FilepoolTemplateId}": {
            "get": {
                "description": "List all templates.",
                "operationId": "getFilepoolTemplate",
                "parameters": [
                    {
                        "description": "List all templates.",
                        "in": "path",
                        "name": "FilepoolTemplateId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all templates.",
                        "schema": {
                            "$ref": "#/definitions/FilepoolTemplates"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            }
        },
        "/platform/1/filesystem/settings/access-time": {
            "get": {
                "description": "Retrieve settings for access time.",
                "operationId": "getSettingsAccessTime",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve settings for access time.",
                        "schema": {
                            "$ref": "#/definitions/SettingsAccessTime"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filesystem"
                ]
            },
            "put": {
                "description": "Set settings for access time.",
                "operationId": "updateSettingsAccessTime",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsAccessTime",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsAccessTimeExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filesystem"
                ]
            }
        },
        "/platform/1/fsa/results": {
            "get": {
                "description": "List all results.",
                "operationId": "getFsaResults",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all results.",
                        "schema": {
                            "$ref": "#/definitions/FsaResultsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            }
        },
        "/platform/1/fsa/results/{FsaResultId}": {
            "delete": {
                "description": "Delete the result set.",
                "operationId": "deleteFsaResult",
                "parameters": [
                    {
                        "description": "Delete the result set.",
                        "in": "path",
                        "name": "FsaResultId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            },
            "get": {
                "description": "Retrieve result set information.",
                "operationId": "getFsaResult",
                "parameters": [
                    {
                        "description": "Retrieve result set information.",
                        "in": "path",
                        "name": "FsaResultId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve result set information.",
                        "schema": {
                            "$ref": "#/definitions/FsaResults"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            },
            "put": {
                "description": "Modify result set. Only the pinned property can be changed at this time.",
                "operationId": "updateFsaResult",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FsaResult",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FsaResult"
                        }
                    },
                    {
                        "description": "Modify result set. Only the pinned property can be changed at this time.",
                        "in": "path",
                        "name": "FsaResultId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            }
        },
        "/platform/1/fsa/settings": {
            "delete": {
                "description": "Revert all settings to their defaults.",
                "operationId": "deleteFsaSettings",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            },
            "get": {
                "description": "List all settings.",
                "operationId": "getFsaSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all settings.",
                        "schema": {
                            "$ref": "#/definitions/FsaSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateFsaSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FsaSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FsaSettingsSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            }
        },
        "/platform/1/job/events": {
            "get": {
                "description": "List job events.",
                "operationId": "getJobEvents",
                "parameters": [
                    {
                        "description": "Restrict the query to events at or after the given time, in seconds since the Epoch.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "Restrict the query to events before the given time, in seconds since the Epoch.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    },
                    {
                        "description": "Restrict the query to the given job ID.",
                        "in": "query",
                        "name": "job_id",
                        "type": "integer"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Restrict the query to the given job type.",
                        "in": "query",
                        "name": "job_type",
                        "type": "string"
                    },
                    {
                        "description": "Restrict the query to events containing the given state.",
                        "enum": [
                            "running",
                            "paused_user",
                            "paused_system",
                            "paused_policy",
                            "paused_priority",
                            "cancelled_user",
                            "cancelled_system",
                            "failed",
                            "succeeded",
                            "unknown"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List job events.",
                        "schema": {
                            "$ref": "#/definitions/JobEvents"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/job/job-summary": {
            "get": {
                "description": "View job engine status.",
                "operationId": "getJobJobSummary",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "View job engine status.",
                        "schema": {
                            "$ref": "#/definitions/JobJobSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/job/jobs": {
            "get": {
                "description": "List running and paused jobs.",
                "operationId": "listJobJobs",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If true, other arguments are ignored, and the query will return all results, unsorted, as quickly as possible.",
                        "in": "query",
                        "name": "batch",
                        "type": "boolean"
                    },
                    {
                        "description": "Limit the results to jobs in the specified state.",
                        "enum": [
                            "running",
                            "paused_user",
                            "paused_system",
                            "paused_policy",
                            "paused_priority"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List running and paused jobs.",
                        "schema": {
                            "$ref": "#/definitions/JobJobsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            },
            "post": {
                "description": "Queue a new instance of a job type.",
                "operationId": "createJobJob",
                "parameters": [
                    {
                        "in": "body",
                        "name": "JobJob",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobJobCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Queue a new instance of a job type.",
                        "schema": {
                            "$ref": "#/definitions/CreateJobJobResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/job/jobs/{JobJobId}": {
            "get": {
                "description": "View a single job instance.",
                "operationId": "getJobJob",
                "parameters": [
                    {
                        "description": "View a single job instance.",
                        "in": "path",
                        "name": "JobJobId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single job instance.",
                        "schema": {
                            "$ref": "#/definitions/JobJobs"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            },
            "put": {
                "description": "Modify a running or paused job instance.  All input fields are optional, but one or more must be supplied.",
                "operationId": "updateJobJob",
                "parameters": [
                    {
                        "in": "body",
                        "name": "JobJob",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobJob"
                        }
                    },
                    {
                        "description": "Modify a running or paused job instance.  All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "JobJobId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/job/policies": {
            "get": {
                "description": "List job impact policies.",
                "operationId": "listJobPolicies",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List job impact policies.",
                        "schema": {
                            "$ref": "#/definitions/JobPoliciesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            },
            "post": {
                "description": "Create a new job impact policy.",
                "operationId": "createJobPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "JobPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobPolicyCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new job impact policy.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/job/policies/{JobPolicyId}": {
            "delete": {
                "description": "Delete a job impact policy.  System policies may not be deleted.",
                "operationId": "deleteJobPolicy",
                "parameters": [
                    {
                        "description": "Delete a job impact policy.  System policies may not be deleted.",
                        "in": "path",
                        "name": "JobPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            },
            "get": {
                "description": "View a single job impact policy.",
                "operationId": "getJobPolicy",
                "parameters": [
                    {
                        "description": "View a single job impact policy.",
                        "in": "path",
                        "name": "JobPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single job impact policy.",
                        "schema": {
                            "$ref": "#/definitions/JobPolicies"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            },
            "put": {
                "description": "Modify a job impact policy.",
                "operationId": "updateJobPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "JobPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobPolicy"
                        }
                    },
                    {
                        "description": "Modify a job impact policy.",
                        "in": "path",
                        "name": "JobPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/job/reports": {
            "get": {
                "description": "List job reports.",
                "operationId": "getJobReports",
                "parameters": [
                    {
                        "description": "Restrict the query to reports at or after the given time, in seconds since the Epoch.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "Restrict the query to reports before the given time, in seconds since the Epoch.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    },
                    {
                        "description": "Restrict the query to the given job ID.",
                        "in": "query",
                        "name": "job_id",
                        "type": "integer"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Restrict the query to the given job type.",
                        "in": "query",
                        "name": "job_type",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List job reports.",
                        "schema": {
                            "$ref": "#/definitions/JobReports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/job/statistics": {
            "get": {
                "description": "View job engine statistics.",
                "operationId": "getJobStatistics",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "View job engine statistics.",
                        "schema": {
                            "$ref": "#/definitions/JobStatistics"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/job/types": {
            "get": {
                "description": "List job types.",
                "operationId": "getJobTypes",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Whether to show all job types, including hidden ones.  Defaults to false.",
                        "in": "query",
                        "name": "show_all",
                        "type": "boolean"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List job types.",
                        "schema": {
                            "$ref": "#/definitions/JobTypesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/job/types/{JobTypeId}": {
            "get": {
                "description": "Retrieve job type information.",
                "operationId": "getJobType",
                "parameters": [
                    {
                        "description": "Retrieve job type information.",
                        "in": "path",
                        "name": "JobTypeId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve job type information.",
                        "schema": {
                            "$ref": "#/definitions/JobTypes"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            },
            "put": {
                "description": "Modify the job type.  All input fields are optional, but one or more must be supplied.",
                "operationId": "updateJobType",
                "parameters": [
                    {
                        "in": "body",
                        "name": "JobType",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobType"
                        }
                    },
                    {
                        "description": "Modify the job type.  All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "JobTypeId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/license/licenses": {
            "get": {
                "description": "Retrieve license information for all licensable products.",
                "operationId": "listLicenseLicenses",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve license information for all licensable products.",
                        "schema": {
                            "$ref": "#/definitions/LicenseLicenses"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "License"
                ]
            },
            "post": {
                "description": "Install a new license key.",
                "operationId": "createLicenseLicense",
                "parameters": [
                    {
                        "in": "body",
                        "name": "LicenseLicense",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LicenseLicenseCreateParams"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "License"
                ]
            }
        },
        "/platform/1/license/licenses/{LicenseLicenseId}": {
            "get": {
                "description": "Retrieve license information for the feature.",
                "operationId": "getLicenseLicense",
                "parameters": [
                    {
                        "description": "Retrieve license information for the feature.",
                        "in": "path",
                        "name": "LicenseLicenseId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve license information for the feature.",
                        "schema": {
                            "$ref": "#/definitions/LicenseLicenses"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "License"
                ]
            }
        },
        "/platform/1/protocols/hdfs/proxyusers": {
            "get": {
                "description": "List all proxyusers.",
                "operationId": "listHdfsProxyusers",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all proxyusers.",
                        "schema": {
                            "$ref": "#/definitions/HdfsProxyusers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Create a new HDFS proxyuser.",
                "operationId": "createHdfsProxyuser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HdfsProxyuser",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HdfsProxyuserCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new HDFS proxyuser.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/hdfs/proxyusers/{HdfsProxyuserId}": {
            "delete": {
                "description": "Delete a a HDFS proxyuser.",
                "operationId": "deleteHdfsProxyuser",
                "parameters": [
                    {
                        "description": "Delete a a HDFS proxyuser.",
                        "in": "path",
                        "name": "HdfsProxyuserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "List all proxyusers.",
                "operationId": "getHdfsProxyuser",
                "parameters": [
                    {
                        "description": "List all proxyusers.",
                        "in": "path",
                        "name": "HdfsProxyuserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all proxyusers.",
                        "schema": {
                            "$ref": "#/definitions/HdfsProxyusers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Create a new HDFS proxyuser.",
                "operationId": "updateHdfsProxyuser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HdfsProxyuser",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "description": "Create a new HDFS proxyuser.",
                        "in": "path",
                        "name": "HdfsProxyuserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/hdfs/proxyusers/{Name}/members": {
            "get": {
                "description": "List all the members of the HDFS proxyuser.",
                "operationId": "listProxyusersNameMembers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all the members of the HDFS proxyuser.",
                        "schema": {
                            "$ref": "#/definitions/GroupMembers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "ProtocolsHdfs"
                ]
            },
            "post": {
                "description": "Add a member to the HDFS proxyuser.",
                "operationId": "createProxyusersNameMember",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProxyusersNameMember",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupMember"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add a member to the HDFS proxyuser.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "ProtocolsHdfs"
                ]
            }
        },
        "/platform/1/protocols/hdfs/proxyusers/{Name}/members/{ProxyusersNameMemberId}": {
            "delete": {
                "description": "Remove a member from the HDFS proxyuser.",
                "operationId": "deleteProxyusersNameMember",
                "parameters": [
                    {
                        "description": "Remove a member from the HDFS proxyuser.",
                        "in": "path",
                        "name": "ProxyusersNameMemberId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "ProtocolsHdfs"
                ]
            },
            "put": {
                "description": "Create a new HDFS proxyuser.",
                "operationId": "updateProxyusersNameMember",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProxyusersNameMember",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "description": "Create a new HDFS proxyuser.",
                        "in": "path",
                        "name": "ProxyusersNameMemberId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "ProtocolsHdfs"
                ]
            }
        },
        "/platform/1/protocols/hdfs/racks": {
            "get": {
                "description": "List all racks.",
                "operationId": "listHdfsRacks",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all racks.",
                        "schema": {
                            "$ref": "#/definitions/HdfsRacksExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Create a new HDFS rack.",
                "operationId": "createHdfsRack",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HdfsRack",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HdfsRackCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new HDFS rack.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/hdfs/racks/{HdfsRackId}": {
            "delete": {
                "description": "Delete the HDFS rack.",
                "operationId": "deleteHdfsRack",
                "parameters": [
                    {
                        "description": "Delete the HDFS rack.",
                        "in": "path",
                        "name": "HdfsRackId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "Retrieve the HDFS rack.",
                "operationId": "getHdfsRack",
                "parameters": [
                    {
                        "description": "Retrieve the HDFS rack.",
                        "in": "path",
                        "name": "HdfsRackId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the HDFS rack.",
                        "schema": {
                            "$ref": "#/definitions/HdfsRacks"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the HDFS rack",
                "operationId": "updateHdfsRack",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HdfsRack",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HdfsRack"
                        }
                    },
                    {
                        "description": "Modify the HDFS rack",
                        "in": "path",
                        "name": "HdfsRackId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/hdfs/settings": {
            "get": {
                "description": "Retrieve HDFS properties.",
                "operationId": "getHdfsSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve HDFS properties.",
                        "schema": {
                            "$ref": "#/definitions/HdfsSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify HDFS properties.",
                "operationId": "updateHdfsSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HdfsSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HdfsSettingsSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/openfiles": {
            "get": {
                "description": "List open files.",
                "operationId": "getSmbOpenfiles",
                "parameters": [
                    {
                        "description": "Order results by this field. Default is id.",
                        "enum": [
                            "id",
                            "file",
                            "user",
                            "locks"
                        ],
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List open files.",
                        "schema": {
                            "$ref": "#/definitions/SmbOpenfiles"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/openfiles/{SmbOpenfileId}": {
            "delete": {
                "description": "Close the file in the SMB server.",
                "operationId": "deleteSmbOpenfile",
                "parameters": [
                    {
                        "description": "Close the file in the SMB server.",
                        "in": "path",
                        "name": "SmbOpenfileId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/sessions": {
            "get": {
                "description": "List open sessions.",
                "operationId": "getSmbSessions",
                "parameters": [
                    {
                        "description": "Order results by this field.",
                        "enum": [
                            "computer",
                            "user",
                            "client_type",
                            "openfiles",
                            "active_time",
                            "idle_time",
                            "guest_login",
                            "encryption"
                        ],
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List open sessions.",
                        "schema": {
                            "$ref": "#/definitions/SmbSessions"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/sessions/{Computer}/{SmbSessionsComputerUser}": {
            "delete": {
                "description": "Close the SMB session.",
                "operationId": "deleteSmbSessionsComputerUser",
                "parameters": [
                    {
                        "description": "Close the SMB session.",
                        "in": "path",
                        "name": "SmbSessionsComputerUser",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Computer",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/sessions/{SmbSessionId}": {
            "delete": {
                "description": "Close the SMB session.",
                "operationId": "deleteSmbSession",
                "parameters": [
                    {
                        "description": "Close the SMB session.",
                        "in": "path",
                        "name": "SmbSessionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/settings/global": {
            "get": {
                "description": "List all settings.",
                "operationId": "getSmbSettingsGlobal",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all settings.",
                        "schema": {
                            "$ref": "#/definitions/SmbSettingsGlobal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateSmbSettingsGlobal",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SmbSettingsGlobal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmbSettingsGlobalSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/settings/share": {
            "get": {
                "description": "List all settings.",
                "operationId": "getSmbSettingsShare",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Zone which contains these share settings.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all settings.",
                        "schema": {
                            "$ref": "#/definitions/SmbSettingsShare"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateSmbSettingsShare",
                "parameters": [
                    {
                        "description": "Zone which contains these share settings.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "SmbSettingsShare",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmbSettingsShareSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/shares": {
            "delete": {
                "description": "Delete multiple smb shares.",
                "operationId": "deleteSmbShares",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "List all shares.",
                "operationId": "listSmbShares",
                "parameters": [
                    {
                        "description": "Order results by this field. Default is id.",
                        "enum": [
                            "id",
                            "name",
                            "path",
                            "description"
                        ],
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Zone which contains this share.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If true, resolve group and user names in personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all shares.",
                        "schema": {
                            "$ref": "#/definitions/SmbSharesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Create a new share.",
                "operationId": "createSmbShare",
                "parameters": [
                    {
                        "description": "Zone which contains this share.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "SmbShare",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmbShareCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new share.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/shares-summary": {
            "get": {
                "description": "Return summary information about shares.",
                "operationId": "getSmbSharesSummary",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return summary information about shares.",
                        "schema": {
                            "$ref": "#/definitions/SmbSharesSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/shares/{SmbShareId}": {
            "delete": {
                "description": "Delete the share.",
                "operationId": "deleteSmbShare",
                "parameters": [
                    {
                        "description": "Zone which contains this share.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Delete the share.",
                        "in": "path",
                        "name": "SmbShareId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "Retrieve share.",
                "operationId": "getSmbShare",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "If true, resolve group and user names in personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Zone which contains this share.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve share.",
                        "in": "path",
                        "name": "SmbShareId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve share.",
                        "schema": {
                            "$ref": "#/definitions/SmbShares"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify share. All input fields are optional, but one or must be supplied.",
                "operationId": "updateSmbShare",
                "parameters": [
                    {
                        "description": "Zone which contains this share.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "SmbShare",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmbShare"
                        }
                    },
                    {
                        "description": "Modify share. All input fields are optional, but one or must be supplied.",
                        "in": "path",
                        "name": "SmbShareId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/quota/license": {
            "get": {
                "description": "Retrieve license information.",
                "operationId": "getQuotaLicense",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve license information.",
                        "schema": {
                            "$ref": "#/definitions/LicenseLicense"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/quotas": {
            "delete": {
                "description": "Delete all or matching quotas.",
                "operationId": "deleteQuotaQuotas",
                "parameters": [
                    {
                        "description": "Only delete quotas with this enforcement (non-accounting).",
                        "in": "query",
                        "name": "enforced",
                        "type": "boolean"
                    },
                    {
                        "description": "Only delete quotas with this setting for include_snapshots.",
                        "in": "query",
                        "name": "include_snapshots",
                        "type": "boolean"
                    },
                    {
                        "description": "If used with the path argument, delete all quotas at that path or any descendent sub-directory.",
                        "in": "query",
                        "name": "recurse_path_children",
                        "type": "boolean"
                    },
                    {
                        "description": "If used with the path argument, delete all quotas at that path or any parent directory.",
                        "in": "query",
                        "name": "recurse_path_parents",
                        "type": "boolean"
                    },
                    {
                        "description": "Only delete user or group quotas matching this persona (must be used with the corresponding type argument).  Format is <PERSONA_TYPE>:<string/integer>, where PERSONA_TYPE is one of USER, GROUP, SID, ID, or GID.",
                        "in": "query",
                        "name": "persona",
                        "type": "string"
                    },
                    {
                        "description": "Only delete quotas matching this path (see also recurse_path_*).",
                        "in": "query",
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "description": "Only delete quotas matching this type.",
                        "enum": [
                            "directory",
                            "user",
                            "group",
                            "default-user",
                            "default-group"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "List all or matching quotas. Can also be used to retrieve quota state from existing reports. For any query argument not supplied, the default behavior is return all.",
                "operationId": "listQuotaQuotas",
                "parameters": [
                    {
                        "description": "Only list quotas with this enforcement (non-accounting).",
                        "in": "query",
                        "name": "enforced",
                        "type": "boolean"
                    },
                    {
                        "description": "Only list quotas with this setting for include_snapshots.",
                        "in": "query",
                        "name": "include_snapshots",
                        "type": "boolean"
                    },
                    {
                        "description": "Optional named zone to use for user and group resolution.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If used with the path argument, match all quotas at that path or any descendent sub-directory.",
                        "in": "query",
                        "name": "recurse_path_children",
                        "type": "boolean"
                    },
                    {
                        "description": "If true, resolve group and user names in personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "If used with the path argument, match all quotas at that path or any parent directory.",
                        "in": "query",
                        "name": "recurse_path_parents",
                        "type": "boolean"
                    },
                    {
                        "description": "Only list user or group quotas matching this persona (must be used with the corresponding type argument).  Format is <PERSONA_TYPE>:<string/integer>, where PERSONA_TYPE is one of USER, GROUP, SID, ID, or GID.",
                        "in": "query",
                        "name": "persona",
                        "type": "string"
                    },
                    {
                        "description": "Set to true to only list quotas which have exceeded one or more of their thresholds.",
                        "in": "query",
                        "name": "exceeded",
                        "type": "boolean"
                    },
                    {
                        "description": "Only list quotas matching this path (see also recurse_path_*).",
                        "in": "query",
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "description": "Only list quotas matching this type.",
                        "enum": [
                            "directory",
                            "user",
                            "group",
                            "default-user",
                            "default-group"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Use the named report as a source rather than the live quotas. See the /q/quota/reports resource for a list of valid reports.",
                        "in": "query",
                        "name": "report_id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all or matching quotas. Can also be used to retrieve quota state from existing reports. For any query argument not supplied, the default behavior is return all.",
                        "schema": {
                            "$ref": "#/definitions/QuotaQuotasExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "post": {
                "description": "Create a new quota.",
                "operationId": "createQuotaQuota",
                "parameters": [
                    {
                        "description": "Optional named zone to use for user and group resolution.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "QuotaQuota",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuotaQuotaCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new quota.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/quotas-summary": {
            "get": {
                "description": "Return summary information about quotas.",
                "operationId": "getQuotaQuotasSummary",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return summary information about quotas.",
                        "schema": {
                            "$ref": "#/definitions/QuotaQuotasSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/quotas/{Qid}/notifications": {
            "delete": {
                "description": "Delete all quota specific rules. The quota will then use the global rules.",
                "operationId": "deleteQuotaNotifications",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Qid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "QuotaQuotas"
                ]
            },
            "get": {
                "description": "List all rules.",
                "operationId": "listQuotaNotifications",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Qid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all rules.",
                        "schema": {
                            "$ref": "#/definitions/QuotaNotificationsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "QuotaQuotas"
                ]
            },
            "post": {
                "description": "Create a new notification rule specific to this quota.",
                "operationId": "createQuotaNotification",
                "parameters": [
                    {
                        "in": "body",
                        "name": "QuotaNotification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuotaNotificationCreateParams"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Qid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new notification rule specific to this quota.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "QuotaQuotas"
                ]
            },
            "put": {
                "description": "This method creates an empty set of rules so that the global rules are not used. The input must be an empty JSON object.",
                "operationId": "updateQuotaNotifications",
                "parameters": [
                    {
                        "in": "body",
                        "name": "QuotaNotifications",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Qid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "QuotaQuotas"
                ]
            }
        },
        "/platform/1/quota/quotas/{Qid}/notifications/{QuotaNotificationId}": {
            "delete": {
                "description": "Delete the notification rule.",
                "operationId": "deleteQuotaNotification",
                "parameters": [
                    {
                        "description": "Delete the notification rule.",
                        "in": "path",
                        "name": "QuotaNotificationId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Qid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "QuotaQuotas"
                ]
            },
            "get": {
                "description": "Retrieve notification rule information.",
                "operationId": "getQuotaNotification",
                "parameters": [
                    {
                        "description": "Retrieve notification rule information.",
                        "in": "path",
                        "name": "QuotaNotificationId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Qid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve notification rule information.",
                        "schema": {
                            "$ref": "#/definitions/QuotaNotifications"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "QuotaQuotas"
                ]
            },
            "put": {
                "description": "Modify notification rule. All input fields are optional, but one or must be supplied.",
                "operationId": "updateQuotaNotification",
                "parameters": [
                    {
                        "in": "body",
                        "name": "QuotaNotification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuotaNotification"
                        }
                    },
                    {
                        "description": "Modify notification rule. All input fields are optional, but one or must be supplied.",
                        "in": "path",
                        "name": "QuotaNotificationId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Qid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "QuotaQuotas"
                ]
            }
        },
        "/platform/1/quota/quotas/{QuotaQuotaId}": {
            "delete": {
                "description": "Delete the quota.",
                "operationId": "deleteQuotaQuota",
                "parameters": [
                    {
                        "description": "Delete the quota.",
                        "in": "path",
                        "name": "QuotaQuotaId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "Retrieve quota information.",
                "operationId": "getQuotaQuota",
                "parameters": [
                    {
                        "description": "If true, resolve group and user names in personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Optional named zone to use for user and group resolution.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve quota information.",
                        "in": "path",
                        "name": "QuotaQuotaId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve quota information.",
                        "schema": {
                            "$ref": "#/definitions/QuotaQuotas"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "put": {
                "description": "Modify quota. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateQuotaQuota",
                "parameters": [
                    {
                        "in": "body",
                        "name": "QuotaQuota",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuotaQuota"
                        }
                    },
                    {
                        "description": "Modify quota. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "QuotaQuotaId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/reports": {
            "get": {
                "description": "List all or matching reports.",
                "operationId": "listQuotaReports",
                "parameters": [
                    {
                        "description": "Order results by this field.",
                        "enum": [
                            "time",
                            "generated",
                            "type"
                        ],
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Only list reports matching this source.",
                        "enum": [
                            "manual",
                            "scheduled",
                            "all"
                        ],
                        "in": "query",
                        "name": "generated",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Only list reports matching this type.",
                        "enum": [
                            "summary",
                            "detail",
                            "all"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all or matching reports.",
                        "schema": {
                            "$ref": "#/definitions/QuotaReports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "post": {
                "description": "Create a new report. The type of this report is 'manual'; it is also sometimes called 'live' or 'ad-hoc'.",
                "operationId": "createQuotaReport",
                "parameters": [
                    {
                        "in": "body",
                        "name": "QuotaReport",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new report. The type of this report is 'manual'; it is also sometimes called 'live' or 'ad-hoc'.",
                        "schema": {
                            "$ref": "#/definitions/CreateQuotaReportResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/reports/{QuotaReportId}": {
            "delete": {
                "description": "Delete the report.",
                "operationId": "deleteQuotaReport",
                "parameters": [
                    {
                        "description": "Delete the report.",
                        "in": "path",
                        "name": "QuotaReportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "Retrieve report data (XML) or contents (meta-data).",
                "operationId": "getQuotaReport",
                "parameters": [
                    {
                        "description": "Display JSON meta-data contents instead of report data.",
                        "in": "query",
                        "name": "contents",
                        "type": "boolean"
                    },
                    {
                        "description": "Retrieve report data (XML) or contents (meta-data).",
                        "in": "path",
                        "name": "QuotaReportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve report data (XML) or contents (meta-data).",
                        "schema": {
                            "$ref": "#/definitions/ReportAbout"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/reports/{Rid}/about": {
            "get": {
                "description": "Retrieve report meta-data information.",
                "operationId": "getReportAbout",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Rid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve report meta-data information.",
                        "schema": {
                            "$ref": "#/definitions/ReportAbout"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "QuotaReports"
                ]
            }
        },
        "/platform/1/quota/settings/mappings": {
            "delete": {
                "description": "Delete all rules.",
                "operationId": "deleteSettingsMappings",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "List all rules.",
                "operationId": "listSettingsMappings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all rules.",
                        "schema": {
                            "$ref": "#/definitions/SettingsMappings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "post": {
                "description": "Create a new rule. The new rule must not conflict with an existing rule (e.g. match both the type and domain fields).",
                "operationId": "createSettingsMapping",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsMapping",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsMappingExtendedExtended"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new rule. The new rule must not conflict with an existing rule (e.g. match both the type and domain fields).",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/settings/mappings/{SettingsMappingId}": {
            "delete": {
                "description": "Delete the mapping.",
                "operationId": "deleteSettingsMapping",
                "parameters": [
                    {
                        "description": "Delete the mapping.",
                        "in": "path",
                        "name": "SettingsMappingId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "Retrieve the mapping information.",
                "operationId": "getSettingsMapping",
                "parameters": [
                    {
                        "description": "Retrieve the mapping information.",
                        "in": "path",
                        "name": "SettingsMappingId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the mapping information.",
                        "schema": {
                            "$ref": "#/definitions/SettingsMappings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "put": {
                "description": "Modify the mapping.",
                "operationId": "updateSettingsMapping",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsMapping",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsMappingExtended"
                        }
                    },
                    {
                        "description": "Modify the mapping.",
                        "in": "path",
                        "name": "SettingsMappingId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/settings/notifications": {
            "delete": {
                "description": "Delete all rules.",
                "operationId": "deleteSettingsNotifications",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "List all rules.",
                "operationId": "listSettingsNotifications",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all rules.",
                        "schema": {
                            "$ref": "#/definitions/QuotaNotificationsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "post": {
                "description": "Create a new global notification rule.",
                "operationId": "createSettingsNotification",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsNotification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuotaNotificationCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new global notification rule.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/settings/notifications/{SettingsNotificationId}": {
            "delete": {
                "description": "Delete the notification rule.",
                "operationId": "deleteSettingsNotification",
                "parameters": [
                    {
                        "description": "Delete the notification rule.",
                        "in": "path",
                        "name": "SettingsNotificationId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "Retrieve notification rule information.",
                "operationId": "getSettingsNotification",
                "parameters": [
                    {
                        "description": "Retrieve notification rule information.",
                        "in": "path",
                        "name": "SettingsNotificationId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve notification rule information.",
                        "schema": {
                            "$ref": "#/definitions/QuotaNotifications"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "put": {
                "description": "Modify notification rule. All input fields are optional, but one or must be supplied.",
                "operationId": "updateSettingsNotification",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsNotification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuotaNotification"
                        }
                    },
                    {
                        "description": "Modify notification rule. All input fields are optional, but one or must be supplied.",
                        "in": "path",
                        "name": "SettingsNotificationId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/settings/reports": {
            "get": {
                "description": "List all settings.",
                "operationId": "getSettingsReports",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all settings.",
                        "schema": {
                            "$ref": "#/definitions/SettingsReports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateSettingsReports",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsReports",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsReportsExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/remotesupport/connectemc": {
            "get": {
                "description": "List all settings.",
                "operationId": "getRemotesupportConnectemc",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all settings.",
                        "schema": {
                            "$ref": "#/definitions/RemotesupportConnectemc"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Remotesupport"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateRemotesupportConnectemc",
                "parameters": [
                    {
                        "in": "body",
                        "name": "RemotesupportConnectemc",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RemotesupportConnectemcConnectemc"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Remotesupport"
                ]
            }
        },
        "/platform/1/snapshot/aliases": {
            "delete": {
                "description": "Delete all or matching snapshot aliases.",
                "operationId": "deleteSnapshotAliases",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "List all or matching snapshot aliases.",
                "operationId": "listSnapshotAliases",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.  Choices are id, name, snapshot, and created.  Default is id.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all or matching snapshot aliases.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotAliasesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "post": {
                "description": "Create a new snapshot alias.",
                "operationId": "createSnapshotAliase",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotAliase",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotAliaseCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new snapshot alias.",
                        "schema": {
                            "$ref": "#/definitions/CreateSnapshotAliaseResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/aliases/{SnapshotAliaseId}": {
            "delete": {
                "description": "Delete the snapshot alias",
                "operationId": "deleteSnapshotAliase",
                "parameters": [
                    {
                        "description": "Delete the snapshot alias",
                        "in": "path",
                        "name": "SnapshotAliaseId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "Retrieve snapshot alias information.",
                "operationId": "getSnapshotAliase",
                "parameters": [
                    {
                        "description": "Retrieve snapshot alias information.",
                        "in": "path",
                        "name": "SnapshotAliaseId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve snapshot alias information.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotAliases"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "put": {
                "description": "Modify snapshot alias. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateSnapshotAliase",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotAliase",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotAliase"
                        }
                    },
                    {
                        "description": "Modify snapshot alias. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "SnapshotAliaseId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/changelists": {
            "get": {
                "description": "List all changelists.",
                "operationId": "getSnapshotChangelists",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all changelists.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotChangelistsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/changelists/{Changelist}/lins": {
            "get": {
                "description": "Get entries from a changelist.",
                "operationId": "getChangelistLins",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Changelist",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get entries from a changelist.",
                        "schema": {
                            "$ref": "#/definitions/ChangelistLinsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "SnapshotChangelists"
                ]
            }
        },
        "/platform/1/snapshot/changelists/{Changelist}/lins/{ChangelistLinId}": {
            "get": {
                "description": "Get a single entry from the changelist.",
                "operationId": "getChangelistLin",
                "parameters": [
                    {
                        "description": "Get a single entry from the changelist.",
                        "in": "path",
                        "name": "ChangelistLinId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "Changelist",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a single entry from the changelist.",
                        "schema": {
                            "$ref": "#/definitions/ChangelistLins"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "SnapshotChangelists"
                ]
            }
        },
        "/platform/1/snapshot/changelists/{SnapshotChangelistId}": {
            "delete": {
                "description": "Delete the specified changelist.",
                "operationId": "deleteSnapshotChangelist",
                "parameters": [
                    {
                        "description": "Delete the specified changelist.",
                        "in": "path",
                        "name": "SnapshotChangelistId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "Retrieve basic information on a changelist.",
                "operationId": "getSnapshotChangelist",
                "parameters": [
                    {
                        "description": "Retrieve basic information on a changelist.",
                        "in": "path",
                        "name": "SnapshotChangelistId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve basic information on a changelist.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotChangelists"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/license": {
            "get": {
                "description": "Retrieve license information.",
                "operationId": "getSnapshotLicense",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve license information.",
                        "schema": {
                            "$ref": "#/definitions/LicenseLicense"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/pending": {
            "get": {
                "description": "Return list of snapshots to be taken.",
                "operationId": "getSnapshotPending",
                "parameters": [
                    {
                        "description": "Return no more than this many result at once (see resume).",
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Unix Epoch time to start generating matches. Default is now.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "Limit output only to the named schedule.",
                        "in": "query",
                        "name": "schedule",
                        "type": "string"
                    },
                    {
                        "description": "Unix Epoch time to end generating matches. Default is forever.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return list of snapshots to be taken.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotPending"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/repstates": {
            "get": {
                "description": "List all repstates.",
                "operationId": "getSnapshotRepstates",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all repstates.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotRepstatesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/repstates/{SnapshotRepstateId}": {
            "delete": {
                "description": "Delete the specified repstate.",
                "operationId": "deleteSnapshotRepstate",
                "parameters": [
                    {
                        "description": "Delete the specified repstate.",
                        "in": "path",
                        "name": "SnapshotRepstateId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "Retrieve basic information on a repstate.",
                "operationId": "getSnapshotRepstate",
                "parameters": [
                    {
                        "description": "Retrieve basic information on a repstate.",
                        "in": "path",
                        "name": "SnapshotRepstateId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve basic information on a repstate.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotRepstates"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/schedules": {
            "get": {
                "description": "List all or matching schedules.",
                "operationId": "listSnapshotSchedules",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.  Choices are id, name, path, pattern, schedule, duration, alias, next_run, and next_snapshot.  Default is id.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all or matching schedules.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotSchedulesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "post": {
                "description": "Create a new schedule.",
                "operationId": "createSnapshotSchedule",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotSchedule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotScheduleCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new schedule.",
                        "schema": {
                            "$ref": "#/definitions/CreateSnapshotScheduleResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/schedules/{SnapshotScheduleId}": {
            "delete": {
                "description": "Delete the schedule. This does not affect already created snapshots.",
                "operationId": "deleteSnapshotSchedule",
                "parameters": [
                    {
                        "description": "Delete the schedule. This does not affect already created snapshots.",
                        "in": "path",
                        "name": "SnapshotScheduleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "Retrieve the schedule.",
                "operationId": "getSnapshotSchedule",
                "parameters": [
                    {
                        "description": "Retrieve the schedule.",
                        "in": "path",
                        "name": "SnapshotScheduleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the schedule.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotSchedules"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "put": {
                "description": "Modify the schedule. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateSnapshotSchedule",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotSchedule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotSchedule"
                        }
                    },
                    {
                        "description": "Modify the schedule. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "SnapshotScheduleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/settings": {
            "get": {
                "description": "List all settings",
                "operationId": "getSnapshotSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all settings",
                        "schema": {
                            "$ref": "#/definitions/SnapshotSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateSnapshotSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotSettingsExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/snapshots": {
            "delete": {
                "description": "Delete all or matching snapshots.",
                "operationId": "deleteSnapshotSnapshots",
                "parameters": [
                    {
                        "description": "Only list snapshots matching this type.",
                        "enum": [
                            "all",
                            "alias",
                            "real"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "description": "Only list snapshots created by this schedule.",
                        "in": "query",
                        "name": "schedule",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "List all or matching snapshots.",
                "operationId": "listSnapshotSnapshots",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.  Choices are id, name, path, created, expires, size, has_locks, schedule, alias_target, alias_target_name, pct_filesystem, pct_reserve, and state.  Default is id.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Only list snapshots created by this schedule.",
                        "in": "query",
                        "name": "schedule",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Only list snapshots matching this state.",
                        "enum": [
                            "all",
                            "active",
                            "deleting"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Only list snapshots matching this type.",
                        "enum": [
                            "all",
                            "alias",
                            "real"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all or matching snapshots.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotSnapshotsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "post": {
                "description": "Create a new snapshot.",
                "operationId": "createSnapshotSnapshot",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotSnapshot",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotSnapshotCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new snapshot.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotSnapshotExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/snapshots-summary": {
            "get": {
                "description": "Return summary information about snapshots.",
                "operationId": "getSnapshotSnapshotsSummary",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return summary information about snapshots.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotSnapshotsSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/snapshots/{Sid}/locks": {
            "delete": {
                "description": "Delete all locks. Will try to drain count of recursively held locks so that the snapshot can be deleted.",
                "operationId": "deleteSnapshotLocks",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Sid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "SnapshotSnapshots"
                ]
            },
            "get": {
                "description": "List all locks.",
                "operationId": "listSnapshotLocks",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.  Choices are id, expires, and comment.  Default is id.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Sid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all locks.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotLocksExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "SnapshotSnapshots"
                ]
            },
            "post": {
                "description": "Create a new lock on this snapshot.",
                "operationId": "createSnapshotLock",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotLock",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotLockCreateParams"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Sid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new lock on this snapshot.",
                        "schema": {
                            "$ref": "#/definitions/CreateSnapshotLockResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "SnapshotSnapshots"
                ]
            }
        },
        "/platform/1/snapshot/snapshots/{Sid}/locks/{SnapshotLockId}": {
            "delete": {
                "description": "Delete the snapshot lock.",
                "operationId": "deleteSnapshotLock",
                "parameters": [
                    {
                        "description": "Delete the snapshot lock.",
                        "in": "path",
                        "name": "SnapshotLockId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Sid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "SnapshotSnapshots"
                ]
            },
            "get": {
                "description": "Retrieve lock information.",
                "operationId": "getSnapshotLock",
                "parameters": [
                    {
                        "description": "Retrieve lock information.",
                        "in": "path",
                        "name": "SnapshotLockId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Sid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve lock information.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotLocks"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "SnapshotSnapshots"
                ]
            },
            "put": {
                "description": "Modify lock. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateSnapshotLock",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotLock",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotLock"
                        }
                    },
                    {
                        "description": "Modify lock. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "SnapshotLockId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Sid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "SnapshotSnapshots"
                ]
            }
        },
        "/platform/1/snapshot/snapshots/{SnapshotSnapshotId}": {
            "delete": {
                "description": "Delete the snapshot. Deleted snapshots will be placed into a deleting state until the system can reclaim the space used by the snapshot.",
                "operationId": "deleteSnapshotSnapshot",
                "parameters": [
                    {
                        "description": "Delete the snapshot. Deleted snapshots will be placed into a deleting state until the system can reclaim the space used by the snapshot.",
                        "in": "path",
                        "name": "SnapshotSnapshotId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "Retrieve snapshot information.",
                "operationId": "getSnapshotSnapshot",
                "parameters": [
                    {
                        "description": "Retrieve snapshot information.",
                        "in": "path",
                        "name": "SnapshotSnapshotId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve snapshot information.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotSnapshots"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "put": {
                "description": "Modify snapshot. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateSnapshotSnapshot",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotSnapshot",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotSnapshot"
                        }
                    },
                    {
                        "description": "Modify snapshot. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "SnapshotSnapshotId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/statistics/current": {
            "get": {
                "description": "Retrieve stats.",
                "operationId": "getStatisticsCurrent",
                "parameters": [
                    {
                        "description": "Time in seconds to wait for results from remote nodes.",
                        "in": "query",
                        "name": "timeout",
                        "type": "integer"
                    },
                    {
                        "description": "If true, try to continue even if some stats are unavailable. In this case, errors will be present in the per-key returned data.",
                        "in": "query",
                        "name": "degraded",
                        "type": "boolean"
                    },
                    {
                        "description": "Node devid to query.  Either an <integer> or \"all\".  Can be used more than one time to query multiple nodes.  \"all\" queries all up nodes. 0 means query the local node. For \"cluster\" scoped keys, in any devid including 0 can be used.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "devid",
                        "type": "array"
                    },
                    {
                        "description": "Key names. Can be used more than one time to query multiple keys.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "key",
                        "type": "array"
                    },
                    {
                        "description": "If true, use name resolution to expand client addresses and other IDs.",
                        "in": "query",
                        "name": "expand_clientid",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve stats.",
                        "schema": {
                            "$ref": "#/definitions/StatisticsCurrent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/1/statistics/history": {
            "get": {
                "description": "Retrieve stats.",
                "operationId": "getStatisticsHistory",
                "parameters": [
                    {
                        "description": "Earliest time (Unix epoch seconds) of interest. Negative times are interpreted as relative (before) now.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "Minimum sampling interval time in seconds.  If native statistics are higher resolution, data will be down-sampled.",
                        "in": "query",
                        "name": "interval",
                        "type": "integer"
                    },
                    {
                        "description": "Latest time (Unix epoch seconds) of interest. Negative times are interpreted as relative (before) now. If not supplied, use now as the end time.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    },
                    {
                        "description": "Time in seconds to wait for results from remote nodes.",
                        "in": "query",
                        "name": "timeout",
                        "type": "integer"
                    },
                    {
                        "description": "Node devid to query.  Either an <integer> or \"all\".  Can be used more than one time to query multiple nodes.  \"all\" queries all up nodes. 0 means query the local node. For \"cluster\" scoped keys, in any devid including 0 can be used.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "devid",
                        "type": "array"
                    },
                    {
                        "description": "Only use statistics sources that reside in memory (faster, but with less retention).",
                        "in": "query",
                        "name": "memory_only",
                        "type": "boolean"
                    },
                    {
                        "description": "Key names. Can be used more than one time to query multiple keys.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "key",
                        "type": "array"
                    },
                    {
                        "description": "If true, try to continue even if some stats are unavailable. In this case, errors will be present in the per-key returned data.",
                        "in": "query",
                        "name": "degraded",
                        "type": "boolean"
                    },
                    {
                        "description": "If true, use name resolution to expand client addresses and other IDs.",
                        "in": "query",
                        "name": "expand_clientid",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve stats.",
                        "schema": {
                            "$ref": "#/definitions/StatisticsHistory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/1/statistics/keys": {
            "get": {
                "description": "List meta-data for matching keys.",
                "operationId": "getStatisticsKeys",
                "parameters": [
                    {
                        "description": "Only count matching keys, do not return meta-data.",
                        "in": "query",
                        "name": "count",
                        "type": "boolean"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Only list keys that can/cannot be queries. Default is true.",
                        "in": "query",
                        "name": "queryable",
                        "type": "boolean"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List meta-data for matching keys.",
                        "schema": {
                            "$ref": "#/definitions/StatisticsKeysExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/1/statistics/keys/{StatisticsKeyId}": {
            "get": {
                "description": "List key meta-data.",
                "operationId": "getStatisticsKey",
                "parameters": [
                    {
                        "description": "List key meta-data.",
                        "in": "path",
                        "name": "StatisticsKeyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List key meta-data.",
                        "schema": {
                            "$ref": "#/definitions/StatisticsKeys"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/1/statistics/protocols": {
            "get": {
                "description": "Retrieve protocol list.",
                "operationId": "getStatisticsProtocols",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve protocol list.",
                        "schema": {
                            "$ref": "#/definitions/StatisticsProtocols"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/1/storagepool/compatibilities/class/active": {
            "get": {
                "description": "Get a list of active compatibilities",
                "operationId": "listCompatibilitiesClassActive",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get a list of active compatibilities",
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesClassActiveExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "post": {
                "description": "Create a new compatibility",
                "operationId": "createCompatibilitiesClassActiveItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CompatibilitiesClassActiveItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesClassActiveItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new compatibility",
                        "schema": {
                            "$ref": "#/definitions/CreateCompatibilitiesClassActiveItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/compatibilities/class/active/{CompatibilitiesClassActiveId}": {
            "delete": {
                "description": "Delete an active compatibility by id",
                "operationId": "deleteCompatibilitiesClassActiveById",
                "parameters": [
                    {
                        "description": "Delete an active compatibility by id",
                        "in": "path",
                        "name": "CompatibilitiesClassActiveId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "get": {
                "description": "Get an active compatibilities by id",
                "operationId": "getCompatibilitiesClassActiveById",
                "parameters": [
                    {
                        "description": "Get an active compatibilities by id",
                        "in": "path",
                        "name": "CompatibilitiesClassActiveId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get an active compatibilities by id",
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesClassActive"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/compatibilities/class/available": {
            "get": {
                "description": "Get a list of available compatibilities",
                "operationId": "getCompatibilitiesClassAvailable",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get a list of available compatibilities",
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesClassAvailable"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/compatibilities/ssd/active": {
            "get": {
                "description": "Get a list of active ssd compatibilities",
                "operationId": "listCompatibilitiesSsdActive",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get a list of active ssd compatibilities",
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesSsdActiveExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "post": {
                "description": "Create a new ssd compatibility",
                "operationId": "createCompatibilitiesSsdActiveItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CompatibilitiesSsdActiveItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesSsdActiveItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new ssd compatibility",
                        "schema": {
                            "$ref": "#/definitions/CreateCompatibilitiesClassActiveItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/compatibilities/ssd/active/{CompatibilitiesSsdActiveId}": {
            "delete": {
                "description": "Delete an active ssd compatibility by id",
                "operationId": "deleteCompatibilitiesSsdActiveById",
                "parameters": [
                    {
                        "description": "Delete an active ssd compatibility by id",
                        "in": "path",
                        "name": "CompatibilitiesSsdActiveId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "get": {
                "description": "Get a active ssd compatibilities by id",
                "operationId": "getCompatibilitiesSsdActiveById",
                "parameters": [
                    {
                        "description": "Get a active ssd compatibilities by id",
                        "in": "path",
                        "name": "CompatibilitiesSsdActiveId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a active ssd compatibilities by id",
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesSsdActive"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/compatibilities/ssd/available": {
            "get": {
                "description": "Get a list of available ssd compatibilities",
                "operationId": "getCompatibilitiesSsdAvailable",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get a list of available ssd compatibilities",
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesSsdAvailable"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/nodepools": {
            "get": {
                "description": "List all node pools.",
                "operationId": "listStoragepoolNodepools",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all node pools.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolNodepoolsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "post": {
                "description": "Create a new node pool.",
                "operationId": "createStoragepoolNodepool",
                "parameters": [
                    {
                        "in": "body",
                        "name": "StoragepoolNodepool",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StoragepoolNodepoolCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new node pool.",
                        "schema": {
                            "$ref": "#/definitions/CreateStoragepoolNodepoolResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/nodepools/{StoragepoolNodepoolId}": {
            "delete": {
                "description": "Delete node pool.",
                "operationId": "deleteStoragepoolNodepool",
                "parameters": [
                    {
                        "description": "Delete node pool.",
                        "in": "path",
                        "name": "StoragepoolNodepoolId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "get": {
                "description": "Retrieve node pool information.",
                "operationId": "getStoragepoolNodepool",
                "parameters": [
                    {
                        "description": "Retrieve node pool information.",
                        "in": "path",
                        "name": "StoragepoolNodepoolId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve node pool information.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolNodepools"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "put": {
                "description": "Modify node pool. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateStoragepoolNodepool",
                "parameters": [
                    {
                        "in": "body",
                        "name": "StoragepoolNodepool",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StoragepoolNodepool"
                        }
                    },
                    {
                        "description": "Modify node pool. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "StoragepoolNodepoolId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/settings": {
            "get": {
                "description": "List all settings.",
                "operationId": "getStoragepoolSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all settings.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateStoragepoolSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "StoragepoolSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StoragepoolSettingsExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/status": {
            "get": {
                "description": "List any health conditions detected.",
                "operationId": "getStoragepoolStatus",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List any health conditions detected.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/storagepools": {
            "get": {
                "description": "List all storage pools.",
                "operationId": "getStoragepoolStoragepools",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all storage pools.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolStoragepools"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/suggested_protection/{StoragepoolSuggestedProtectionNid}": {
            "get": {
                "description": "Retrieve the suggested protection policy.",
                "operationId": "getStoragepoolSuggestedProtectionNid",
                "parameters": [
                    {
                        "description": "Retrieve the suggested protection policy.",
                        "in": "path",
                        "name": "StoragepoolSuggestedProtectionNid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the suggested protection policy.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolSuggestedProtection"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/tiers": {
            "delete": {
                "description": "Delete all tiers.",
                "operationId": "deleteStoragepoolTiers",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "get": {
                "description": "List all tiers.",
                "operationId": "listStoragepoolTiers",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all tiers.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolTiersExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "post": {
                "description": "Create a new tier.",
                "operationId": "createStoragepoolTier",
                "parameters": [
                    {
                        "in": "body",
                        "name": "StoragepoolTier",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StoragepoolTierCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new tier.",
                        "schema": {
                            "$ref": "#/definitions/CreateStoragepoolNodepoolResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/tiers/{StoragepoolTierId}": {
            "delete": {
                "description": "Delete tier.",
                "operationId": "deleteStoragepoolTier",
                "parameters": [
                    {
                        "description": "Delete tier.",
                        "in": "path",
                        "name": "StoragepoolTierId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "get": {
                "description": "Retrieve tier information.",
                "operationId": "getStoragepoolTier",
                "parameters": [
                    {
                        "description": "Retrieve tier information.",
                        "in": "path",
                        "name": "StoragepoolTierId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve tier information.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolTiers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "put": {
                "description": "Modify tier. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateStoragepoolTier",
                "parameters": [
                    {
                        "in": "body",
                        "name": "StoragepoolTier",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StoragepoolTier"
                        }
                    },
                    {
                        "description": "Modify tier. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "StoragepoolTierId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/unprovisioned": {
            "get": {
                "description": "Get the uprovisioned nodes and drives",
                "operationId": "getStoragepoolUnprovisioned",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get the uprovisioned nodes and drives",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolUnprovisioned"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/sync/history/file": {
            "get": {
                "description": "List file operations performance data.",
                "operationId": "getHistoryFile",
                "parameters": [
                    {
                        "description": "Begin timestamp for time-series report.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "End timestamp for time-series report.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List file operations performance data.",
                        "schema": {
                            "$ref": "#/definitions/HistoryFile"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/history/network": {
            "get": {
                "description": "List network operations performance data.",
                "operationId": "getHistoryNetwork",
                "parameters": [
                    {
                        "description": "Begin timestamp for time-series report.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "End timestamp for time-series report.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List network operations performance data.",
                        "schema": {
                            "$ref": "#/definitions/HistoryFile"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/jobs": {
            "get": {
                "description": "Get a list of SyncIQ jobs.",
                "operationId": "listSyncJobs",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "The state of the job.",
                        "enum": [
                            "scheduled",
                            "running",
                            "paused",
                            "finished",
                            "failed",
                            "canceled",
                            "needs_attention",
                            "unknown"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of SyncIQ jobs.",
                        "schema": {
                            "$ref": "#/definitions/SyncJobsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "post": {
                "description": "Start a SyncIQ job.",
                "operationId": "createSyncJob",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncJob",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncJobCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Start a SyncIQ job.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/jobs/{SyncJobId}": {
            "get": {
                "description": "View a single SyncIQ job.",
                "operationId": "getSyncJob",
                "parameters": [
                    {
                        "description": "View a single SyncIQ job.",
                        "in": "path",
                        "name": "SyncJobId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ job.",
                        "schema": {
                            "$ref": "#/definitions/SyncJobs"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "put": {
                "description": "Perform an action (pause, cancel, etc...) on a single job.",
                "operationId": "updateSyncJob",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncJob",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncJob"
                        }
                    },
                    {
                        "description": "Perform an action (pause, cancel, etc...) on a single job.",
                        "in": "path",
                        "name": "SyncJobId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/license": {
            "get": {
                "description": "Retrieve license information.",
                "operationId": "getSyncLicense",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve license information.",
                        "schema": {
                            "$ref": "#/definitions/LicenseLicense"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/policies": {
            "delete": {
                "description": "Delete all SyncIQ policies.",
                "operationId": "deleteSyncPolicies",
                "parameters": [
                    {
                        "description": "Skip deleting the policy association on the target.",
                        "in": "query",
                        "name": "local_only",
                        "type": "boolean"
                    },
                    {
                        "description": "Ignore any running jobs when preparing to delete a policy.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "get": {
                "description": "List all SyncIQ policies.",
                "operationId": "listSyncPolicies",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Show only summary properties",
                        "in": "query",
                        "name": "summary",
                        "type": "boolean"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all SyncIQ policies.",
                        "schema": {
                            "$ref": "#/definitions/SyncPoliciesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "post": {
                "description": "Create a SyncIQ policy.",
                "operationId": "createSyncPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncPolicyCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a SyncIQ policy.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/policies/{Policy}/reset": {
            "post": {
                "description": "Reset a SyncIQ policy incremental state and force a full sync/copy.",
                "operationId": "createPolicyResetItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "PolicyResetItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Policy",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reset a SyncIQ policy incremental state and force a full sync/copy.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "SyncPolicies"
                ]
            }
        },
        "/platform/1/sync/policies/{SyncPolicyId}": {
            "delete": {
                "description": "Delete a single SyncIQ policy.",
                "operationId": "deleteSyncPolicy",
                "parameters": [
                    {
                        "description": "Skip deleting the policy association on the target.",
                        "in": "query",
                        "name": "local_only",
                        "type": "boolean"
                    },
                    {
                        "description": "Ignore any running jobs when preparing to delete a policy.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    },
                    {
                        "description": "Delete a single SyncIQ policy.",
                        "in": "path",
                        "name": "SyncPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "get": {
                "description": "View a single SyncIQ policy.",
                "operationId": "getSyncPolicy",
                "parameters": [
                    {
                        "description": "View a single SyncIQ policy.",
                        "in": "path",
                        "name": "SyncPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ policy.",
                        "schema": {
                            "$ref": "#/definitions/SyncPolicies"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "put": {
                "description": "Modify a single SyncIQ policy.",
                "operationId": "updateSyncPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncPolicy"
                        }
                    },
                    {
                        "description": "Modify a single SyncIQ policy.",
                        "in": "path",
                        "name": "SyncPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/reports": {
            "get": {
                "description": "Get a list of SyncIQ reports.  By default 10 reports are returned per policy, unless otherwise specified by 'reports_per_policy'.",
                "operationId": "getSyncReports",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs started more recently than the specified number of days ago.",
                        "in": "query",
                        "name": "newer_than",
                        "type": "integer"
                    },
                    {
                        "description": "Filter the returned reports to include only those with this policy name.",
                        "in": "query",
                        "name": "policy_name",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs are in this state.",
                        "enum": [
                            "scheduled",
                            "running",
                            "paused",
                            "finished",
                            "failed",
                            "canceled",
                            "needs_attention",
                            "unknown"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "If specified, only the N most recent reports will be returned per policy.  If no other query args are present this argument defaults to 10. ",
                        "in": "query",
                        "name": "reports_per_policy",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of SyncIQ reports.  By default 10 reports are returned per policy, unless otherwise specified by 'reports_per_policy'.",
                        "schema": {
                            "$ref": "#/definitions/SyncReportsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/reports-rotate": {
            "get": {
                "description": "Whether the rotation is still running or not.",
                "operationId": "listSyncReportsRotate",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Whether the rotation is still running or not.",
                        "schema": {
                            "$ref": "#/definitions/SyncReportsRotate"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "post": {
                "description": "Rotate the records in the database(s).",
                "operationId": "createSyncReportsRotateItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncReportsRotateItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rotate the records in the database(s).",
                        "schema": {
                            "$ref": "#/definitions/CreateSyncReportsRotateItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/reports/{Rid}/subreports": {
            "get": {
                "description": "Get a list of SyncIQ subreports for a report.",
                "operationId": "getReportSubreports",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs started more recently than the specified number of days ago.",
                        "in": "query",
                        "name": "newer_than",
                        "type": "integer"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs are in this state.",
                        "enum": [
                            "scheduled",
                            "running",
                            "paused",
                            "finished",
                            "failed",
                            "canceled",
                            "needs_attention",
                            "unknown"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Rid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of SyncIQ subreports for a report.",
                        "schema": {
                            "$ref": "#/definitions/ReportSubreportsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "SyncReports"
                ]
            }
        },
        "/platform/1/sync/reports/{Rid}/subreports/{ReportSubreportId}": {
            "get": {
                "description": "View a single SyncIQ subreport.",
                "operationId": "getReportSubreport",
                "parameters": [
                    {
                        "description": "View a single SyncIQ subreport.",
                        "in": "path",
                        "name": "ReportSubreportId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Rid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ subreport.",
                        "schema": {
                            "$ref": "#/definitions/ReportSubreports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "SyncReports"
                ]
            }
        },
        "/platform/1/sync/reports/{SyncReportId}": {
            "get": {
                "description": "View a single SyncIQ report.",
                "operationId": "getSyncReport",
                "parameters": [
                    {
                        "description": "View a single SyncIQ report.",
                        "in": "path",
                        "name": "SyncReportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ report.",
                        "schema": {
                            "$ref": "#/definitions/SyncReports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/rules": {
            "delete": {
                "description": "Delete all SyncIQ performance rules or all rules of a specified type.",
                "operationId": "deleteSyncRules",
                "parameters": [
                    {
                        "description": "Delete all rules of the specified rule type only.",
                        "enum": [
                            "bandwidth",
                            "file_count",
                            "cpu"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "get": {
                "description": "List all SyncIQ performance rules.",
                "operationId": "listSyncRules",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned rules to include only those with this rule type.",
                        "enum": [
                            "bandwidth",
                            "file_count",
                            "cpu"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all SyncIQ performance rules.",
                        "schema": {
                            "$ref": "#/definitions/SyncRulesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "post": {
                "description": "Create a new SyncIQ performance rule.",
                "operationId": "createSyncRule",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncRule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncRuleCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new SyncIQ performance rule.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/rules/{SyncRuleId}": {
            "delete": {
                "description": "Delete a single SyncIQ performance rule.",
                "operationId": "deleteSyncRule",
                "parameters": [
                    {
                        "description": "Delete a single SyncIQ performance rule.",
                        "in": "path",
                        "name": "SyncRuleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "get": {
                "description": "View a single SyncIQ performance rule.",
                "operationId": "getSyncRule",
                "parameters": [
                    {
                        "description": "View a single SyncIQ performance rule.",
                        "in": "path",
                        "name": "SyncRuleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ performance rule.",
                        "schema": {
                            "$ref": "#/definitions/SyncRules"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "put": {
                "description": "Modify a single SyncIQ performance rule.",
                "operationId": "updateSyncRule",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncRule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncRule"
                        }
                    },
                    {
                        "description": "Modify a single SyncIQ performance rule.",
                        "in": "path",
                        "name": "SyncRuleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/settings": {
            "get": {
                "description": "Retrieve the global SyncIQ settings.",
                "operationId": "getSyncSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the global SyncIQ settings.",
                        "schema": {
                            "$ref": "#/definitions/SyncSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "put": {
                "description": "Modify the global SyncIQ settings.  All input fields are optional, but one or more must be supplied.",
                "operationId": "updateSyncSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncSettingsSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/target/policies": {
            "get": {
                "description": "List all SyncIQ target policies.",
                "operationId": "getTargetPolicies",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned policies to include only those with this target path.",
                        "in": "query",
                        "name": "target_path",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all SyncIQ target policies.",
                        "schema": {
                            "$ref": "#/definitions/TargetPoliciesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/target/policies/{Policy}/cancel": {
            "post": {
                "description": "Cancel the most recent SyncIQ job for this policy from the target side.",
                "operationId": "createPoliciesPolicyCancelItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "PoliciesPolicyCancelItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Policy",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cancel the most recent SyncIQ job for this policy from the target side.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "SyncTarget"
                ]
            }
        },
        "/platform/1/sync/target/policies/{TargetPolicyId}": {
            "delete": {
                "description": "Break the target association with this cluster for this policy.",
                "operationId": "deleteTargetPolicy",
                "parameters": [
                    {
                        "description": "Ignore any running jobs when preparing to delete the policy target association.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    },
                    {
                        "description": "Break the target association with this cluster for this policy.",
                        "in": "path",
                        "name": "TargetPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "get": {
                "description": "View a single SyncIQ target policy.",
                "operationId": "getTargetPolicy",
                "parameters": [
                    {
                        "description": "View a single SyncIQ target policy.",
                        "in": "path",
                        "name": "TargetPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ target policy.",
                        "schema": {
                            "$ref": "#/definitions/TargetPolicies"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/target/reports": {
            "get": {
                "description": "Get a list of SyncIQ target reports.  By default 10 reports are returned per policy, unless otherwise specified by 'reports_per_policy'.",
                "operationId": "getTargetReports",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs started more recently than the specified number of days ago.",
                        "in": "query",
                        "name": "newer_than",
                        "type": "integer"
                    },
                    {
                        "description": "Filter the returned reports to include only those with this policy name.",
                        "in": "query",
                        "name": "policy_name",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs are in this state.",
                        "enum": [
                            "scheduled",
                            "running",
                            "paused",
                            "finished",
                            "failed",
                            "canceled",
                            "needs_attention",
                            "unknown"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "If specified, only the N most recent reports will be returned per policy.  If no other query args are present this argument defaults to 10. ",
                        "in": "query",
                        "name": "reports_per_policy",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of SyncIQ target reports.  By default 10 reports are returned per policy, unless otherwise specified by 'reports_per_policy'.",
                        "schema": {
                            "$ref": "#/definitions/TargetReportsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/target/reports/{Rid}/subreports": {
            "get": {
                "description": "Get a list of SyncIQ target subreports for a report.",
                "operationId": "getReportsReportSubreports",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs started more recently than the specified number of days ago.",
                        "in": "query",
                        "name": "newer_than",
                        "type": "integer"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs are in this state.",
                        "enum": [
                            "scheduled",
                            "running",
                            "paused",
                            "finished",
                            "failed",
                            "canceled",
                            "needs_attention",
                            "unknown"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Rid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of SyncIQ target subreports for a report.",
                        "schema": {
                            "$ref": "#/definitions/ReportsReportSubreportsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "SyncTarget"
                ]
            }
        },
        "/platform/1/sync/target/reports/{Rid}/subreports/{ReportsReportSubreportId}": {
            "get": {
                "description": "View a single SyncIQ target subreport.",
                "operationId": "getReportsReportSubreport",
                "parameters": [
                    {
                        "description": "View a single SyncIQ target subreport.",
                        "in": "path",
                        "name": "ReportsReportSubreportId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Rid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ target subreport.",
                        "schema": {
                            "$ref": "#/definitions/ReportsReportSubreports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "SyncTarget"
                ]
            }
        },
        "/platform/1/sync/target/reports/{TargetReportId}": {
            "get": {
                "description": "View a single SyncIQ target report.",
                "operationId": "getTargetReport",
                "parameters": [
                    {
                        "description": "View a single SyncIQ target report.",
                        "in": "path",
                        "name": "TargetReportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ target report.",
                        "schema": {
                            "$ref": "#/definitions/TargetReports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/worm/domains": {
            "get": {
                "description": "List all WORM domains.",
                "operationId": "listWormDomains",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all WORM domains.",
                        "schema": {
                            "$ref": "#/definitions/WormDomainsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Worm"
                ]
            },
            "post": {
                "description": "Create a WORM domain.",
                "operationId": "createWormDomain",
                "parameters": [
                    {
                        "in": "body",
                        "name": "WormDomain",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WormDomainCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a WORM domain.",
                        "schema": {
                            "$ref": "#/definitions/WormDomainExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Worm"
                ]
            }
        },
        "/platform/1/worm/domains/{WormDomainId}": {
            "get": {
                "description": "View a single WORM domain.",
                "operationId": "getWormDomain",
                "parameters": [
                    {
                        "description": "View a single WORM domain.",
                        "in": "path",
                        "name": "WormDomainId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single WORM domain.",
                        "schema": {
                            "$ref": "#/definitions/WormDomains"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Worm"
                ]
            },
            "put": {
                "description": "Modify a single WORM domain.",
                "operationId": "updateWormDomain",
                "parameters": [
                    {
                        "in": "body",
                        "name": "WormDomain",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WormDomain"
                        }
                    },
                    {
                        "description": "Modify a single WORM domain.",
                        "in": "path",
                        "name": "WormDomainId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Worm"
                ]
            }
        },
        "/platform/1/worm/settings": {
            "get": {
                "description": "Get the global WORM settings.",
                "operationId": "getWormSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get the global WORM settings.",
                        "schema": {
                            "$ref": "#/definitions/WormSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Worm"
                ]
            },
            "put": {
                "description": "Modify the global WORM settings.  All input fields are optional, but one or more must be supplied.",
                "operationId": "updateWormSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "WormSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WormSettingsExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Worm"
                ]
            }
        },
        "/platform/1/zones": {
            "get": {
                "description": "List all access zones.",
                "operationId": "listZones",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all access zones.",
                        "schema": {
                            "$ref": "#/definitions/Zones"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Zones"
                ]
            },
            "post": {
                "description": "Create a new access zone.",
                "operationId": "createZone",
                "parameters": [
                    {
                        "in": "body",
                        "name": "Zone",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ZoneCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new access zone.",
                        "schema": {
                            "$ref": "#/definitions/CreateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Zones"
                ]
            }
        },
        "/platform/1/zones-summary": {
            "get": {
                "description": "Retrieve access zone summary information.",
                "operationId": "getZonesSummary",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve access zone summary information.",
                        "schema": {
                            "$ref": "#/definitions/ZonesSummaryExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "ZonesSummary"
                ]
            }
        },
        "/platform/1/zones-summary/{ZonesSummaryZone}": {
            "get": {
                "description": "Retrieve non-privileged access zone information.",
                "operationId": "getZonesSummaryZone",
                "parameters": [
                    {
                        "description": "Retrieve non-privileged access zone information.",
                        "in": "path",
                        "name": "ZonesSummaryZone",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve non-privileged access zone information.",
                        "schema": {
                            "$ref": "#/definitions/ZonesSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "ZonesSummary"
                ]
            }
        },
        "/platform/1/zones/{ZoneId}": {
            "delete": {
                "description": "Delete the access zone.",
                "operationId": "deleteZone",
                "parameters": [
                    {
                        "description": "Delete the access zone.",
                        "in": "path",
                        "name": "ZoneId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Zones"
                ]
            },
            "get": {
                "description": "Retrieve the access zone information.",
                "operationId": "getZone",
                "parameters": [
                    {
                        "description": "Retrieve the access zone information.",
                        "in": "path",
                        "name": "ZoneId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the access zone information.",
                        "schema": {
                            "$ref": "#/definitions/Zones"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Zones"
                ]
            },
            "put": {
                "description": "Modify the access zone. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateZone",
                "parameters": [
                    {
                        "in": "body",
                        "name": "Zone",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Zone"
                        }
                    },
                    {
                        "description": "Modify the access zone. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "ZoneId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Zones"
                ]
            }
        },
        "/platform/2/event/events": {
            "get": {
                "description": "Retrieve event information.",
                "operationId": "getEventEvents",
                "parameters": [
                    {
                        "description": "If true, return a count of events.",
                        "in": "query",
                        "name": "count",
                        "type": "boolean"
                    },
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Specifies the earliest time to query events from.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "Specifies the latest time to query events from.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    },
                    {
                        "description": "Specifies the event_id of events to query for.",
                        "in": "query",
                        "items": {
                            "type": "integer"
                        },
                        "name": "event_type",
                        "type": "array"
                    },
                    {
                        "description": "If true, only return events that have been coalesced.",
                        "in": "query",
                        "name": "coalesced",
                        "type": "boolean"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Specifies the devid of events to query for.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "devid",
                        "type": "array"
                    },
                    {
                        "description": "If true, only return events that have been acknowledged.",
                        "in": "query",
                        "name": "acknowledged",
                        "type": "boolean"
                    },
                    {
                        "description": "If true, only return events that have ended.",
                        "in": "query",
                        "name": "ended",
                        "type": "boolean"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "If true, only return coalescing events.",
                        "in": "query",
                        "name": "coalescing",
                        "type": "boolean"
                    },
                    {
                        "description": "Specifies the severity of events to query for.",
                        "in": "query",
                        "items": {
                            "enum": [
                                "information",
                                "warning",
                                "critical",
                                "emergency"
                            ],
                            "type": "string"
                        },
                        "name": "severity",
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve event information.",
                        "schema": {
                            "$ref": "#/definitions/EventEventsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/platform/2/event/events/{EventEventId}": {
            "get": {
                "description": "Retrieve event information.",
                "operationId": "getEventEvent",
                "parameters": [
                    {
                        "description": "Retrieve event information.",
                        "in": "path",
                        "name": "EventEventId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve event information.",
                        "schema": {
                            "$ref": "#/definitions/EventEvents"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/platform/2/protocols/nfs/aliases": {
            "get": {
                "description": "List all NFS aliases.",
                "operationId": "listNfsAliases",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Check for conflicts when listing exports.",
                        "in": "query",
                        "name": "check",
                        "type": "boolean"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all NFS aliases.",
                        "schema": {
                            "$ref": "#/definitions/NfsAliasesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Create a new NFS alias.",
                "operationId": "createNfsAliase",
                "parameters": [
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "NfsAliase",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsAliaseCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new NFS alias.",
                        "schema": {
                            "$ref": "#/definitions/CreateNfsAliaseResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/aliases/{NfsAliaseId}": {
            "delete": {
                "description": "Delete the export.",
                "operationId": "deleteNfsAliase",
                "parameters": [
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Delete the export.",
                        "in": "path",
                        "name": "NfsAliaseId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "Retrieve export information.",
                "operationId": "getNfsAliase",
                "parameters": [
                    {
                        "description": "If specified as effective or not specified, all export fields are shown.  If specified as user, only fields with non-default values are shown.",
                        "enum": [
                            "effective",
                            "user"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve export information.",
                        "in": "path",
                        "name": "NfsAliaseId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve export information.",
                        "schema": {
                            "$ref": "#/definitions/NfsAliases"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the alias. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateNfsAliase",
                "parameters": [
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "NfsAliase",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsAliase"
                        }
                    },
                    {
                        "description": "Modify the alias. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "NfsAliaseId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/check": {
            "get": {
                "description": "Retrieve NFS export validation information.",
                "operationId": "getNfsCheck",
                "parameters": [
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve NFS export validation information.",
                        "schema": {
                            "$ref": "#/definitions/NfsCheckExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/exports": {
            "get": {
                "description": "List all NFS exports.",
                "operationId": "listNfsExports",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "If specified as effective or not specified, all export fields are shown.  If specified as user, only fields with non-default values are shown.",
                        "enum": [
                            "effective",
                            "user"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Check for conflicts when listing exports.",
                        "in": "query",
                        "name": "check",
                        "type": "boolean"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all NFS exports.",
                        "schema": {
                            "$ref": "#/definitions/NfsExportsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Create a new NFS export.",
                "operationId": "createNfsExport",
                "parameters": [
                    {
                        "description": "If true, the export will be created even if it conflicts with another export.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    },
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "NfsExport",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsExportCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new NFS export.",
                        "schema": {
                            "$ref": "#/definitions/CreateQuotaReportResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/exports-summary": {
            "get": {
                "description": "Retrieve NFS export summary information.",
                "operationId": "getNfsExportsSummary",
                "parameters": [
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve NFS export summary information.",
                        "schema": {
                            "$ref": "#/definitions/NfsExportsSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/exports/{NfsExportId}": {
            "delete": {
                "description": "Delete the export.",
                "operationId": "deleteNfsExport",
                "parameters": [
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Delete the export.",
                        "in": "path",
                        "name": "NfsExportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "Retrieve export information.",
                "operationId": "getNfsExport",
                "parameters": [
                    {
                        "description": "If specified as effective or not specified, all export fields are shown.  If specified as user, only fields with non-default values are shown.",
                        "enum": [
                            "effective",
                            "user"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve export information.",
                        "in": "path",
                        "name": "NfsExportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve export information.",
                        "schema": {
                            "$ref": "#/definitions/NfsExports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the export. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateNfsExport",
                "parameters": [
                    {
                        "description": "If true, the export will be updated even if that change conflicts with another export.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    },
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "NfsExport",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsExport"
                        }
                    },
                    {
                        "description": "Modify the export. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "NfsExportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/nlm/locks": {
            "get": {
                "description": "List all NLM locks.",
                "operationId": "getNfsNlmLocks",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all NLM locks.",
                        "schema": {
                            "$ref": "#/definitions/NfsNlmLocks"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/nlm/sessions": {
            "get": {
                "description": "List all NLM sessions.",
                "operationId": "getNfsNlmSessions",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all NLM sessions.",
                        "schema": {
                            "$ref": "#/definitions/NfsNlmSessions"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/nlm/sessions/{NfsNlmSessionId}": {
            "delete": {
                "description": "Delete an NLM session.",
                "operationId": "deleteNfsNlmSession",
                "parameters": [
                    {
                        "description": "Delete an NLM session.",
                        "in": "path",
                        "name": "NfsNlmSessionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/nlm/waiters": {
            "get": {
                "description": "List all NLM lock waiters.",
                "operationId": "getNfsNlmWaiters",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all NLM lock waiters.",
                        "schema": {
                            "$ref": "#/definitions/NfsNlmWaiters"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/reload": {
            "post": {
                "description": "Reload default NFS export configuration.",
                "operationId": "createNfsReloadItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NfsReloadItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reload default NFS export configuration.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/settings/export": {
            "get": {
                "description": "Retrieve export information.",
                "operationId": "getNfsSettingsExport",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve export information.",
                        "schema": {
                            "$ref": "#/definitions/NfsSettingsExport"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the default values for NFS exports. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateNfsSettingsExport",
                "parameters": [
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "NfsSettingsExport",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsSettingsExportSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/settings/global": {
            "get": {
                "description": "Retrieve the NFS configuration.",
                "operationId": "getNfsSettingsGlobal",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the NFS configuration.",
                        "schema": {
                            "$ref": "#/definitions/NfsSettingsGlobal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the default values for NFS exports. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateNfsSettingsGlobal",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NfsSettingsGlobal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsSettingsGlobalSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/settings/zone": {
            "get": {
                "description": "Retrieve the NFS server settings for this zone.",
                "operationId": "getNfsSettingsZone",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the NFS server settings for this zone.",
                        "schema": {
                            "$ref": "#/definitions/NfsSettingsZone"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the NFS server settings for this zone.",
                "operationId": "updateNfsSettingsZone",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NfsSettingsZone",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsSettingsZoneSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "security": [
        {
            "basic_auth": []
        }
    ],
    "securityDefinitions": {
        "basic_auth": {
            "type": "basic"
        }
    },
    "swagger": "2.0"
}